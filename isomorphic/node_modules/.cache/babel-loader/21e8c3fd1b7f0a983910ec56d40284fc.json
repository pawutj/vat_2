{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nvar _isDisposable = require('./isDisposable');\n\nvar _isDisposable2 = _interopRequireDefault(_isDisposable);\n\nvar SerialDisposable = function () {\n  function SerialDisposable() {\n    _classCallCheck(this, SerialDisposable);\n\n    this.isDisposed = false;\n    this.current = null;\n  }\n  /**\n   * Gets the underlying disposable.\n   * @return The underlying disposable.\n   */\n\n\n  SerialDisposable.prototype.getDisposable = function getDisposable() {\n    return this.current;\n  };\n  /**\n   * Sets the underlying disposable.\n   * @param {Disposable} value The new underlying disposable.\n   */\n\n\n  SerialDisposable.prototype.setDisposable = function setDisposable() {\n    var value = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\n    if (value != null && !_isDisposable2['default'](value)) {\n      throw new Error('Expected either an empty value or a valid disposable');\n    }\n\n    var isDisposed = this.isDisposed;\n    var previous = undefined;\n\n    if (!isDisposed) {\n      previous = this.current;\n      this.current = value;\n    }\n\n    if (previous) {\n      previous.dispose();\n    }\n\n    if (isDisposed && value) {\n      value.dispose();\n    }\n  };\n  /**\n   * Disposes the underlying disposable as well as all future replacements.\n   */\n\n\n  SerialDisposable.prototype.dispose = function dispose() {\n    if (this.isDisposed) {\n      return;\n    }\n\n    this.isDisposed = true;\n    var previous = this.current;\n    this.current = null;\n\n    if (previous) {\n      previous.dispose();\n    }\n  };\n\n  return SerialDisposable;\n}();\n\nexports['default'] = SerialDisposable;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}