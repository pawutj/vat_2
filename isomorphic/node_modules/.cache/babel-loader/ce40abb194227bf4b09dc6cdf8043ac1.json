{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\containers\\\\ScrumBoard\\\\Column\\\\Column.js\";\nimport React from 'react';\nimport { Popconfirm, Popover } from 'antd';\nimport { Draggable } from 'react-beautiful-dnd';\nimport TaskList from '../Task/TaskList/TaskList';\nimport { IconSvg } from '../../../components/ScrumBoard/IconSvg/IconSvg';\nimport Title from '../../../components/ScrumBoard/Title';\nimport CreateOrUpdateColumn from './ColumnCreateOrUpdate/ColumnCreateOrUpdate';\nimport { connect } from 'react-redux';\nimport scrumBoardActions from '../../../redux/scrumBoard/actions';\nimport drawerActions from '../../../redux/drawer/actions';\nimport MoreIcon from \"../../../static/Images/16.svg\";\nimport Plus from \"../../../static/Images/24.svg\";\nimport { Container, Header, PlusIcon, MoreActionsWrapper } from './Column.style';\n\nvar Column = function Column(_ref) {\n  var title = _ref.title,\n      column = _ref.column,\n      tasks = _ref.tasks,\n      index = _ref.index,\n      boardId = _ref.boardId,\n      editColumn = _ref.editColumn,\n      cancelEditColumn = _ref.cancelEditColumn,\n      deleteColumnWatcher = _ref.deleteColumnWatcher,\n      openDrawer = _ref.openDrawer,\n      isScrollable = _ref.isScrollable;\n  var MoreActions = React.createElement(MoreActionsWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    onClick: function onClick() {\n      return editColumn(column);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Rename Column\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Popconfirm, {\n    title: \"Are you sure delete this Column?\",\n    okText: \"Yes\",\n    cancelText: \"No\",\n    onConfirm: function onConfirm() {\n      return deleteColumnWatcher({\n        column_id: column.id,\n        board_id: boardId\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Delete Column\")));\n  return React.createElement(Draggable, {\n    draggableId: title,\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, function (provided, snapshot) {\n    return React.createElement(Container, Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), column.editing ? React.createElement(CreateOrUpdateColumn, {\n      initials: column,\n      onCancel: function onCancel() {\n        return cancelEditColumn(column);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }) : React.createElement(Header, {\n      isDragging: snapshot.isDragging,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Title, Object.assign({\n      isDragging: snapshot.isDragging\n    }, provided.dragHandleProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), title), React.createElement(PlusIcon, {\n      src: Plus,\n      onClick: function onClick() {\n        return openDrawer({\n          drawerType: 'CREATE_OR_EDIT_TASK',\n          drawerProps: {\n            columnId: column.id\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Popover, {\n      placement: \"bottom\",\n      content: MoreActions,\n      trigger: \"click\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(IconSvg, {\n      src: MoreIcon,\n      border: \"none\",\n      padding: \"0\",\n      mr: '0',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }))), React.createElement(TaskList, {\n      listId: column.id,\n      listType: \"QUOTE\",\n      column: column,\n      tasks: tasks,\n      internalScroll: isScrollable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }));\n  });\n};\n\nexport default connect(null, _objectSpread({}, scrumBoardActions, drawerActions))(Column);","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\containers\\ScrumBoard\\Column\\Column.js"],"names":["React","Popconfirm","Popover","Draggable","TaskList","IconSvg","Title","CreateOrUpdateColumn","connect","scrumBoardActions","drawerActions","Container","Header","PlusIcon","MoreActionsWrapper","Column","title","column","tasks","index","boardId","editColumn","cancelEditColumn","deleteColumnWatcher","openDrawer","isScrollable","MoreActions","column_id","id","board_id","provided","snapshot","innerRef","draggableProps","dragHandleProps","editing","isDragging","Plus","drawerType","drawerProps","columnId","MoreIcon"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Popconfirm, Popover } from 'antd';\nimport { Draggable } from 'react-beautiful-dnd';\nimport TaskList from '../Task/TaskList/TaskList';\nimport { IconSvg } from '../../../components/ScrumBoard/IconSvg/IconSvg';\nimport Title from '../../../components/ScrumBoard/Title';\nimport CreateOrUpdateColumn from './ColumnCreateOrUpdate/ColumnCreateOrUpdate';\nimport { connect } from 'react-redux';\nimport scrumBoardActions from '../../../redux/scrumBoard/actions';\nimport drawerActions from '../../../redux/drawer/actions';\n\nimport MoreIcon from '../../../static/Images/16.svg';\nimport Plus from '../../../static/Images/24.svg';\nimport {\n  Container,\n  Header,\n  PlusIcon,\n  MoreActionsWrapper,\n} from './Column.style';\n\nconst Column = ({\n  title,\n  column,\n  tasks,\n  index,\n  boardId,\n  editColumn,\n  cancelEditColumn,\n  deleteColumnWatcher,\n  openDrawer,\n  isScrollable,\n}) => {\n  const MoreActions = (\n    <MoreActionsWrapper>\n      <p onClick={() => editColumn(column)}>Rename Column</p>\n      <p>\n        <Popconfirm\n          title=\"Are you sure delete this Column?\"\n          okText=\"Yes\"\n          cancelText=\"No\"\n          onConfirm={() =>\n            deleteColumnWatcher({ column_id: column.id, board_id: boardId })\n          }\n        >\n          Delete Column\n        </Popconfirm>\n      </p>\n    </MoreActionsWrapper>\n  );\n  return (\n    <Draggable draggableId={title} index={index}>\n      {(provided, snapshot) => (\n        <Container\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          {column.editing ? (\n            <CreateOrUpdateColumn\n              initials={column}\n              onCancel={() => cancelEditColumn(column)}\n            />\n          ) : (\n            <Header isDragging={snapshot.isDragging}>\n              <Title\n                isDragging={snapshot.isDragging}\n                {...provided.dragHandleProps}\n              >\n                {title}\n              </Title>\n              <PlusIcon\n                src={Plus}\n                onClick={() =>\n                  openDrawer({\n                    drawerType: 'CREATE_OR_EDIT_TASK',\n                    drawerProps: { columnId: column.id },\n                  })\n                }\n              />\n              <Popover placement=\"bottom\" content={MoreActions} trigger=\"click\">\n                <IconSvg src={MoreIcon} border=\"none\" padding=\"0\" mr={'0'} />\n              </Popover>\n            </Header>\n          )}\n\n          <TaskList\n            listId={column.id}\n            listType=\"QUOTE\"\n            column={column}\n            tasks={tasks}\n            internalScroll={isScrollable}\n          />\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n\nexport default connect(\n  null,\n  { ...scrumBoardActions, ...drawerActions }\n)(Column);\n"]},"metadata":{},"sourceType":"module"}