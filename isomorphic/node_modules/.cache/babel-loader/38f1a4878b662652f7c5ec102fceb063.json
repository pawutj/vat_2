{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\components\\\\mail\\\\composeMail.js\";\nimport React, { Component } from 'react';\nimport Async from '../../helpers/asyncComponent';\nimport Button from '../uielements/button';\nimport Input from '../uielements/input';\nimport ComposeAutoComplete from './composeAutoComplete';\nimport notification from '../notification';\nimport IntlMessages from '../utility/intlMessages';\nimport ComposeForm from './composeMail.style';\n\nvar Editor = function Editor(props) {\n  return React.createElement(Async, {\n    load: import(\n    /* webpackChunkName: \"compose-mAIL--editor\" */\n    '../uielements/editor'),\n    componentProps: props,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  });\n};\n\nfunction uploadCallback(file) {\n  return new Promise(function (resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('POST', 'https://api.imgur.com/3/image');\n    xhr.setRequestHeader('Authorization', 'Client-ID 8d26ccd12712fca');\n    var data = new FormData();\n    data.append('image', file);\n    xhr.send(data);\n    xhr.addEventListener('load', function () {\n      var response = JSON.parse(xhr.responseText);\n      resolve(response);\n    });\n    xhr.addEventListener('error', function () {\n      var error = JSON.parse(xhr.responseText);\n      reject(error);\n    });\n  });\n}\n\nvar ComposeMail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ComposeMail, _Component);\n\n  function ComposeMail(props) {\n    var _this;\n\n    _classCallCheck(this, ComposeMail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ComposeMail).call(this, props));\n    _this.state = {\n      editorState: null,\n      loading: false,\n      iconLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(ComposeMail, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var onEditorStateChange = function onEditorStateChange(editorState) {\n        _this2.setState({\n          editorState: editorState\n        });\n      };\n\n      var ComposeAutoCompleteTO = {\n        allMails: this.props.allMails,\n        updateData: function updateData() {},\n        placeholder: 'To',\n        autofocus: true\n      };\n      var ComposeAutoCompleteCC = {\n        allMails: this.props.allMails,\n        updateData: function updateData() {},\n        placeholder: 'CC'\n      };\n      var editorOption = {\n        style: {\n          width: '90%',\n          height: '70%'\n        },\n        editorState: this.state.editorState,\n        toolbarClassName: 'home-toolbar',\n        wrapperClassName: 'home-wrapper',\n        editorClassName: 'home-editor',\n        onEditorStateChange: onEditorStateChange,\n        uploadCallback: uploadCallback,\n        toolbar: {\n          image: {\n            uploadCallback: uploadCallback\n          }\n        }\n      };\n      return React.createElement(ComposeForm, {\n        className: \"isoComposeMailWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(ComposeAutoComplete, Object.assign({}, ComposeAutoCompleteTO, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(ComposeAutoComplete, Object.assign({}, ComposeAutoCompleteCC, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(Input, {\n        placeholder: \"Subject\",\n        className: \"isoInputBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(Editor, Object.assign({}, editorOption, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"isoComposeMailBtnWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.props.mobileView || this.props.tabView ? React.createElement(Button, {\n        type: \"primary\",\n        onClick: function onClick() {\n          _this2.props.changeComposeMail(false);\n        },\n        className: \"isoCancelMailBtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"email.cancel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })) : '', React.createElement(Button, {\n        type: \"primary\",\n        onClick: function onClick(e) {\n          return notification('success', \"Mail has been sent\", '');\n        },\n        className: \"isoSendMailBtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"email.send\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ComposeMail;\n}(Component);\n\nexport { ComposeMail as default };","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\components\\mail\\composeMail.js"],"names":["React","Component","Async","Button","Input","ComposeAutoComplete","notification","IntlMessages","ComposeForm","Editor","props","uploadCallback","file","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","data","FormData","append","send","addEventListener","response","JSON","parse","responseText","error","ComposeMail","state","editorState","loading","iconLoading","onEditorStateChange","setState","ComposeAutoCompleteTO","allMails","updateData","placeholder","autofocus","ComposeAutoCompleteCC","editorOption","style","width","height","toolbarClassName","wrapperClassName","editorClassName","toolbar","image","mobileView","tabView","changeComposeMail","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Async from '../../helpers/asyncComponent';\nimport Button from '../uielements/button';\nimport Input from '../uielements/input';\nimport ComposeAutoComplete from './composeAutoComplete';\nimport notification from '../notification';\nimport IntlMessages from '../utility/intlMessages';\nimport ComposeForm from './composeMail.style';\n\nconst Editor = props => (\n  <Async\n    load={import(/* webpackChunkName: \"compose-mAIL--editor\" */ '../uielements/editor')}\n    componentProps={props}\n  />\n);\n\nfunction uploadCallback(file) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open('POST', 'https://api.imgur.com/3/image');\n    xhr.setRequestHeader('Authorization', 'Client-ID 8d26ccd12712fca');\n    const data = new FormData();\n    data.append('image', file);\n    xhr.send(data);\n    xhr.addEventListener('load', () => {\n      const response = JSON.parse(xhr.responseText);\n      resolve(response);\n    });\n    xhr.addEventListener('error', () => {\n      const error = JSON.parse(xhr.responseText);\n      reject(error);\n    });\n  });\n}\nexport default class ComposeMail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: null,\n      loading: false,\n      iconLoading: false\n    };\n  }\n  render() {\n    const onEditorStateChange = editorState => {\n      this.setState({ editorState });\n    };\n    const ComposeAutoCompleteTO = {\n      allMails: this.props.allMails,\n      updateData: () => {},\n      placeholder: 'To',\n      autofocus: true\n    };\n    const ComposeAutoCompleteCC = {\n      allMails: this.props.allMails,\n      updateData: () => {},\n      placeholder: 'CC'\n    };\n    const editorOption = {\n      style: { width: '90%', height: '70%' },\n      editorState: this.state.editorState,\n      toolbarClassName: 'home-toolbar',\n      wrapperClassName: 'home-wrapper',\n      editorClassName: 'home-editor',\n      onEditorStateChange: onEditorStateChange,\n      uploadCallback: uploadCallback,\n      toolbar: { image: { uploadCallback: uploadCallback } }\n    };\n\n    return (\n      <ComposeForm className=\"isoComposeMailWrapper\">\n        <ComposeAutoComplete {...ComposeAutoCompleteTO} />\n        <ComposeAutoComplete {...ComposeAutoCompleteCC} />\n        <Input placeholder=\"Subject\" className=\"isoInputBox\" />\n        <Editor {...editorOption} />\n        <div className=\"isoComposeMailBtnWrapper\">\n          {this.props.mobileView || this.props.tabView ? (\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                this.props.changeComposeMail(false);\n              }}\n              className=\"isoCancelMailBtn\"\n            >\n              <IntlMessages id=\"email.cancel\" />\n            </Button>\n          ) : (\n            ''\n          )}\n\n          <Button\n            type=\"primary\"\n            onClick={e => notification('success', `Mail has been sent`, '')}\n            className=\"isoSendMailBtn\"\n          >\n            <IntlMessages id=\"email.send\" />\n          </Button>\n        </div>\n      </ComposeForm>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}