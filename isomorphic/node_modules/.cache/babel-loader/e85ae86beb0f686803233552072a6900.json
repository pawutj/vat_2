{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = DragSource;\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _checkDecoratorArguments = require('./utils/checkDecoratorArguments');\n\nvar _checkDecoratorArguments2 = _interopRequireDefault(_checkDecoratorArguments);\n\nvar _decorateHandler = require('./decorateHandler');\n\nvar _decorateHandler2 = _interopRequireDefault(_decorateHandler);\n\nvar _registerSource = require('./registerSource');\n\nvar _registerSource2 = _interopRequireDefault(_registerSource);\n\nvar _createSourceFactory = require('./createSourceFactory');\n\nvar _createSourceFactory2 = _interopRequireDefault(_createSourceFactory);\n\nvar _createSourceMonitor = require('./createSourceMonitor');\n\nvar _createSourceMonitor2 = _interopRequireDefault(_createSourceMonitor);\n\nvar _createSourceConnector = require('./createSourceConnector');\n\nvar _createSourceConnector2 = _interopRequireDefault(_createSourceConnector);\n\nvar _isValidType = require('./utils/isValidType');\n\nvar _isValidType2 = _interopRequireDefault(_isValidType);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction DragSource(type, spec, collect) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  _checkDecoratorArguments2.default.apply(undefined, ['DragSource', 'type, spec, collect[, options]'].concat(Array.prototype.slice.call(arguments)));\n\n  var getType = type;\n\n  if (typeof type !== 'function') {\n    (0, _invariant2.default)((0, _isValidType2.default)(type), 'Expected \"type\" provided as the first argument to DragSource to be ' + 'a string, or a function that returns a string given the current props. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs-drag-source.html', type);\n\n    getType = function getType() {\n      return type;\n    };\n  }\n\n  (0, _invariant2.default)((0, _isPlainObject2.default)(spec), 'Expected \"spec\" provided as the second argument to DragSource to be ' + 'a plain object. Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs-drag-source.html', spec);\n  var createSource = (0, _createSourceFactory2.default)(spec);\n  (0, _invariant2.default)(typeof collect === 'function', 'Expected \"collect\" provided as the third argument to DragSource to be ' + 'a function that returns a plain object of props to inject. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs-drag-source.html', collect);\n  (0, _invariant2.default)((0, _isPlainObject2.default)(options), 'Expected \"options\" provided as the fourth argument to DragSource to be ' + 'a plain object when specified. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs-drag-source.html', collect);\n  return function decorateSource(DecoratedComponent) {\n    return (0, _decorateHandler2.default)({\n      connectBackend: function connectBackend(backend, sourceId) {\n        return backend.connectDragSource(sourceId);\n      },\n      containerDisplayName: 'DragSource',\n      createHandler: createSource,\n      registerHandler: _registerSource2.default,\n      createMonitor: _createSourceMonitor2.default,\n      createConnector: _createSourceConnector2.default,\n      DecoratedComponent: DecoratedComponent,\n      getType: getType,\n      collect: collect,\n      options: options\n    });\n  };\n}","map":null,"metadata":{},"sourceType":"script"}