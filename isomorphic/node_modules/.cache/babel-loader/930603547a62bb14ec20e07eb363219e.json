{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\containers\\\\Chat\\\\composMessage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '../../components/uielements/button';\nimport notification from '../../components/notification';\nimport actions from '../../redux/chat/actions';\nimport { ComposeMessageWrapper, Textarea } from './message.style';\nvar sendMessage = actions.sendMessage;\n\nvar ComposeMessage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ComposeMessage, _Component);\n\n  function ComposeMessage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ComposeMessage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ComposeMessage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: ''\n    };\n\n    _this.onChange = function (event) {\n      _this.setState({\n        value: event.target.value\n      });\n    };\n\n    _this.onKeyPress = function (event) {\n      if (event.key === 'Enter') {\n        event.preventDefault();\n        var value = _this.state.value;\n\n        if (value && value.length > 0) {\n          _this.props.sendMessage(value);\n\n          _this.setState({\n            value: ''\n          });\n        } else {\n          notification('error', 'Please type something');\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ComposeMessage, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        value: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var value = this.state.value;\n      return React.createElement(ComposeMessageWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Textarea, {\n        autosize: this.props.autosize,\n        value: value,\n        onChange: this.onChange,\n        onKeyPress: this.onKeyPress,\n        placeholder: \"Type your message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), this.props.showButton ? React.createElement(\"div\", {\n        className: \"sendMessageButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.props.sendMessage.bind(this, this.state.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Send Message\")) : '');\n    }\n  }]);\n\n  return ComposeMessage;\n}(Component);\n\nfunction mapStateToProps(state) {\n  var _state$Chat = state.Chat,\n      selectedChatRoom = _state$Chat.selectedChatRoom,\n      openCompose = _state$Chat.openCompose;\n  return {\n    selectedChatRoom: selectedChatRoom,\n    openCompose: openCompose\n  };\n}\n\nexport default connect(mapStateToProps, {\n  sendMessage: sendMessage\n})(ComposeMessage);","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\containers\\Chat\\composMessage.js"],"names":["React","Component","connect","Button","notification","actions","ComposeMessageWrapper","Textarea","sendMessage","ComposeMessage","state","value","onChange","event","setState","target","onKeyPress","key","preventDefault","length","props","nextProps","autosize","showButton","bind","mapStateToProps","Chat","selectedChatRoom","openCompose"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,qBAAT,EAAgCC,QAAhC,QAAgD,iBAAhD;IACQC,W,GAAgBH,O,CAAhBG,W;;IAEFC,c;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;UAMRC,Q,GAAW,UAAAC,KAAK,EAAI;AAClB,YAAKC,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAEE,KAAK,CAACE,MAAN,CAAaJ;AAAtB,OAAd;AACD,K;;UACDK,U,GAAa,UAAAH,KAAK,EAAI;AACpB,UAAIA,KAAK,CAACI,GAAN,KAAc,OAAlB,EAA2B;AACzBJ,QAAAA,KAAK,CAACK,cAAN;AADyB,YAEjBP,KAFiB,GAEP,MAAKD,KAFE,CAEjBC,KAFiB;;AAGzB,YAAIA,KAAK,IAAIA,KAAK,CAACQ,MAAN,GAAe,CAA5B,EAA+B;AAC7B,gBAAKC,KAAL,CAAWZ,WAAX,CAAuBG,KAAvB;;AACA,gBAAKG,QAAL,CAAc;AAAEH,YAAAA,KAAK,EAAE;AAAT,WAAd;AACD,SAHD,MAGO;AACLP,UAAAA,YAAY,CAAC,OAAD,EAAU,uBAAV,CAAZ;AACD;AACF;AACF,K;;;;;;;8CAjByBiB,S,EAAW;AACnC,WAAKP,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD;;;6BAgBQ;AAAA,UACCA,KADD,GACW,KAAKD,KADhB,CACCC,KADD;AAEP,aACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,QAAQ,EAAE,KAAKS,KAAL,CAAWE,QADvB;AAEE,QAAA,KAAK,EAAEX,KAFT;AAGE,QAAA,QAAQ,EAAE,KAAKC,QAHjB;AAIE,QAAA,UAAU,EAAE,KAAKI,UAJnB;AAKE,QAAA,WAAW,EAAC,mBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQG,KAAKI,KAAL,CAAWG,UAAX,GACC;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWZ,WAAX,CAAuBgB,IAAvB,CAA4B,IAA5B,EAAkC,KAAKd,KAAL,CAAWC,KAA7C,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADD,GAUC,EAlBJ,CADF;AAuBD;;;;EA/C0BV,S;;AAkD7B,SAASwB,eAAT,CAAyBf,KAAzB,EAAgC;AAAA,oBACYA,KAAK,CAACgB,IADlB;AAAA,MACtBC,gBADsB,eACtBA,gBADsB;AAAA,MACJC,WADI,eACJA,WADI;AAE9B,SAAO;AAAED,IAAAA,gBAAgB,EAAhBA,gBAAF;AAAoBC,IAAAA,WAAW,EAAXA;AAApB,GAAP;AACD;;AACD,eAAe1B,OAAO,CACpBuB,eADoB,EAEpB;AACEjB,EAAAA,WAAW,EAAXA;AADF,CAFoB,CAAP,CAKbC,cALa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '../../components/uielements/button';\nimport notification from '../../components/notification';\nimport actions from '../../redux/chat/actions';\nimport { ComposeMessageWrapper, Textarea } from './message.style';\nconst { sendMessage } = actions;\n\nclass ComposeMessage extends Component {\n  state = {\n    value: '',\n  };\n  componentWillReceiveProps(nextProps) {\n    this.setState({ value: '' });\n  }\n  onChange = event => {\n    this.setState({ value: event.target.value });\n  };\n  onKeyPress = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      const { value } = this.state;\n      if (value && value.length > 0) {\n        this.props.sendMessage(value);\n        this.setState({ value: '' });\n      } else {\n        notification('error', 'Please type something');\n      }\n    }\n  };\n  render() {\n    const { value } = this.state;\n    return (\n      <ComposeMessageWrapper>\n        <Textarea\n          autosize={this.props.autosize}\n          value={value}\n          onChange={this.onChange}\n          onKeyPress={this.onKeyPress}\n          placeholder=\"Type your message\"\n        />\n        {this.props.showButton ? (\n          <div className=\"sendMessageButton\">\n            <Button\n              type=\"primary\"\n              onClick={this.props.sendMessage.bind(this, this.state.value)}\n            >\n              Send Message\n            </Button>\n          </div>\n        ) : (\n          ''\n        )}\n      </ComposeMessageWrapper>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { selectedChatRoom, openCompose } = state.Chat;\n  return { selectedChatRoom, openCompose };\n}\nexport default connect(\n  mapStateToProps,\n  {\n    sendMessage,\n  }\n)(ComposeMessage);\n"]},"metadata":{},"sourceType":"module"}