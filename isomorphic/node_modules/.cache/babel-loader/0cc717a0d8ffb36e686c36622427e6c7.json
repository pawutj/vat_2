{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\containers\\\\Tables\\\\antTables\\\\index.js\";\nimport React, { Component } from 'react';\nimport Tabs, { TabPane } from '../../../components/uielements/tabs';\nimport LayoutContentWrapper from '../../../components/utility/layoutWrapper.js';\nimport TableDemoStyle from './demo.style';\nimport fakeData from '../fakeData';\nimport { tableinfos } from './configs';\nimport * as TableViews from './tableViews/';\nvar dataList = new fakeData(10);\n\nvar AntTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AntTable, _Component);\n\n  function AntTable() {\n    _classCallCheck(this, AntTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AntTable).apply(this, arguments));\n  }\n\n  _createClass(AntTable, [{\n    key: \"renderTable\",\n    value: function renderTable(tableInfo) {\n      var Component;\n\n      switch (tableInfo.value) {\n        case 'sortView':\n          Component = TableViews.SortView;\n          break;\n\n        case 'filterView':\n          Component = TableViews.FilterView;\n          break;\n\n        case 'editView':\n          Component = TableViews.EditView;\n          break;\n\n        case 'groupView':\n          Component = TableViews.GroupView;\n          break;\n\n        case 'customizedView':\n          Component = TableViews.CustomizedView;\n          break;\n\n        default:\n          Component = TableViews.SimpleView;\n      }\n\n      return React.createElement(Component, {\n        tableInfo: tableInfo,\n        dataList: dataList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(LayoutContentWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(TableDemoStyle, {\n        className: \"isoLayoutContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        className: \"isoTableDisplayTab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, tableinfos.map(function (tableInfo) {\n        return React.createElement(TabPane, {\n          tab: tableInfo.title,\n          key: tableInfo.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, _this.renderTable(tableInfo));\n      }))));\n    }\n  }]);\n\n  return AntTable;\n}(Component);\n\nexport { AntTable as default };\nexport { TableViews, tableinfos, dataList };","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\containers\\Tables\\antTables\\index.js"],"names":["React","Component","Tabs","TabPane","LayoutContentWrapper","TableDemoStyle","fakeData","tableinfos","TableViews","dataList","AntTable","tableInfo","value","SortView","FilterView","EditView","GroupView","CustomizedView","SimpleView","map","title","renderTable"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,IAAeC,OAAf,QAA8B,qCAA9B;AACA,OAAOC,oBAAP,MAAiC,8CAAjC;AACA,OAAOC,cAAP,MAA2B,cAA3B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAO,KAAKC,UAAZ,MAA4B,eAA5B;AAEA,IAAMC,QAAQ,GAAG,IAAIH,QAAJ,CAAa,EAAb,CAAjB;;IAEqBI,Q;;;;;;;;;;;;;gCACPC,S,EAAW;AACrB,UAAIV,SAAJ;;AACA,cAAQU,SAAS,CAACC,KAAlB;AACE,aAAK,UAAL;AACEX,UAAAA,SAAS,GAAGO,UAAU,CAACK,QAAvB;AACA;;AACF,aAAK,YAAL;AACEZ,UAAAA,SAAS,GAAGO,UAAU,CAACM,UAAvB;AACA;;AACF,aAAK,UAAL;AACEb,UAAAA,SAAS,GAAGO,UAAU,CAACO,QAAvB;AACA;;AACF,aAAK,WAAL;AACEd,UAAAA,SAAS,GAAGO,UAAU,CAACQ,SAAvB;AACA;;AACF,aAAK,gBAAL;AACEf,UAAAA,SAAS,GAAGO,UAAU,CAACS,cAAvB;AACA;;AACF;AACEhB,UAAAA,SAAS,GAAGO,UAAU,CAACU,UAAvB;AAjBJ;;AAmBA,aAAO,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAEP,SAAtB;AAAiC,QAAA,QAAQ,EAAEF,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;6BACQ;AAAA;;AACP,aACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAgB,QAAA,SAAS,EAAC,kBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,UAAU,CAACY,GAAX,CAAe,UAAAR,SAAS;AAAA,eACvB,oBAAC,OAAD;AAAS,UAAA,GAAG,EAAEA,SAAS,CAACS,KAAxB;AAA+B,UAAA,GAAG,EAAET,SAAS,CAACC,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAI,CAACS,WAAL,CAAiBV,SAAjB,CADH,CADuB;AAAA,OAAxB,CADH,CADF,CADF,CADF;AAaD;;;;EAtCmCV,S;;SAAjBS,Q;AAwCrB,SAASF,UAAT,EAAqBD,UAArB,EAAiCE,QAAjC","sourcesContent":["import React, { Component } from 'react';\nimport Tabs, { TabPane } from '../../../components/uielements/tabs';\nimport LayoutContentWrapper from '../../../components/utility/layoutWrapper.js';\nimport TableDemoStyle from './demo.style';\nimport fakeData from '../fakeData';\nimport { tableinfos } from './configs';\nimport * as TableViews from './tableViews/';\n\nconst dataList = new fakeData(10);\n\nexport default class AntTable extends Component {\n  renderTable(tableInfo) {\n    let Component;\n    switch (tableInfo.value) {\n      case 'sortView':\n        Component = TableViews.SortView;\n        break;\n      case 'filterView':\n        Component = TableViews.FilterView;\n        break;\n      case 'editView':\n        Component = TableViews.EditView;\n        break;\n      case 'groupView':\n        Component = TableViews.GroupView;\n        break;\n      case 'customizedView':\n        Component = TableViews.CustomizedView;\n        break;\n      default:\n        Component = TableViews.SimpleView;\n    }\n    return <Component tableInfo={tableInfo} dataList={dataList} />;\n  }\n  render() {\n    return (\n      <LayoutContentWrapper>\n        <TableDemoStyle className=\"isoLayoutContent\">\n          <Tabs className=\"isoTableDisplayTab\">\n            {tableinfos.map(tableInfo => (\n              <TabPane tab={tableInfo.title} key={tableInfo.value}>\n                {this.renderTable(tableInfo)}\n              </TabPane>\n            ))}\n          </Tabs>\n        </TableDemoStyle>\n      </LayoutContentWrapper>\n    );\n  }\n}\nexport { TableViews, tableinfos, dataList };\n"]},"metadata":{},"sourceType":"module"}