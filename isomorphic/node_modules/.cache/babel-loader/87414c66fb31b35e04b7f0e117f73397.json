{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require(\"react-dom\");\n\nvar _reactDnd = require(\"react-dnd\");\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _flow = require(\"lodash/flow\");\n\nvar _flow2 = _interopRequireDefault(_flow);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ItemTypes = {\n  TAG: \"tag\"\n};\nvar tagSource = {\n  beginDrag: function beginDrag(props) {\n    return {\n      id: props.tag.id,\n      index: props.index\n    };\n  },\n  canDrag: function canDrag(props) {\n    return props.moveTag && !props.readOnly;\n  }\n};\nvar tagTarget = {\n  hover: function hover(props, monitor, component) {\n    var dragIndex = monitor.getItem().index;\n    var hoverIndex = props.index;\n\n    if (dragIndex === hoverIndex) {\n      return;\n    }\n\n    var hoverBoundingRect = (0, _reactDom.findDOMNode)(component).getBoundingClientRect();\n    var hoverMiddleX = (hoverBoundingRect.right - hoverBoundingRect.left) / 2;\n    var clientOffset = monitor.getClientOffset();\n    var hoverClientX = clientOffset.x - hoverBoundingRect.left; // Only perform the move when the mouse has crossed half of the items width\n\n    if (dragIndex < hoverIndex && hoverClientX < hoverMiddleX) {\n      return;\n    }\n\n    if (dragIndex > hoverIndex && hoverClientX > hoverMiddleX) {\n      return;\n    }\n\n    props.moveTag(dragIndex, hoverIndex);\n    monitor.getItem().index = hoverIndex;\n  },\n  canDrop: function canDrop(props) {\n    return !props.readOnly;\n  }\n};\n\nvar dragSource = function dragSource(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n};\n\nvar dropCollect = function dropCollect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget()\n  };\n};\n\nfunction RemoveComponent(props) {\n  if (props.readOnly) {\n    return _react2.default.createElement(\"span\", null);\n  }\n\n  if (props.removeComponent) {\n    var _Component = props.removeComponent;\n    return _react2.default.createElement(_Component, props);\n  }\n\n  return _react2.default.createElement(\"a\", {\n    onClick: props.onClick,\n    className: props.className\n  }, String.fromCharCode(215));\n}\n\nvar Tag = function (_Component2) {\n  _inherits(Tag, _Component2);\n\n  function Tag() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Tag);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Tag.__proto__ || Object.getPrototypeOf(Tag)).call.apply(_ref, [this].concat(args))), _this), _this.render = function () {\n      var _this2 = _this,\n          props = _this2.props;\n      var label = props.tag[props.labelField];\n      var connectDragSource = props.connectDragSource,\n          isDragging = props.isDragging,\n          connectDropTarget = props.connectDropTarget,\n          readOnly = props.readOnly,\n          CustomRemoveComponent = props.CustomRemoveComponent;\n\n      var tagComponent = _react2.default.createElement(\"span\", {\n        style: {\n          opacity: isDragging ? 0 : 1\n        },\n        className: props.classNames.tag,\n        onClick: props.onTagClicked\n      }, label, _react2.default.createElement(RemoveComponent, {\n        tag: props.tag,\n        className: props.classNames.remove,\n        removeComponent: props.removeComponent,\n        onClick: props.onDelete,\n        readOnly: props.readOnly\n      }));\n\n      return connectDragSource(connectDropTarget(tagComponent));\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  return Tag;\n}(_react.Component);\n\nTag.propTypes = {\n  labelField: _propTypes2.default.string,\n  onDelete: _propTypes2.default.func.isRequired,\n  tag: _propTypes2.default.object.isRequired,\n  moveTag: _propTypes2.default.func,\n  removeComponent: _propTypes2.default.func,\n  onTagClicked: _propTypes2.default.func,\n  classNames: _propTypes2.default.object,\n  readOnly: _propTypes2.default.bool,\n  connectDragSource: _propTypes2.default.func.isRequired,\n  isDragging: _propTypes2.default.bool.isRequired,\n  connectDropTarget: _propTypes2.default.func.isRequired\n};\nTag.defaultProps = {\n  labelField: \"text\",\n  readOnly: false\n};\nexports.default = (0, _flow2.default)((0, _reactDnd.DragSource)(ItemTypes.TAG, tagSource, dragSource), (0, _reactDnd.DropTarget)(ItemTypes.TAG, tagTarget, dropCollect))(Tag);","map":null,"metadata":{},"sourceType":"script"}