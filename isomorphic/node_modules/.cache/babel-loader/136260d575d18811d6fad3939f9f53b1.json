{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\components\\\\ScrumBoard\\\\AntFields.js\";\nimport map from 'lodash/map';\nimport React from 'react';\nimport { DatePicker, Form, Input, TimePicker, Select, Badge, Switch } from 'antd';\nvar FormItem = Form.Item;\nvar Option = Select.Option;\nvar TextArea = Input.TextArea;\n\nvar CreateAntField = function CreateAntField(Component) {\n  return function (_ref) {\n    var field = _ref.field,\n        form = _ref.form,\n        hasFeedback = _ref.hasFeedback,\n        label = _ref.label,\n        tasklabel = _ref.tasklabel,\n        selectOptions = _ref.selectOptions,\n        submitCount = _ref.submitCount,\n        type = _ref.type,\n        formitem = _ref.formitem,\n        className = _ref.className,\n        props = _objectWithoutProperties(_ref, [\"field\", \"form\", \"hasFeedback\", \"label\", \"tasklabel\", \"selectOptions\", \"submitCount\", \"type\", \"formitem\", \"className\"]);\n\n    var touched = form.touched[field.name];\n    var submitted = submitCount > 0;\n    var hasError = form.errors[field.name];\n    var submittedError = hasError && submitted;\n    var touchedError = hasError && touched;\n\n    var onInputChange = function onInputChange(_ref2) {\n      var value = _ref2.target.value;\n      return form.setFieldValue(field.name, value);\n    };\n\n    var onChange = function onChange(value) {\n      return form.setFieldValue(field.name, value);\n    };\n\n    var onBlur = function onBlur() {\n      return form.setFieldTouched(field.name, true);\n    };\n\n    return React.createElement(\"div\", {\n      className: \"field-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(FormItem, Object.assign({\n      label: label,\n      colon: false,\n      className: className,\n      hasFeedback: hasFeedback && submitted || hasFeedback && touched ? true : false,\n      help: submittedError || touchedError ? hasError : false,\n      validateStatus: submittedError || touchedError ? 'error' : 'success'\n    }, formitem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), tasklabel && tasklabel, React.createElement(Component, Object.assign({}, field, props, {\n      onBlur: onBlur,\n      onChange: type ? onInputChange : onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), selectOptions && map(selectOptions, function (name) {\n      return React.createElement(Option, {\n        key: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        status: name,\n        text: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    }))));\n  };\n};\n\nexport var AntSelect = CreateAntField(Select);\nexport var AntDatePicker = CreateAntField(DatePicker);\nexport var AntInput = CreateAntField(Input);\nexport var AntTimePicker = CreateAntField(TimePicker);\nexport var AntTextArea = CreateAntField(TextArea);\nexport var AntSwitch = CreateAntField(Switch);","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\components\\ScrumBoard\\AntFields.js"],"names":["map","React","DatePicker","Form","Input","TimePicker","Select","Badge","Switch","FormItem","Item","Option","TextArea","CreateAntField","Component","field","form","hasFeedback","label","tasklabel","selectOptions","submitCount","type","formitem","className","props","touched","name","submitted","hasError","errors","submittedError","touchedError","onInputChange","value","target","setFieldValue","onChange","onBlur","setFieldTouched","AntSelect","AntDatePicker","AntInput","AntTimePicker","AntTextArea","AntSwitch"],"mappings":"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","sourcesContent":["import map from 'lodash/map';\nimport React from 'react';\nimport {\n  DatePicker,\n  Form,\n  Input,\n  TimePicker,\n  Select,\n  Badge,\n  Switch,\n} from 'antd';\n\nconst FormItem = Form.Item;\nconst { Option } = Select;\nconst { TextArea } = Input;\nconst CreateAntField = Component => ({\n  field,\n  form,\n  hasFeedback,\n  label,\n  tasklabel,\n  selectOptions,\n  submitCount,\n  type,\n  formitem,\n  className,\n  ...props\n}) => {\n  const touched = form.touched[field.name];\n  const submitted = submitCount > 0;\n  const hasError = form.errors[field.name];\n  const submittedError = hasError && submitted;\n  const touchedError = hasError && touched;\n  const onInputChange = ({ target: { value } }) =>\n    form.setFieldValue(field.name, value);\n  const onChange = value => form.setFieldValue(field.name, value);\n  const onBlur = () => form.setFieldTouched(field.name, true);\n  return (\n    <div className=\"field-container\">\n      <FormItem\n        label={label}\n        colon={false}\n        className={className}\n        hasFeedback={\n          (hasFeedback && submitted) || (hasFeedback && touched) ? true : false\n        }\n        help={submittedError || touchedError ? hasError : false}\n        validateStatus={submittedError || touchedError ? 'error' : 'success'}\n        {...formitem}\n      >\n        {tasklabel && tasklabel}\n        <Component\n          {...field}\n          {...props}\n          onBlur={onBlur}\n          onChange={type ? onInputChange : onChange}\n        >\n          {selectOptions &&\n            map(selectOptions, name => (\n              <Option key={name}>\n                <Badge status={name} text={name} />\n              </Option>\n            ))}\n        </Component>\n      </FormItem>\n    </div>\n  );\n};\n\nexport const AntSelect = CreateAntField(Select);\nexport const AntDatePicker = CreateAntField(DatePicker);\nexport const AntInput = CreateAntField(Input);\nexport const AntTimePicker = CreateAntField(TimePicker);\nexport const AntTextArea = CreateAntField(TextArea);\nexport const AntSwitch = CreateAntField(Switch);\n"]},"metadata":{},"sourceType":"module"}