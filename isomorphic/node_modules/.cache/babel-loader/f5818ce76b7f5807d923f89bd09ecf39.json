{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\containers\\\\FirestoreCRUD\\\\Investor\\\\index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Input from '../../../components/uielements/input';\nimport Modal from '../../../components/feedback/modal';\nimport actions from '../../../redux/investors/actions';\nimport LayoutContentWrapper from '../../../components/utility/layoutWrapper.js';\nimport Box from '../../../components/utility/box';\nimport ContentHolder from '../../../components/utility/contentHolder';\nimport Popconfirms from '../../../components/feedback/popconfirm';\nimport { ActionBtn, Fieldset, Form, Label, TitleWrapper, ActionWrapper, ComponentTitle, TableWrapper, ButtonHolders } from './investors.style';\nimport clone from 'clone';\n\nvar Investors =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Investors, _Component);\n\n  function Investors() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Investors);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Investors)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleRecord = function (actionName, investor) {\n      if (investor.key && actionName !== 'delete') actionName = 'update';\n\n      _this.props.saveIntoFireStore(investor, actionName);\n    };\n\n    _this.resetRecords = function () {\n      _this.props.resetFireStoreDocuments();\n    };\n\n    _this.handleModal = function () {\n      var investor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      _this.props.toggleModal(investor);\n    };\n\n    _this.onRecordChange = function (key, event) {\n      var _clone = clone(_this.props),\n          investor = _clone.investor;\n\n      if (key) investor[key] = event.target.value;\n\n      _this.props.update(investor);\n    };\n\n    return _this;\n  }\n\n  _createClass(Investors, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.loadFromFireStore();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          modalActive = _this$props.modalActive,\n          investors = _this$props.investors;\n\n      var _clone2 = clone(this.props),\n          investor = _clone2.investor;\n\n      var dataSource = [];\n      Object.keys(investors).map(function (investor, index) {\n        return dataSource.push(_objectSpread({}, investors[investor], {\n          key: investor\n        }));\n      });\n      var rowSelection = {\n        onChange: function onChange(selectedRowKeys, selectedRows) {}\n      };\n      var columns = [{\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        sorter: function sorter(a, b) {\n          if (a.name < b.name) return -1;\n          if (a.name > b.name) return 1;\n          return 0;\n        }\n      }, {\n        title: 'Company Name',\n        dataIndex: 'company_name',\n        key: 'company_name',\n        sorter: function sorter(a, b) {\n          if (a.company_name < b.company_name) return -1;\n          if (a.company_name > b.company_name) return 1;\n          return 0;\n        }\n      }, {\n        title: 'Job Title',\n        dataIndex: 'job_title',\n        key: 'job_title',\n        sorter: function sorter(a, b) {\n          if (a.job_title < b.job_title) return -1;\n          if (a.job_title > b.job_title) return 1;\n          return 0;\n        }\n      }, {\n        title: 'Location',\n        dataIndex: 'location',\n        key: 'location',\n        sorter: function sorter(a, b) {\n          if (a.location < b.location) return -1;\n          if (a.location > b.location) return 1;\n          return 0;\n        }\n      }, {\n        title: 'Number of Investments',\n        dataIndex: 'investment_count',\n        key: 'investment_count',\n        width: '190px',\n        sorter: function sorter(a, b) {\n          return parseInt(a.investment_count, 10) - parseInt(b.investment_count, 10);\n        }\n      }, {\n        title: 'Number of Exists',\n        dataIndex: 'exists_count',\n        key: 'exists_count',\n        width: '160px',\n        sorter: function sorter(a, b) {\n          return parseInt(a.exists_count, 10) - parseInt(b.exists_count, 10);\n        }\n      }, {\n        title: 'Actions',\n        width: '60px',\n        key: 'action',\n        render: function render(text, row) {\n          return React.createElement(ActionWrapper, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: _this2.handleModal.bind(_this2, row),\n            href: \"# \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"ion-android-create\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          })), React.createElement(Popconfirms, {\n            title: \"Are you sure to delete this record?\",\n            okText: \"Yes\",\n            cancelText: \"No\",\n            placement: \"topRight\",\n            onConfirm: _this2.handleRecord.bind(_this2, 'delete', row),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            className: \"deleteBtn\",\n            href: \"# \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"ion-android-delete\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }))));\n        }\n      }];\n      return React.createElement(LayoutContentWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Box, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(ContentHolder, {\n        style: {\n          marginTop: 0,\n          overflow: 'hidden'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(TitleWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(ComponentTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Investors\"), React.createElement(ButtonHolders, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(ActionBtn, {\n        type: \"danger\",\n        onClick: this.resetRecords,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Reset record\"), React.createElement(ActionBtn, {\n        type: \"primary\",\n        onClick: this.handleModal.bind(this, null),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Add new record\"))), React.createElement(Modal, {\n        visible: modalActive,\n        onClose: this.props.toggleModal.bind(this, null),\n        title: investor.key ? 'Update investor' : 'Add New investor',\n        okText: investor.key ? 'Update investor' : 'Add investor',\n        onOk: this.handleRecord.bind(this, 'insert', investor),\n        onCancel: this.props.toggleModal.bind(this, null),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Fieldset, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Input, {\n        label: \"Name\",\n        placeholder: \"Enter owner name\",\n        value: investor.name,\n        onChange: this.onRecordChange.bind(this, 'name'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      })), React.createElement(Fieldset, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Company Name\"), React.createElement(Input, {\n        label: \"Company Name\",\n        placeholder: \"Enter the company name\",\n        value: investor.company_name,\n        onChange: this.onRecordChange.bind(this, 'company_name'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })), React.createElement(Fieldset, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Job TItle\"), React.createElement(Input, {\n        label: \"Job Title\",\n        placeholder: \"Enter the job title\",\n        value: investor.job_title,\n        onChange: this.onRecordChange.bind(this, 'job_title'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      })), React.createElement(Fieldset, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Location\"), React.createElement(Input, {\n        label: \"Location\",\n        placeholder: \"Enter Description\",\n        value: investor.location,\n        onChange: this.onRecordChange.bind(this, 'location'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      })), React.createElement(Fieldset, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Number of Investments\"), React.createElement(Input, {\n        label: \"Number of Investments\",\n        placeholder: \"Enter number of investments\",\n        value: investor.investment_count,\n        onChange: this.onRecordChange.bind(this, 'investment_count'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      })), React.createElement(Fieldset, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Number of Exists\"), React.createElement(Input, {\n        label: \"Number of Exists\",\n        placeholder: \"Enter Number of Exists\",\n        value: investor.exists_count,\n        onChange: this.onRecordChange.bind(this, 'exists_count'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      })))), React.createElement(TableWrapper, {\n        rowKey: \"key\",\n        columns: columns,\n        rowSelection: rowSelection,\n        loading: this.props.isLoading,\n        dataSource: dataSource,\n        className: \"isoSimpleTable\",\n        pagination: {\n          // defaultPageSize: 1,\n          hideOnSinglePage: true,\n          total: dataSource.length,\n          showTotal: function showTotal(total, range) {\n            return \"Showing \".concat(range[0], \"-\").concat(range[1], \" of \").concat(dataSource.length, \" Results\");\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Investors;\n}(Component);\n\nexport default connect(function (state) {\n  return _objectSpread({}, state.Investors);\n}, actions)(Investors);","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\containers\\FirestoreCRUD\\Investor\\index.js"],"names":["React","Component","connect","Input","Modal","actions","LayoutContentWrapper","Box","ContentHolder","Popconfirms","ActionBtn","Fieldset","Form","Label","TitleWrapper","ActionWrapper","ComponentTitle","TableWrapper","ButtonHolders","clone","Investors","handleRecord","actionName","investor","key","props","saveIntoFireStore","resetRecords","resetFireStoreDocuments","handleModal","toggleModal","onRecordChange","event","target","value","update","loadFromFireStore","modalActive","investors","dataSource","Object","keys","map","index","push","rowSelection","onChange","selectedRowKeys","selectedRows","columns","title","dataIndex","sorter","a","b","name","company_name","job_title","location","width","parseInt","investment_count","exists_count","render","text","row","bind","marginTop","overflow","isLoading","hideOnSinglePage","total","length","showTotal","range","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Input from '../../../components/uielements/input';\nimport Modal from '../../../components/feedback/modal';\nimport actions from '../../../redux/investors/actions';\nimport LayoutContentWrapper from '../../../components/utility/layoutWrapper.js';\nimport Box from '../../../components/utility/box';\nimport ContentHolder from '../../../components/utility/contentHolder';\nimport Popconfirms from '../../../components/feedback/popconfirm';\nimport {\n  ActionBtn,\n  Fieldset,\n  Form,\n  Label,\n  TitleWrapper,\n  ActionWrapper,\n  ComponentTitle,\n  TableWrapper,\n  ButtonHolders,\n} from './investors.style';\nimport clone from 'clone';\n\nclass Investors extends Component {\n  componentDidMount() {\n    this.props.loadFromFireStore();\n  }\n  handleRecord = (actionName, investor) => {\n    if (investor.key && actionName !== 'delete') actionName = 'update';\n    this.props.saveIntoFireStore(investor, actionName);\n  };\n  resetRecords = () => {\n    this.props.resetFireStoreDocuments();\n  };\n\n  handleModal = (investor = null) => {\n    this.props.toggleModal(investor);\n  };\n\n  onRecordChange = (key, event) => {\n    let { investor } = clone(this.props);\n    if (key) investor[key] = event.target.value;\n    this.props.update(investor);\n  };\n\n  render() {\n    const { modalActive, investors } = this.props;\n    const { investor } = clone(this.props);\n    const dataSource = [];\n    Object.keys(investors).map((investor, index) => {\n      return dataSource.push({\n        ...investors[investor],\n        key: investor,\n      });\n    });\n\n    const rowSelection = {\n      onChange: (selectedRowKeys, selectedRows) => {},\n    };\n\n    const columns = [\n      {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        sorter: (a, b) => {\n          if (a.name < b.name) return -1;\n          if (a.name > b.name) return 1;\n          return 0;\n        },\n      },\n      {\n        title: 'Company Name',\n        dataIndex: 'company_name',\n        key: 'company_name',\n        sorter: (a, b) => {\n          if (a.company_name < b.company_name) return -1;\n          if (a.company_name > b.company_name) return 1;\n          return 0;\n        },\n      },\n      {\n        title: 'Job Title',\n        dataIndex: 'job_title',\n        key: 'job_title',\n        sorter: (a, b) => {\n          if (a.job_title < b.job_title) return -1;\n          if (a.job_title > b.job_title) return 1;\n          return 0;\n        },\n      },\n      {\n        title: 'Location',\n        dataIndex: 'location',\n        key: 'location',\n        sorter: (a, b) => {\n          if (a.location < b.location) return -1;\n          if (a.location > b.location) return 1;\n          return 0;\n        },\n      },\n      {\n        title: 'Number of Investments',\n        dataIndex: 'investment_count',\n        key: 'investment_count',\n        width: '190px',\n        sorter: (a, b) =>\n          parseInt(a.investment_count, 10) - parseInt(b.investment_count, 10),\n      },\n      {\n        title: 'Number of Exists',\n        dataIndex: 'exists_count',\n        key: 'exists_count',\n        width: '160px',\n        sorter: (a, b) =>\n          parseInt(a.exists_count, 10) - parseInt(b.exists_count, 10),\n      },\n      {\n        title: 'Actions',\n        width: '60px',\n        key: 'action',\n        render: (text, row) => {\n          return (\n            <ActionWrapper>\n              <a onClick={this.handleModal.bind(this, row)} href=\"# \">\n                <i className=\"ion-android-create\" />\n              </a>\n\n              <Popconfirms\n                title=\"Are you sure to delete this record?\"\n                okText=\"Yes\"\n                cancelText=\"No\"\n                placement=\"topRight\"\n                onConfirm={this.handleRecord.bind(this, 'delete', row)}\n              >\n                <a className=\"deleteBtn\" href=\"# \">\n                  <i className=\"ion-android-delete\" />\n                </a>\n              </Popconfirms>\n            </ActionWrapper>\n          );\n        },\n      },\n    ];\n\n    return (\n      <LayoutContentWrapper>\n        <Box>\n          <ContentHolder style={{ marginTop: 0, overflow: 'hidden' }}>\n            <TitleWrapper>\n              <ComponentTitle>Investors</ComponentTitle>\n\n              <ButtonHolders>\n                <ActionBtn type=\"danger\" onClick={this.resetRecords}>\n                  Reset record\n                </ActionBtn>\n\n                <ActionBtn\n                  type=\"primary\"\n                  onClick={this.handleModal.bind(this, null)}\n                >\n                  Add new record\n                </ActionBtn>\n              </ButtonHolders>\n            </TitleWrapper>\n\n            <Modal\n              visible={modalActive}\n              onClose={this.props.toggleModal.bind(this, null)}\n              title={investor.key ? 'Update investor' : 'Add New investor'}\n              okText={investor.key ? 'Update investor' : 'Add investor'}\n              onOk={this.handleRecord.bind(this, 'insert', investor)}\n              onCancel={this.props.toggleModal.bind(this, null)}\n            >\n              <Form>\n                <Fieldset>\n                  <Label>Name</Label>\n                  <Input\n                    label=\"Name\"\n                    placeholder=\"Enter owner name\"\n                    value={investor.name}\n                    onChange={this.onRecordChange.bind(this, 'name')}\n                  />\n                </Fieldset>\n\n                <Fieldset>\n                  <Label>Company Name</Label>\n                  <Input\n                    label=\"Company Name\"\n                    placeholder=\"Enter the company name\"\n                    value={investor.company_name}\n                    onChange={this.onRecordChange.bind(this, 'company_name')}\n                  />\n                </Fieldset>\n\n                <Fieldset>\n                  <Label>Job TItle</Label>\n                  <Input\n                    label=\"Job Title\"\n                    placeholder=\"Enter the job title\"\n                    value={investor.job_title}\n                    onChange={this.onRecordChange.bind(this, 'job_title')}\n                  />\n                </Fieldset>\n\n                <Fieldset>\n                  <Label>Location</Label>\n                  <Input\n                    label=\"Location\"\n                    placeholder=\"Enter Description\"\n                    value={investor.location}\n                    onChange={this.onRecordChange.bind(this, 'location')}\n                  />\n                </Fieldset>\n\n                <Fieldset>\n                  <Label>Number of Investments</Label>\n                  <Input\n                    label=\"Number of Investments\"\n                    placeholder=\"Enter number of investments\"\n                    value={investor.investment_count}\n                    onChange={this.onRecordChange.bind(\n                      this,\n                      'investment_count'\n                    )}\n                  />\n                </Fieldset>\n\n                <Fieldset>\n                  <Label>Number of Exists</Label>\n                  <Input\n                    label=\"Number of Exists\"\n                    placeholder=\"Enter Number of Exists\"\n                    value={investor.exists_count}\n                    onChange={this.onRecordChange.bind(this, 'exists_count')}\n                  />\n                </Fieldset>\n              </Form>\n            </Modal>\n\n            <TableWrapper\n              rowKey=\"key\"\n              columns={columns}\n              rowSelection={rowSelection}\n              loading={this.props.isLoading}\n              dataSource={dataSource}\n              className=\"isoSimpleTable\"\n              pagination={{\n                // defaultPageSize: 1,\n                hideOnSinglePage: true,\n                total: dataSource.length,\n                showTotal: (total, range) => {\n                  return `Showing ${range[0]}-${range[1]} of ${\n                    dataSource.length\n                  } Results`;\n                },\n              }}\n            />\n          </ContentHolder>\n        </Box>\n      </LayoutContentWrapper>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    ...state.Investors,\n  }),\n  actions\n)(Investors);\n"]},"metadata":{},"sourceType":"module"}