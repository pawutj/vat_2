{"ast":null,"code":"import moment from 'moment';\nimport { dateFormat } from './FieldFormats';\nexport var validateDate = function validateDate(value) {\n  var errors;\n\n  if (!value) {\n    errors = 'Required!';\n  } else if (moment(value).format(dateFormat) < moment(Date.now()).format(dateFormat)) {\n    errors = 'Invalid date!';\n  }\n\n  return errors;\n};\nexport var validateEmail = function validateEmail(value) {\n  var errors;\n\n  if (!value) {\n    errors = 'Required!';\n  } else if (!/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)) {\n    errors = 'Invalid email address!';\n  }\n\n  return errors;\n};\nexport var isRequired = function isRequired(value) {\n  return !value ? 'Required!' : '';\n};","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\components\\ScrumBoard\\ValidateFields.js"],"names":["moment","dateFormat","validateDate","value","errors","format","Date","now","validateEmail","test","isRequired"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AACnC,MAAIC,MAAJ;;AAEA,MAAI,CAACD,KAAL,EAAY;AACVC,IAAAA,MAAM,GAAG,WAAT;AACD,GAFD,MAEO,IACLJ,MAAM,CAACG,KAAD,CAAN,CAAcE,MAAd,CAAqBJ,UAArB,IAAmCD,MAAM,CAACM,IAAI,CAACC,GAAL,EAAD,CAAN,CAAmBF,MAAnB,CAA0BJ,UAA1B,CAD9B,EAEL;AACAG,IAAAA,MAAM,GAAG,eAAT;AACD;;AAED,SAAOA,MAAP;AACD,CAZM;AAcP,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAAAL,KAAK,EAAI;AACpC,MAAIC,MAAJ;;AAEA,MAAI,CAACD,KAAL,EAAY;AACVC,IAAAA,MAAM,GAAG,WAAT;AACD,GAFD,MAEO,IAAI,CAAC,8CAA8CK,IAA9C,CAAmDN,KAAnD,CAAL,EAAgE;AACrEC,IAAAA,MAAM,GAAG,wBAAT;AACD;;AAED,SAAOA,MAAP;AACD,CAVM;AAYP,OAAO,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAAAP,KAAK;AAAA,SAAK,CAACA,KAAD,GAAS,WAAT,GAAuB,EAA5B;AAAA,CAAxB","sourcesContent":["import moment from 'moment';\nimport { dateFormat } from './FieldFormats';\n\nexport const validateDate = value => {\n  let errors;\n\n  if (!value) {\n    errors = 'Required!';\n  } else if (\n    moment(value).format(dateFormat) < moment(Date.now()).format(dateFormat)\n  ) {\n    errors = 'Invalid date!';\n  }\n\n  return errors;\n};\n\nexport const validateEmail = value => {\n  let errors;\n\n  if (!value) {\n    errors = 'Required!';\n  } else if (!/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)) {\n    errors = 'Invalid email address!';\n  }\n\n  return errors;\n};\n\nexport const isRequired = value => (!value ? 'Required!' : '');\n"]},"metadata":{},"sourceType":"module"}