{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\containers\\\\Shuffle\\\\index.js\";\nimport React, { Component } from 'react';\nimport FlipMove from 'react-flip-move';\nimport shuffle from 'lodash/shuffle';\nimport throttle from 'lodash/throttle';\nimport articles from './config';\nimport Toggle from './Toggle.js';\nimport ListItem from './listItem';\nimport IntlMessages from '../../components/utility/intlMessages';\nimport { SortableCardWrapper } from './shuffle.style';\n\nvar _default =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_default, _Component);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n    _this.state = {\n      removedArticles: [],\n      view: 'grid',\n      order: 'asc',\n      sortingMethod: 'chronological',\n      enterLeaveAnimation: 'accordionVertical',\n      articles: articles\n    };\n    _this.toggleList = _this.toggleList.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleGrid = _this.toggleGrid.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleSort = _this.toggleSort.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.sortRotate = _this.sortRotate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.sortShuffle = _this.sortShuffle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"toggleList\",\n    value: function toggleList() {\n      this.setState({\n        view: 'list',\n        enterLeaveAnimation: 'accordionVertical'\n      });\n    }\n  }, {\n    key: \"toggleGrid\",\n    value: function toggleGrid() {\n      this.setState({\n        view: 'grid',\n        enterLeaveAnimation: 'accordionHorizontal'\n      });\n    }\n  }, {\n    key: \"toggleSort\",\n    value: function toggleSort() {\n      var sortAsc = function sortAsc(a, b) {\n        return a.timestamp - b.timestamp;\n      };\n\n      var sortDesc = function sortDesc(a, b) {\n        return b.timestamp - a.timestamp;\n      };\n\n      this.setState({\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\n        sortingMethod: 'chronological',\n        articles: this.state.articles.sort(this.state.order === 'asc' ? sortDesc : sortAsc)\n      });\n    }\n  }, {\n    key: \"sortShuffle\",\n    value: function sortShuffle() {\n      this.setState({\n        sortingMethod: 'shuffle',\n        articles: shuffle(this.state.articles)\n      });\n    }\n  }, {\n    key: \"moveArticle\",\n    value: function moveArticle(source, dest, id) {\n      var _this$setState;\n\n      var sourceArticles = this.state[source].slice();\n      var destArticles = this.state[dest].slice();\n      if (!sourceArticles.length) return; // Find the index of the article clicked.\n      // If no ID is provided, the index is 0\n\n      var i = id ? sourceArticles.findIndex(function (article) {\n        return article.id === id;\n      }) : 0; // If the article is already removed, do nothing.\n\n      if (i === -1) return;\n      destArticles = [].concat(sourceArticles.splice(i, 1), destArticles);\n      this.setState((_this$setState = {}, _defineProperty(_this$setState, source, sourceArticles), _defineProperty(_this$setState, dest, destArticles), _this$setState));\n    }\n  }, {\n    key: \"sortRotate\",\n    value: function sortRotate() {\n      var articles = this.state.articles.slice();\n      articles.unshift(articles.pop());\n      this.setState({\n        sortingMethod: 'rotate',\n        articles: articles\n      });\n    }\n  }, {\n    key: \"renderArticles\",\n    value: function renderArticles() {\n      var _this2 = this;\n\n      return this.state.articles.map(function (article, i) {\n        return React.createElement(ListItem, Object.assign({\n          key: article.id,\n          view: _this2.state.view,\n          index: i,\n          clickHandler: throttle(function () {\n            return _this2.moveArticle('articles', 'removedArticles', article.id);\n          }, 800)\n        }, article, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(SortableCardWrapper, {\n        id: \"shuffle\",\n        className: \"isomorphicSortableCardsHolder \".concat(this.state.view),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"isoControlBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"isoViewBtnGroup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Toggle, {\n        clickHandler: this.toggleList,\n        text: React.createElement(IntlMessages, {\n          id: \"toggle.list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }),\n        icon: \"bars\",\n        active: this.state.view === 'list',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(Toggle, {\n        clickHandler: this.toggleGrid,\n        text: React.createElement(IntlMessages, {\n          id: \"toggle.grid\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }),\n        icon: \"appstore\",\n        active: this.state.view === 'grid',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"isoControlBtnGroup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Toggle, {\n        clickHandler: this.toggleSort,\n        text: this.state.order === 'asc' ? React.createElement(IntlMessages, {\n          id: \"toggle.ascending\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }) : React.createElement(IntlMessages, {\n          id: \"toggle.descending\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }),\n        icon: this.state.order === 'asc' ? 'up' : 'down',\n        active: this.state.sortingMethod === 'chronological',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(Toggle, {\n        clickHandler: this.sortShuffle,\n        text: React.createElement(IntlMessages, {\n          id: \"toggle.shuffle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }),\n        icon: \"shake\",\n        active: this.state.sortingMethod === 'shuffle',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(Toggle, {\n        clickHandler: this.sortRotate,\n        text: React.createElement(IntlMessages, {\n          id: \"toggle.rotate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }),\n        icon: \"reload\",\n        active: this.state.sortingMethod === 'rotate',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"isoSortableCardsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(FlipMove, {\n        staggerDurationBy: \"30\",\n        duration: 500,\n        enterAnimation: this.state.enterLeaveAnimation,\n        leaveAnimation: this.state.enterLeaveAnimation,\n        typeName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, this.renderArticles(), React.createElement(\"footer\", {\n        key: \"foot\",\n        className: \"isoAddRemoveControlBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"isoControlBtnGroup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Toggle, {\n        clickHandler: function clickHandler() {\n          return _this3.moveArticle('removedArticles', 'articles');\n        },\n        text: React.createElement(IntlMessages, {\n          id: \"toggle.addItem\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }),\n        icon: \"plus\",\n        active: this.state.removedArticles.length > 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(Toggle, {\n        clickHandler: function clickHandler() {\n          return _this3.moveArticle('articles', 'removedArticles');\n        },\n        text: React.createElement(IntlMessages, {\n          id: \"toggle.removeItem\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }),\n        icon: \"close\",\n        active: this.state.articles.length > 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\containers\\Shuffle\\index.js"],"names":["React","Component","FlipMove","shuffle","throttle","articles","Toggle","ListItem","IntlMessages","SortableCardWrapper","props","state","removedArticles","view","order","sortingMethod","enterLeaveAnimation","toggleList","bind","toggleGrid","toggleSort","sortRotate","sortShuffle","setState","sortAsc","a","b","timestamp","sortDesc","sort","source","dest","id","sourceArticles","slice","destArticles","length","i","findIndex","article","concat","splice","unshift","pop","map","moveArticle","renderArticles"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport FlipMove from 'react-flip-move';\nimport shuffle from 'lodash/shuffle';\nimport throttle from 'lodash/throttle';\nimport articles from './config';\nimport Toggle from './Toggle.js';\nimport ListItem from './listItem';\nimport IntlMessages from '../../components/utility/intlMessages';\nimport { SortableCardWrapper } from './shuffle.style';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      removedArticles: [],\n      view: 'grid',\n      order: 'asc',\n      sortingMethod: 'chronological',\n      enterLeaveAnimation: 'accordionVertical',\n      articles\n    };\n\n    this.toggleList = this.toggleList.bind(this);\n    this.toggleGrid = this.toggleGrid.bind(this);\n    this.toggleSort = this.toggleSort.bind(this);\n    this.sortRotate = this.sortRotate.bind(this);\n    this.sortShuffle = this.sortShuffle.bind(this);\n  }\n\n  toggleList() {\n    this.setState({\n      view: 'list',\n      enterLeaveAnimation: 'accordionVertical'\n    });\n  }\n\n  toggleGrid() {\n    this.setState({\n      view: 'grid',\n      enterLeaveAnimation: 'accordionHorizontal'\n    });\n  }\n\n  toggleSort() {\n    const sortAsc = (a, b) => a.timestamp - b.timestamp;\n    const sortDesc = (a, b) => b.timestamp - a.timestamp;\n\n    this.setState({\n      order: this.state.order === 'asc' ? 'desc' : 'asc',\n      sortingMethod: 'chronological',\n      articles: this.state.articles.sort(\n        this.state.order === 'asc' ? sortDesc : sortAsc\n      )\n    });\n  }\n\n  sortShuffle() {\n    this.setState({\n      sortingMethod: 'shuffle',\n      articles: shuffle(this.state.articles)\n    });\n  }\n\n  moveArticle(source, dest, id) {\n    const sourceArticles = this.state[source].slice();\n    let destArticles = this.state[dest].slice();\n\n    if (!sourceArticles.length) return;\n\n    // Find the index of the article clicked.\n    // If no ID is provided, the index is 0\n    const i = id ? sourceArticles.findIndex(article => article.id === id) : 0;\n\n    // If the article is already removed, do nothing.\n    if (i === -1) return;\n\n    destArticles = [].concat(sourceArticles.splice(i, 1), destArticles);\n\n    this.setState({\n      [source]: sourceArticles,\n      [dest]: destArticles\n    });\n  }\n\n  sortRotate() {\n    const articles = this.state.articles.slice();\n    articles.unshift(articles.pop());\n\n    this.setState({\n      sortingMethod: 'rotate',\n      articles\n    });\n  }\n\n  renderArticles() {\n    return this.state.articles.map((article, i) => {\n      return (\n        <ListItem\n          key={article.id}\n          view={this.state.view}\n          index={i}\n          clickHandler={throttle(\n            () => this.moveArticle('articles', 'removedArticles', article.id),\n            800\n          )}\n          {...article}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <SortableCardWrapper\n        id=\"shuffle\"\n        className={`isomorphicSortableCardsHolder ${this.state.view}`}\n      >\n        <header className=\"isoControlBar\">\n          <div className=\"isoViewBtnGroup\">\n            <Toggle\n              clickHandler={this.toggleList}\n              text={<IntlMessages id=\"toggle.list\" />}\n              icon=\"bars\"\n              active={this.state.view === 'list'}\n            />\n            <Toggle\n              clickHandler={this.toggleGrid}\n              text={<IntlMessages id=\"toggle.grid\" />}\n              icon=\"appstore\"\n              active={this.state.view === 'grid'}\n            />\n          </div>\n\n          <div className=\"isoControlBtnGroup\">\n            <Toggle\n              clickHandler={this.toggleSort}\n              text={\n                this.state.order === 'asc' ? (\n                  <IntlMessages id=\"toggle.ascending\" />\n                ) : (\n                  <IntlMessages id=\"toggle.descending\" />\n                )\n              }\n              icon={this.state.order === 'asc' ? 'up' : 'down'}\n              active={this.state.sortingMethod === 'chronological'}\n            />\n            <Toggle\n              clickHandler={this.sortShuffle}\n              text={<IntlMessages id=\"toggle.shuffle\" />}\n              icon=\"shake\"\n              active={this.state.sortingMethod === 'shuffle'}\n            />\n            <Toggle\n              clickHandler={this.sortRotate}\n              text={<IntlMessages id=\"toggle.rotate\" />}\n              icon=\"reload\"\n              active={this.state.sortingMethod === 'rotate'}\n            />\n          </div>\n        </header>\n\n        <div className=\"isoSortableCardsContainer\">\n          <FlipMove\n            staggerDurationBy=\"30\"\n            duration={500}\n            enterAnimation={this.state.enterLeaveAnimation}\n            leaveAnimation={this.state.enterLeaveAnimation}\n            typeName=\"ul\"\n          >\n            {this.renderArticles()}\n\n            <footer key=\"foot\" className=\"isoAddRemoveControlBar\">\n              <div className=\"isoControlBtnGroup\">\n                <Toggle\n                  clickHandler={() =>\n                    this.moveArticle('removedArticles', 'articles')}\n                  text={<IntlMessages id=\"toggle.addItem\" />}\n                  icon=\"plus\"\n                  active={this.state.removedArticles.length > 0}\n                />\n                <Toggle\n                  clickHandler={() =>\n                    this.moveArticle('articles', 'removedArticles')}\n                  text={<IntlMessages id=\"toggle.removeItem\" />}\n                  icon=\"close\"\n                  active={this.state.articles.length > 0}\n                />\n              </div>\n            </footer>\n          </FlipMove>\n        </div>\n      </SortableCardWrapper>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}