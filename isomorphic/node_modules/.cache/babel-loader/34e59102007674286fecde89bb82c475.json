{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\containers\\\\ScrumBoard\\\\Board\\\\BoardList\\\\BoardList.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport scrumBoardActions from '../../../../redux/scrumBoard/actions';\nimport NoBoardFounds from '../BoardNotFound/BoardNotFound';\nimport BoardListCard from './BoardListCard/BoardListCard';\nimport AppLayout from '../../AppLayout/AppLayout';\nimport { filterProjects } from '../../../../helpers/filterProjects';\nimport { Table } from './BoardList.style';\n\nfunction BoardLists(_ref) {\n  var boards = _ref.boards,\n      deleteBoardWatcher = _ref.deleteBoardWatcher,\n      editBoard = _ref.editBoard,\n      history = _ref.history,\n      match = _ref.match,\n      boardsRenderWatcher = _ref.boardsRenderWatcher;\n  useEffect(function () {\n    boardsRenderWatcher();\n  }, []);\n\n  var handleEdit = function handleEdit(board) {\n    editBoard(board);\n    history.push(\"/dashboard/scrum-board/\".concat(board.id));\n  };\n\n  return React.createElement(AppLayout, {\n    history: history,\n    match: match,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, !isEmpty(boards) ? React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, Object.values(boards).map(function (board) {\n    return React.createElement(BoardListCard, {\n      key: board.id,\n      item: board,\n      onDelete: function onDelete() {\n        return deleteBoardWatcher(board.id);\n      },\n      onEdit: function onEdit() {\n        return handleEdit(board);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  })) : React.createElement(NoBoardFounds, {\n    history: history,\n    match: match,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n}\n\nexport default connect(function (state) {\n  return {\n    boards: filterProjects(state.scrumBoard.boards, state.scrumBoard.searchText)\n  };\n}, _objectSpread({}, scrumBoardActions))(BoardLists);","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\containers\\ScrumBoard\\Board\\BoardList\\BoardList.js"],"names":["React","useEffect","connect","isEmpty","scrumBoardActions","NoBoardFounds","BoardListCard","AppLayout","filterProjects","Table","BoardLists","boards","deleteBoardWatcher","editBoard","history","match","boardsRenderWatcher","handleEdit","board","push","id","Object","values","map","state","scrumBoard","searchText"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,iBAAP,MAA8B,sCAA9B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,cAAT,QAA+B,oCAA/B;AACA,SAASC,KAAT,QAAsB,mBAAtB;;AACA,SAASC,UAAT,OAOG;AAAA,MANDC,MAMC,QANDA,MAMC;AAAA,MALDC,kBAKC,QALDA,kBAKC;AAAA,MAJDC,SAIC,QAJDA,SAIC;AAAA,MAHDC,OAGC,QAHDA,OAGC;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,MADDC,mBACC,QADDA,mBACC;AACDf,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,mBAAmB;AACpB,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAC1BL,IAAAA,SAAS,CAACK,KAAD,CAAT;AACAJ,IAAAA,OAAO,CAACK,IAAR,kCAAuCD,KAAK,CAACE,EAA7C;AACD,GAHD;;AAKA,SACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEN,OAApB;AAA6B,IAAA,KAAK,EAAEC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACZ,OAAO,CAACQ,MAAD,CAAR,GACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,MAAM,CAACC,MAAP,CAAcX,MAAd,EAAsBY,GAAtB,CAA0B,UAAAL,KAAK;AAAA,WAC9B,oBAAC,aAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACE,EADb;AAEE,MAAA,IAAI,EAAEF,KAFR;AAGE,MAAA,QAAQ,EAAE;AAAA,eAAMN,kBAAkB,CAACM,KAAK,CAACE,EAAP,CAAxB;AAAA,OAHZ;AAIE,MAAA,MAAM,EAAE;AAAA,eAAMH,UAAU,CAACC,KAAD,CAAhB;AAAA,OAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD8B;AAAA,GAA/B,CADH,CADD,GAYC,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEJ,OAAxB;AAAiC,IAAA,KAAK,EAAEC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADF;AAkBD;;AAED,eAAeb,OAAO,CACpB,UAAAsB,KAAK;AAAA,SAAK;AACRb,IAAAA,MAAM,EAAEH,cAAc,CACpBgB,KAAK,CAACC,UAAN,CAAiBd,MADG,EAEpBa,KAAK,CAACC,UAAN,CAAiBC,UAFG;AADd,GAAL;AAAA,CADe,oBAOftB,iBAPe,EAAP,CAQbM,UARa,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport scrumBoardActions from '../../../../redux/scrumBoard/actions';\nimport NoBoardFounds from '../BoardNotFound/BoardNotFound';\nimport BoardListCard from './BoardListCard/BoardListCard';\nimport AppLayout from '../../AppLayout/AppLayout';\nimport { filterProjects } from '../../../../helpers/filterProjects';\nimport { Table } from './BoardList.style';\nfunction BoardLists({\n  boards,\n  deleteBoardWatcher,\n  editBoard,\n  history,\n  match,\n  boardsRenderWatcher,\n}) {\n  useEffect(() => {\n    boardsRenderWatcher();\n  }, []);\n\n  const handleEdit = board => {\n    editBoard(board);\n    history.push(`/dashboard/scrum-board/${board.id}`);\n  };\n\n  return (\n    <AppLayout history={history} match={match}>\n      {!isEmpty(boards) ? (\n        <Table>\n          {Object.values(boards).map(board => (\n            <BoardListCard\n              key={board.id}\n              item={board}\n              onDelete={() => deleteBoardWatcher(board.id)}\n              onEdit={() => handleEdit(board)}\n            />\n          ))}\n        </Table>\n      ) : (\n        <NoBoardFounds history={history} match={match} />\n      )}\n    </AppLayout>\n  );\n}\n\nexport default connect(\n  state => ({\n    boards: filterProjects(\n      state.scrumBoard.boards,\n      state.scrumBoard.searchText\n    ),\n  }),\n  { ...scrumBoardActions }\n)(BoardLists);\n"]},"metadata":{},"sourceType":"module"}