{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\components\\\\ScrumBoard\\\\Comments\\\\Comments.js\";\nimport React from 'react';\nimport { Comment, Avatar, Form, Button, List, Input, Tooltip } from 'antd';\nimport moment from 'moment';\nimport { CommentListWrapper } from './Comments.style';\nvar TextArea = Input.TextArea;\n\nvar CommentList = function CommentList(_ref) {\n  var comments = _ref.comments;\n  return React.createElement(CommentListWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(List, {\n    dataSource: comments // header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n    ,\n    itemLayout: \"horizontal\",\n    renderItem: function renderItem(props) {\n      return React.createElement(Comment, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n};\n\nvar Editor = function Editor(_ref2) {\n  var onChange = _ref2.onChange,\n      onSubmit = _ref2.onSubmit,\n      submitting = _ref2.submitting,\n      value = _ref2.value;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(TextArea, {\n    rows: 4,\n    onChange: onChange,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Button, {\n    htmlType: \"submit\",\n    loading: submitting,\n    onClick: onSubmit,\n    type: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Add Comment\")));\n};\n\nvar Comments =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Comments, _React$Component);\n\n  function Comments() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Comments)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      comments: [{\n        actions: [React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"Reply to\")],\n        author: 'Han Solo',\n        avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n        content: React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\"),\n        datetime: React.createElement(Tooltip, {\n          title: moment().subtract(1, 'days').format('YYYY-MM-DD HH:mm:ss'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, moment().subtract(1, 'days').fromNow()))\n      }],\n      submitting: false,\n      value: ''\n    };\n\n    _this.handleSubmit = function () {\n      if (!_this.state.value) {\n        return;\n      }\n\n      _this.setState({\n        submitting: true\n      });\n\n      setTimeout(function () {\n        _this.setState({\n          submitting: false,\n          value: '',\n          comments: [{\n            actions: [React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87\n              },\n              __self: this\n            }, \"Reply to\")],\n            author: 'Han Solo',\n            avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n            content: React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91\n              },\n              __self: this\n            }, _this.state.value),\n            datetime: moment().fromNow()\n          }].concat(_toConsumableArray(_this.state.comments))\n        });\n      }, 1000);\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        value: e.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          comments = _this$state.comments,\n          submitting = _this$state.submitting,\n          value = _this$state.value;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, comments.length > 0 && React.createElement(CommentList, {\n        comments: comments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Comment, {\n        avatar: React.createElement(Avatar, {\n          src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n          alt: \"Han Solo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }),\n        content: React.createElement(Editor, {\n          onChange: this.handleChange,\n          onSubmit: this.handleSubmit,\n          submitting: submitting,\n          value: value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Comments;\n}(React.Component);\n\nexport default Comments;","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\components\\ScrumBoard\\Comments\\Comments.js"],"names":["React","Comment","Avatar","Form","Button","List","Input","Tooltip","moment","CommentListWrapper","TextArea","CommentList","comments","props","Editor","onChange","onSubmit","submitting","value","Comments","state","actions","author","avatar","content","datetime","subtract","format","fromNow","handleSubmit","setState","setTimeout","handleChange","e","target","length","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Comment, Avatar, Form, Button, List, Input, Tooltip } from 'antd';\nimport moment from 'moment';\n\nimport { CommentListWrapper } from './Comments.style';\n\nconst TextArea = Input.TextArea;\n\nconst CommentList = ({ comments }) => (\n  <CommentListWrapper>\n    <List\n      dataSource={comments}\n      // header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n      itemLayout=\"horizontal\"\n      renderItem={props => <Comment {...props} />}\n    />\n  </CommentListWrapper>\n);\n\nconst Editor = ({ onChange, onSubmit, submitting, value }) => (\n  <div>\n    <Form.Item>\n      <TextArea rows={4} onChange={onChange} value={value} />\n    </Form.Item>\n    <Form.Item>\n      <Button\n        htmlType=\"submit\"\n        loading={submitting}\n        onClick={onSubmit}\n        type=\"primary\"\n      >\n        Add Comment\n      </Button>\n    </Form.Item>\n  </div>\n);\n\nclass Comments extends React.Component {\n  state = {\n    comments: [\n      {\n        actions: [<span>Reply to</span>],\n        author: 'Han Solo',\n        avatar:\n          'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n        content: (\n          <p>\n            We supply a series of design principles, practical patterns and high\n            quality design resources (Sketch and Axure), to help people create\n            their product prototypes beautifully and efficiently.\n          </p>\n        ),\n        datetime: (\n          <Tooltip\n            title={moment()\n              .subtract(1, 'days')\n              .format('YYYY-MM-DD HH:mm:ss')}\n          >\n            <span>\n              {moment()\n                .subtract(1, 'days')\n                .fromNow()}\n            </span>\n          </Tooltip>\n        ),\n      },\n    ],\n    submitting: false,\n    value: '',\n  };\n\n  handleSubmit = () => {\n    if (!this.state.value) {\n      return;\n    }\n\n    this.setState({\n      submitting: true,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        submitting: false,\n        value: '',\n        comments: [\n          {\n            actions: [<span>Reply to</span>],\n            author: 'Han Solo',\n            avatar:\n              'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n            content: <p>{this.state.value}</p>,\n            datetime: moment().fromNow(),\n          },\n          ...this.state.comments,\n        ],\n      });\n    }, 1000);\n  };\n\n  handleChange = e => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  render() {\n    const { comments, submitting, value } = this.state;\n\n    return (\n      <div>\n        {comments.length > 0 && <CommentList comments={comments} />}\n        <Comment\n          avatar={\n            <Avatar\n              src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n              alt=\"Han Solo\"\n            />\n          }\n          content={\n            <Editor\n              onChange={this.handleChange}\n              onSubmit={this.handleSubmit}\n              submitting={submitting}\n              value={value}\n            />\n          }\n        />\n      </div>\n    );\n  }\n}\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}