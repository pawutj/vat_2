{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\components\\\\algolia\\\\rangeSlider.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connectRange } from 'react-instantsearch/connectors';\nimport Rheostat from 'rheostat';\n\nvar Range =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Range, _Component);\n\n  function Range() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Range);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Range)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentValues: {\n        min: _this.props.min,\n        max: _this.props.max\n      }\n    };\n\n    _this.onValuesUpdated = function (sliderState) {\n      _this.setState({\n        currentValues: {\n          min: sliderState.values[0],\n          max: sliderState.values[1]\n        }\n      });\n    };\n\n    _this.onChange = function (sliderState) {\n      if (_this.props.currentRefinement.min !== sliderState.values[0] || _this.props.currentRefinement.max !== sliderState.values[1]) {\n        _this.props.refine({\n          min: sliderState.values[0],\n          max: sliderState.values[1]\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Range, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(sliderState) {\n      if (sliderState.canRefine) {\n        this.setState({\n          currentValues: {\n            min: sliderState.currentRefinement.min,\n            max: sliderState.currentRefinement.max\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          min = _this$props.min,\n          max = _this$props.max,\n          currentRefinement = _this$props.currentRefinement;\n      var currentValues = this.state.currentValues;\n      return min !== max ? React.createElement(\"div\", {\n        className: \"isoAlRangeSlider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"isoAlRangeNumber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, currentValues.min), \" -\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, currentValues.max)), React.createElement(Rheostat, {\n        min: min,\n        max: max,\n        values: [currentRefinement.min, currentRefinement.max],\n        onChange: this.onChange,\n        onValuesUpdated: this.onValuesUpdated,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })) : null;\n    }\n  }]);\n\n  return Range;\n}(Component);\n\nRange.propTypes = {\n  min: PropTypes.number,\n  max: PropTypes.number,\n  currentRefinement: PropTypes.object,\n  refine: PropTypes.func.isRequired,\n  canRefine: PropTypes.bool.isRequired\n};\nvar RangeSlider = connectRange(Range);\nexport default RangeSlider;","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\components\\algolia\\rangeSlider.js"],"names":["PropTypes","React","Component","connectRange","Rheostat","Range","state","currentValues","min","props","max","onValuesUpdated","sliderState","setState","values","onChange","currentRefinement","refine","canRefine","propTypes","number","object","func","isRequired","bool","RangeSlider"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connectRange } from 'react-instantsearch/connectors';\nimport Rheostat from 'rheostat';\n\nclass Range extends Component {\n  static propTypes = {\n    min: PropTypes.number,\n    max: PropTypes.number,\n    currentRefinement: PropTypes.object,\n    refine: PropTypes.func.isRequired,\n    canRefine: PropTypes.bool.isRequired\n  };\n\n  state = { currentValues: { min: this.props.min, max: this.props.max } };\n\n  componentWillReceiveProps(sliderState) {\n    if (sliderState.canRefine) {\n      this.setState({\n        currentValues: {\n          min: sliderState.currentRefinement.min,\n          max: sliderState.currentRefinement.max\n        }\n      });\n    }\n  }\n\n  onValuesUpdated = sliderState => {\n    this.setState({\n      currentValues: { min: sliderState.values[0], max: sliderState.values[1] }\n    });\n  };\n\n  onChange = sliderState => {\n    if (\n      this.props.currentRefinement.min !== sliderState.values[0] ||\n      this.props.currentRefinement.max !== sliderState.values[1]\n    ) {\n      this.props.refine({\n        min: sliderState.values[0],\n        max: sliderState.values[1]\n      });\n    }\n  };\n\n  render() {\n    const { min, max, currentRefinement } = this.props;\n    const { currentValues } = this.state;\n    return min !== max\n      ? <div className=\"isoAlRangeSlider\">\n          <div className=\"isoAlRangeNumber\">\n            <span>{currentValues.min}</span> -\n            <span>{currentValues.max}</span>\n          </div>\n          <Rheostat\n            min={min}\n            max={max}\n            values={[currentRefinement.min, currentRefinement.max]}\n            onChange={this.onChange}\n            onValuesUpdated={this.onValuesUpdated}\n          />\n        </div>\n      : null;\n  }\n}\n\nconst RangeSlider = connectRange(Range);\nexport default RangeSlider;\n"]},"metadata":{},"sourceType":"module"}