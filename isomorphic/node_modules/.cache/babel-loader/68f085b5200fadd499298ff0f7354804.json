{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\components\\\\ScrumBoard\\\\RenderColumnForm\\\\RenderColumnForm.js\";\nimport React from 'react';\nimport { Button } from 'antd';\nimport { AntInput } from '../AntFields';\nimport { isRequired } from '../ValidateFields';\nimport { Form, Field } from 'formik';\nimport HeadingWithIcon from '../HeadingWithIcon/HeadingWithIcon';\nimport FolderIcon from \"../../../static/Images/05-icon.svg\";\nimport RenderColumnWrapper from './RenderColumnForm.style';\n\nvar RenderColumnForm = function RenderColumnForm(props) {\n  var handleSubmit = props.handleSubmit,\n      onCancel = props.onCancel,\n      submitCount = props.submitCount,\n      values = props.values;\n  return React.createElement(RenderColumnWrapper, {\n    className: \"render-form-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, !props.initials && React.createElement(HeadingWithIcon, {\n    iconSrc: FolderIcon,\n    heading: 'Column Name',\n    size: '20px',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Field, {\n    component: AntInput,\n    name: \"title\",\n    type: \"text\",\n    defaultValue: values.title,\n    placeholder: \"Column Name\",\n    validate: isRequired,\n    submitCount: submitCount,\n    hasFeedback: true,\n    size: \"large\",\n    formitem: {\n      colon: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"default\",\n    onClick: onCancel,\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: {\n      marginLeft: 10\n    },\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, props.initials && props.initials.editing ? 'Update Column' : 'Save')));\n};\n\nexport default RenderColumnForm;","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\components\\ScrumBoard\\RenderColumnForm\\RenderColumnForm.js"],"names":["React","Button","AntInput","isRequired","Form","Field","HeadingWithIcon","RenderColumnWrapper","RenderColumnForm","props","handleSubmit","onCancel","submitCount","values","initials","FolderIcon","title","colon","marginLeft","editing"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,QAA5B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;;AAEA,OAAOC,mBAAP,MAAgC,0BAAhC;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK,EAAI;AAAA,MACxBC,YADwB,GACwBD,KADxB,CACxBC,YADwB;AAAA,MACVC,QADU,GACwBF,KADxB,CACVE,QADU;AAAA,MACAC,WADA,GACwBH,KADxB,CACAG,WADA;AAAA,MACaC,MADb,GACwBJ,KADxB,CACaI,MADb;AAEhC,SACE,oBAAC,mBAAD;AAAqB,IAAA,SAAS,EAAC,qBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACJ,KAAK,CAACK,QAAP,IACC,oBAAC,eAAD;AACE,IAAA,OAAO,EAAEC,UADX;AAEE,IAAA,OAAO,EAAE,aAFX;AAGE,IAAA,IAAI,EAAE,MAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEL,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAER,QADb;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,YAAY,EAAEW,MAAM,CAACG,KAJvB;AAKE,IAAA,WAAW,EAAC,aALd;AAME,IAAA,QAAQ,EAAEb,UANZ;AAOE,IAAA,WAAW,EAAES,WAPf;AAQE,IAAA,WAAW,MARb;AASE,IAAA,IAAI,EAAC,OATP;AAUE,IAAA,QAAQ,EAAE;AACRK,MAAAA,KAAK,EAAE;AADC,KAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAeE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEN,QAAhC;AAA0C,IAAA,IAAI,EAAC,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,EAkBE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,QAAQ,EAAC,QAFX;AAGE,IAAA,KAAK,EAAE;AAAEO,MAAAA,UAAU,EAAE;AAAd,KAHT;AAIE,IAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGT,KAAK,CAACK,QAAN,IAAkBL,KAAK,CAACK,QAAN,CAAeK,OAAjC,GAA2C,eAA3C,GAA6D,MANhE,CAlBF,CARF,CADF;AAsCD,CAxCD;;AA0CA,eAAeX,gBAAf","sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\nimport { AntInput } from '../AntFields';\nimport { isRequired } from '../ValidateFields';\nimport { Form, Field } from 'formik';\nimport HeadingWithIcon from '../HeadingWithIcon/HeadingWithIcon';\nimport FolderIcon from '../../../static/Images/05-icon.svg';\nimport RenderColumnWrapper from './RenderColumnForm.style';\n\nconst RenderColumnForm = props => {\n  const { handleSubmit, onCancel, submitCount, values } = props;\n  return (\n    <RenderColumnWrapper className=\"render-form-wrapper\">\n      {!props.initials && (\n        <HeadingWithIcon\n          iconSrc={FolderIcon}\n          heading={'Column Name'}\n          size={'20px'}\n        />\n      )}\n      <Form onSubmit={handleSubmit}>\n        <Field\n          component={AntInput}\n          name=\"title\"\n          type=\"text\"\n          defaultValue={values.title}\n          placeholder=\"Column Name\"\n          validate={isRequired}\n          submitCount={submitCount}\n          hasFeedback\n          size=\"large\"\n          formitem={{\n            colon: false,\n          }}\n        />\n        <Button type=\"default\" onClick={onCancel} size=\"large\">\n          Cancel\n        </Button>\n        <Button\n          type=\"primary\"\n          htmlType=\"submit\"\n          style={{ marginLeft: 10 }}\n          size=\"large\"\n        >\n          {props.initials && props.initials.editing ? 'Update Column' : 'Save'}\n        </Button>\n      </Form>\n    </RenderColumnWrapper>\n  );\n};\n\nexport default RenderColumnForm;\n"]},"metadata":{},"sourceType":"module"}