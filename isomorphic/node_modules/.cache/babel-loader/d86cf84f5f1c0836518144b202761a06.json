{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cloneWithRef;\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _react = require('react');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction cloneWithRef(element, newRef) {\n  var previousRef = element.ref;\n  (0, _invariant2.default)(typeof previousRef !== 'string', 'Cannot connect React DnD to an element with an existing string ref. ' + 'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' + 'Read more: https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute');\n\n  if (!previousRef) {\n    // When there is no ref on the element, use the new ref directly\n    return (0, _react.cloneElement)(element, {\n      ref: newRef\n    });\n  }\n\n  return (0, _react.cloneElement)(element, {\n    ref: function ref(node) {\n      newRef(node);\n\n      if (previousRef) {\n        previousRef(node);\n      }\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"script"}