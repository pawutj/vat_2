{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\components\\\\tables\\\\editableCell.js\";\nimport React, { Component } from 'react';\nimport Input from '../uielements/input';\nimport { Icon } from 'antd';\n\nvar _default =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_default, _Component);\n\n  function _default() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_default)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: _this.props.value,\n      editable: false\n    };\n\n    _this.handleChange = function (event) {\n      var value = event.target.value;\n\n      _this.setState({\n        value: value\n      });\n    };\n\n    _this.check = function () {\n      _this.setState({\n        editable: false\n      });\n\n      if (_this.props.onChange) {\n        _this.props.onChange(_this.state.value, _this.props.columnsKey, _this.props.index);\n      }\n    };\n\n    _this.edit = function () {\n      _this.setState({\n        editable: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          value = _this$state.value,\n          editable = _this$state.editable;\n      return React.createElement(\"div\", {\n        className: \"isoEditData\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, editable ? React.createElement(\"div\", {\n        className: \"isoEditDataWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: value,\n        onChange: this.handleChange,\n        onPressEnter: this.check,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(Icon, {\n        type: \"check\",\n        className: \"isoEditIcon\",\n        onClick: this.check,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })) : React.createElement(\"p\", {\n        className: \"isoDataWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, value || ' ', React.createElement(Icon, {\n        type: \"edit\",\n        className: \"isoEditIcon\",\n        onClick: this.edit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\components\\tables\\editableCell.js"],"names":["React","Component","Input","Icon","state","value","props","editable","handleChange","event","target","setState","check","onChange","columnsKey","index","edit"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,IAAT,QAAqB,MAArB;;;;;;;;;;;;;;;;;;;UAGEC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,MAAKC,KAAL,CAAWD,KADZ;AAENE,MAAAA,QAAQ,EAAE;AAFJ,K;;UAIRC,Y,GAAe,UAAAC,KAAK,EAAI;AACtB,UAAMJ,KAAK,GAAGI,KAAK,CAACC,MAAN,CAAaL,KAA3B;;AACA,YAAKM,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAALA;AAAF,OAAd;AACD,K;;UACDO,K,GAAQ,YAAM;AACZ,YAAKD,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAE;AAAZ,OAAd;;AACA,UAAI,MAAKD,KAAL,CAAWO,QAAf,EAAyB;AACvB,cAAKP,KAAL,CAAWO,QAAX,CACE,MAAKT,KAAL,CAAWC,KADb,EAEE,MAAKC,KAAL,CAAWQ,UAFb,EAGE,MAAKR,KAAL,CAAWS,KAHb;AAKD;AACF,K;;UACDC,I,GAAO,YAAM;AACX,YAAKL,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,K;;;;;;;6BACQ;AAAA,wBACqB,KAAKH,KAD1B;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQE,QADR,eACQA,QADR;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,QAAQ,GACP;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAEF,KADT;AAEE,QAAA,QAAQ,EAAE,KAAKG,YAFjB;AAGE,QAAA,YAAY,EAAE,KAAKI,KAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,SAAS,EAAC,aAA7B;AAA2C,QAAA,OAAO,EAAE,KAAKA,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADO,GAUP;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGP,KAAK,IAAI,GADZ,EAEE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,SAAS,EAAC,aAA5B;AAA0C,QAAA,OAAO,EAAE,KAAKW,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAXJ,CADF;AAmBD;;;;EA3C0Bf,S","sourcesContent":["import React, { Component } from 'react';\nimport Input from '../uielements/input';\nimport { Icon } from 'antd';\n\nexport default class extends Component {\n  state = {\n    value: this.props.value,\n    editable: false\n  };\n  handleChange = event => {\n    const value = event.target.value;\n    this.setState({ value });\n  };\n  check = () => {\n    this.setState({ editable: false });\n    if (this.props.onChange) {\n      this.props.onChange(\n        this.state.value,\n        this.props.columnsKey,\n        this.props.index\n      );\n    }\n  };\n  edit = () => {\n    this.setState({ editable: true });\n  };\n  render() {\n    const { value, editable } = this.state;\n    return (\n      <div className=\"isoEditData\">\n        {editable ? (\n          <div className=\"isoEditDataWrapper\">\n            <Input\n              value={value}\n              onChange={this.handleChange}\n              onPressEnter={this.check}\n            />\n            <Icon type=\"check\" className=\"isoEditIcon\" onClick={this.check} />\n          </div>\n        ) : (\n          <p className=\"isoDataWrapper\">\n            {value || ' '}\n            <Icon type=\"edit\" className=\"isoEditIcon\" onClick={this.edit} />\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}