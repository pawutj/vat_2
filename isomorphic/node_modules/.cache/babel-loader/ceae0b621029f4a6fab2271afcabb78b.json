{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\containers\\\\Ecommerce\\\\card\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col } from \"antd\";\nimport clone from \"clone\";\nimport Button from \"../../../components/uielements/button\";\nimport PageHeader from \"../../../components/utility/pageHeader\";\nimport Box from \"../../../components/utility/box\";\nimport LayoutWrapper from \"../../../components/utility/layoutWrapper\";\nimport Card from \"../../../components/card\";\nimport basicStyle from \"../../../settings/basicStyle\";\nimport cardActions from \"../../../redux/card/actions\";\nimport { createColumns } from \"./config\";\nimport { ButtonWrapper } from \"../../../components/card/cardModal.style\";\nimport SimpleTable from \"../../Tables/antTables/tableViews/simpleView\";\nvar addCard = cardActions.addCard,\n    editCard = cardActions.editCard,\n    deleteCard = cardActions.deleteCard,\n    restoreCards = cardActions.restoreCards;\n\nvar Cards =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Cards, _Component);\n\n  function Cards(props) {\n    var _this;\n\n    _classCallCheck(this, Cards);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cards).call(this, props));\n    _this.addColumn = _this.addColumn.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.editColumn = _this.editColumn.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCancel = _this.handleCancel.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submitCard = _this.submitCard.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateCard = _this.updateCard.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.columns = createColumns(_this.editColumn, _this.props.deleteCard);\n    _this.state = {\n      editView: false,\n      selectedCard: null,\n      modalType: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Cards, [{\n    key: \"editColumn\",\n    value: function editColumn(card) {\n      this.setState({\n        editView: true,\n        selectedCard: clone(card),\n        modalType: \"edit\"\n      });\n    }\n  }, {\n    key: \"addColumn\",\n    value: function addColumn() {\n      this.setState({\n        editView: true,\n        selectedCard: {\n          id: new Date().getTime(),\n          key: new Date().getTime(),\n          number: \"\",\n          name: \"\",\n          expiry: \"\",\n          cvc: \"\"\n        },\n        modalType: \"add\"\n      });\n    }\n  }, {\n    key: \"handleCancel\",\n    value: function handleCancel() {\n      this.setState({\n        editView: false,\n        selectedCard: null\n      });\n    }\n  }, {\n    key: \"submitCard\",\n    value: function submitCard(card) {\n      if (this.state.modalType === \"edit\") {\n        this.props.editCard(this.state.selectedCard);\n      } else {\n        this.props.addCard(this.state.selectedCard);\n      }\n\n      this.setState({\n        editView: false,\n        selectedCard: null\n      });\n    }\n  }, {\n    key: \"updateCard\",\n    value: function updateCard(selectedCard) {\n      this.setState({\n        selectedCard: selectedCard\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var rowStyle = basicStyle.rowStyle,\n          colStyle = basicStyle.colStyle,\n          gutter = basicStyle.gutter;\n      var _this$state = this.state,\n          editView = _this$state.editView,\n          selectedCard = _this$state.selectedCard,\n          modalType = _this$state.modalType;\n      var cards = clone(this.props.cards);\n\n      var createNumber = function createNumber(number) {\n        var length = number.length;\n        var newNumber = \"\";\n\n        for (var i = 0; i < length - 4; i++) {\n          newNumber = \"*\".concat(newNumber);\n        }\n\n        for (var _i = length - 4; _i < length; _i++) {\n          newNumber = \"\".concat(newNumber).concat(number.charAt(_i));\n        }\n\n        return newNumber;\n      };\n\n      cards.forEach(function (card, index) {\n        cards[index].number = createNumber(card.number);\n      });\n      return React.createElement(LayoutWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(PageHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Cards\"), React.createElement(Row, {\n        style: rowStyle,\n        gutter: gutter,\n        justify: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 24,\n        sm: 24,\n        xs: 24,\n        style: colStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Box, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(ButtonWrapper, {\n        className: \"isoButtonWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        className: \"\",\n        onClick: this.addColumn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Add New Card\")), React.createElement(SimpleTable, {\n        columns: this.columns,\n        dataSource: cards,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), selectedCard ? React.createElement(Card, {\n        editView: editView,\n        modalType: modalType,\n        selectedCard: selectedCard,\n        handleCancel: this.handleCancel,\n        submitCard: this.submitCard,\n        updateCard: this.updateCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }) : \"\"))));\n    }\n  }]);\n\n  return Cards;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return _objectSpread({}, state.Cards);\n}\n\nexport default connect(mapStateToProps, {\n  addCard: addCard,\n  editCard: editCard,\n  deleteCard: deleteCard,\n  restoreCards: restoreCards\n})(Cards);","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\containers\\Ecommerce\\card\\index.js"],"names":["React","Component","connect","Row","Col","clone","Button","PageHeader","Box","LayoutWrapper","Card","basicStyle","cardActions","createColumns","ButtonWrapper","SimpleTable","addCard","editCard","deleteCard","restoreCards","Cards","props","addColumn","bind","editColumn","handleCancel","submitCard","updateCard","columns","state","editView","selectedCard","modalType","card","setState","id","Date","getTime","key","number","name","expiry","cvc","rowStyle","colStyle","gutter","cards","createNumber","length","newNumber","i","charAt","forEach","index","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col } from \"antd\";\nimport clone from \"clone\";\nimport Button from \"../../../components/uielements/button\";\nimport PageHeader from \"../../../components/utility/pageHeader\";\nimport Box from \"../../../components/utility/box\";\nimport LayoutWrapper from \"../../../components/utility/layoutWrapper\";\nimport Card from \"../../../components/card\";\nimport basicStyle from \"../../../settings/basicStyle\";\nimport cardActions from \"../../../redux/card/actions\";\nimport { createColumns } from \"./config\";\nimport { ButtonWrapper } from \"../../../components/card/cardModal.style\";\nimport SimpleTable from \"../../Tables/antTables/tableViews/simpleView\";\n\nconst { addCard, editCard, deleteCard, restoreCards } = cardActions;\nclass Cards extends Component {\n  constructor(props) {\n    super(props);\n    this.addColumn = this.addColumn.bind(this);\n    this.editColumn = this.editColumn.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.submitCard = this.submitCard.bind(this);\n    this.updateCard = this.updateCard.bind(this);\n\n    this.columns = createColumns(this.editColumn, this.props.deleteCard);\n    this.state = {\n      editView: false,\n      selectedCard: null,\n      modalType: \"\"\n    };\n  }\n  editColumn(card) {\n    this.setState({\n      editView: true,\n      selectedCard: clone(card),\n      modalType: \"edit\"\n    });\n  }\n  addColumn() {\n    this.setState({\n      editView: true,\n      selectedCard: {\n        id: new Date().getTime(),\n        key: new Date().getTime(),\n        number: \"\",\n        name: \"\",\n        expiry: \"\",\n        cvc: \"\"\n      },\n      modalType: \"add\"\n    });\n  }\n  handleCancel() {\n    this.setState({\n      editView: false,\n      selectedCard: null\n    });\n  }\n  submitCard(card) {\n    if (this.state.modalType === \"edit\") {\n      this.props.editCard(this.state.selectedCard);\n    } else {\n      this.props.addCard(this.state.selectedCard);\n    }\n    this.setState({\n      editView: false,\n      selectedCard: null\n    });\n  }\n  updateCard(selectedCard) {\n    this.setState({ selectedCard });\n  }\n  render() {\n    const { rowStyle, colStyle, gutter } = basicStyle;\n    const { editView, selectedCard, modalType } = this.state;\n    const cards = clone(this.props.cards);\n    const createNumber = number => {\n      const length = number.length;\n      let newNumber = \"\";\n      for (let i = 0; i < length - 4; i++) {\n        newNumber = `*${newNumber}`;\n      }\n      for (let i = length - 4; i < length; i++) {\n        newNumber = `${newNumber}${number.charAt(i)}`;\n      }\n      return newNumber;\n    };\n    cards.forEach((card, index) => {\n      cards[index].number = createNumber(card.number);\n    });\n    return (\n      <LayoutWrapper>\n        <PageHeader>Cards</PageHeader>\n        <Row style={rowStyle} gutter={gutter} justify=\"start\">\n          <Col md={24} sm={24} xs={24} style={colStyle}>\n            <Box>\n              <ButtonWrapper className=\"isoButtonWrapper\">\n                <Button type=\"primary\" className=\"\" onClick={this.addColumn}>\n                  Add New Card\n                </Button>\n              </ButtonWrapper>\n\n              {/* <div className=\"isoSimpleTable\"> */}\n              <SimpleTable columns={this.columns} dataSource={cards} />\n              {/* </div> */}\n              {selectedCard ? (\n                <Card\n                  editView={editView}\n                  modalType={modalType}\n                  selectedCard={selectedCard}\n                  handleCancel={this.handleCancel}\n                  submitCard={this.submitCard}\n                  updateCard={this.updateCard}\n                />\n              ) : (\n                \"\"\n              )}\n            </Box>\n          </Col>\n        </Row>\n      </LayoutWrapper>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    ...state.Cards\n  };\n}\nexport default connect(mapStateToProps, {\n  addCard,\n  editCard,\n  deleteCard,\n  restoreCards\n})(Cards);\n"]},"metadata":{},"sourceType":"module"}