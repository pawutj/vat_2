{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\components\\\\tables\\\\imageCell.js\";\nimport React, { Component } from 'react';\nvar PendingPool = {};\nvar ReadyPool = {};\n\nvar ImageCell =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ImageCell, _Component);\n\n  function ImageCell(props) {\n    var _this;\n\n    _classCallCheck(this, ImageCell);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageCell).call(this, props));\n    _this.loadImage = _this.loadImage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onLoadImage = _this.onLoadImage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      ready: false\n    };\n    return _this;\n  }\n\n  _createClass(ImageCell, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadImage(this.props.src);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.src !== this.props.src) {\n        this.setState({\n          src: null\n        });\n        this.loadImage(nextProps.src);\n      }\n    }\n  }, {\n    key: \"loadImage\",\n    value: function loadImage(src) {\n      if (ReadyPool[src]) {\n        this.setState({\n          src: src\n        });\n        return;\n      }\n\n      if (PendingPool[src]) {\n        PendingPool[src].push(this.onLoadImage);\n        return;\n      }\n\n      PendingPool[src] = [this.onLoadImage];\n      var img = new Image();\n\n      img.onload = function () {\n        PendingPool[src].forEach(function (callback) {\n          callback(src);\n        });\n        delete PendingPool[src];\n        img.onload = null;\n        src = undefined;\n      };\n\n      img.src = src;\n    }\n  }, {\n    key: \"onLoadImage\",\n    value: function onLoadImage(src) {\n      ReadyPool[src] = true;\n\n      if (src === this.props.src) {\n        this.setState({\n          src: src\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var style = this.state.src ? {\n        backgroundImage: \"url(\".concat(this.state.src, \")\"),\n        width: '70px',\n        height: '70px',\n        backgroundSize: 'cover'\n      } : undefined;\n      return React.createElement(\"div\", {\n        className: \"exampleImage\",\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ImageCell;\n}(Component);\n\nexport { ImageCell as default };","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\components\\tables\\imageCell.js"],"names":["React","Component","PendingPool","ReadyPool","ImageCell","props","loadImage","bind","onLoadImage","state","ready","src","nextProps","setState","push","img","Image","onload","forEach","callback","undefined","style","backgroundImage","width","height","backgroundSize"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAMC,WAAW,GAAG,EAApB;AACA,IAAMC,SAAS,GAAG,EAAlB;;IAEqBC,S;;;;;AACnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,uDAAjB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,uDAAnB;AACA,UAAKE,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAJiB;AAOlB;;;;yCACoB;AACnB,WAAKJ,SAAL,CAAe,KAAKD,KAAL,CAAWM,GAA1B;AACD;;;8CACyBC,S,EAAW;AACnC,UAAIA,SAAS,CAACD,GAAV,KAAkB,KAAKN,KAAL,CAAWM,GAAjC,EAAsC;AACpC,aAAKE,QAAL,CAAc;AAAEF,UAAAA,GAAG,EAAE;AAAP,SAAd;AACA,aAAKL,SAAL,CAAeM,SAAS,CAACD,GAAzB;AACD;AACF;;;8BACSA,G,EAAK;AACb,UAAIR,SAAS,CAACQ,GAAD,CAAb,EAAoB;AAClB,aAAKE,QAAL,CAAc;AAAEF,UAAAA,GAAG,EAAEA;AAAP,SAAd;AACA;AACD;;AAED,UAAIT,WAAW,CAACS,GAAD,CAAf,EAAsB;AACpBT,QAAAA,WAAW,CAACS,GAAD,CAAX,CAAiBG,IAAjB,CAAsB,KAAKN,WAA3B;AACA;AACD;;AACDN,MAAAA,WAAW,CAACS,GAAD,CAAX,GAAmB,CAAC,KAAKH,WAAN,CAAnB;AAEA,UAAMO,GAAG,GAAG,IAAIC,KAAJ,EAAZ;;AACAD,MAAAA,GAAG,CAACE,MAAJ,GAAa,YAAM;AACjBf,QAAAA,WAAW,CAACS,GAAD,CAAX,CAAiBO,OAAjB,CAAyB,UAAAC,QAAQ,EAAI;AACnCA,UAAAA,QAAQ,CAACR,GAAD,CAAR;AACD,SAFD;AAGA,eAAOT,WAAW,CAACS,GAAD,CAAlB;AACAI,QAAAA,GAAG,CAACE,MAAJ,GAAa,IAAb;AACAN,QAAAA,GAAG,GAAGS,SAAN;AACD,OAPD;;AAQAL,MAAAA,GAAG,CAACJ,GAAJ,GAAUA,GAAV;AACD;;;gCACWA,G,EAAK;AACfR,MAAAA,SAAS,CAACQ,GAAD,CAAT,GAAiB,IAAjB;;AACA,UAAIA,GAAG,KAAK,KAAKN,KAAL,CAAWM,GAAvB,EAA4B;AAC1B,aAAKE,QAAL,CAAc;AACZF,UAAAA,GAAG,EAAEA;AADO,SAAd;AAGD;AACF;;;6BACQ;AACP,UAAMU,KAAK,GAAG,KAAKZ,KAAL,CAAWE,GAAX,GACV;AACEW,QAAAA,eAAe,gBAAS,KAAKb,KAAL,CAAWE,GAApB,MADjB;AAEEY,QAAAA,KAAK,EAAE,MAFT;AAGEC,QAAAA,MAAM,EAAE,MAHV;AAIEC,QAAAA,cAAc,EAAE;AAJlB,OADU,GAOVL,SAPJ;AAQA,aAAO;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,KAAK,EAAEC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EA3DoCpB,S;;SAAlBG,S","sourcesContent":["import React, { Component } from 'react';\n\nconst PendingPool = {};\nconst ReadyPool = {};\n\nexport default class ImageCell extends Component {\n  constructor(props) {\n    super(props);\n    this.loadImage = this.loadImage.bind(this);\n    this.onLoadImage = this.onLoadImage.bind(this);\n    this.state = {\n      ready: false,\n    };\n  }\n  componentWillMount() {\n    this.loadImage(this.props.src);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.src !== this.props.src) {\n      this.setState({ src: null });\n      this.loadImage(nextProps.src);\n    }\n  }\n  loadImage(src) {\n    if (ReadyPool[src]) {\n      this.setState({ src: src });\n      return;\n    }\n\n    if (PendingPool[src]) {\n      PendingPool[src].push(this.onLoadImage);\n      return;\n    }\n    PendingPool[src] = [this.onLoadImage];\n\n    const img = new Image();\n    img.onload = () => {\n      PendingPool[src].forEach(callback => {\n        callback(src);\n      });\n      delete PendingPool[src];\n      img.onload = null;\n      src = undefined;\n    };\n    img.src = src;\n  }\n  onLoadImage(src) {\n    ReadyPool[src] = true;\n    if (src === this.props.src) {\n      this.setState({\n        src: src,\n      });\n    }\n  }\n  render() {\n    const style = this.state.src\n      ? {\n          backgroundImage: `url(${this.state.src})`,\n          width: '70px',\n          height: '70px',\n          backgroundSize: 'cover',\n        }\n      : undefined;\n    return <div className=\"exampleImage\" style={style} />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}