{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _reduxSaga = require(\"redux-saga\");\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _utils = require(\"./utils\");\n\nvar _marked =\n/*#__PURE__*/\n_regenerator.default.mark(syncMessages),\n    _marked2 =\n/*#__PURE__*/\n_regenerator.default.mark(syncToken);\n\nfunction channel() {\n  if (this._messageChannel) return this._messageChannel;\n  var messaging = this.app.messaging();\n  var channel = (0, _reduxSaga.eventChannel)(function (emit) {\n    var unsubscribe = messaging.onMessage(emit);\n    return unsubscribe;\n  });\n  this._messageChannel = channel;\n  return channel;\n}\n\nfunction syncMessages(options) {\n  var channel;\n  return _regenerator.default.wrap(function syncMessages$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return (0, _effects.call)(this.messaging.channel);\n\n        case 2:\n          channel = _context.sent;\n          _context.next = 5;\n          return (0, _effects.fork)(_utils.syncChannel, channel, options);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this);\n}\n\nfunction tokenRefreshChannel() {\n  if (this._tokenRefreshChannel) return this._tokenRefreshChannel;\n  var messaging = this.app.messaging();\n  var channel = (0, _reduxSaga.eventChannel)(function (emit) {\n    var unsubscribe = messaging.onTokenRefresh(function () {\n      messaging.getToken().then(emit);\n    });\n    return unsubscribe;\n  });\n  this._tokenRefreshChannel = channel;\n  return channel;\n}\n\nfunction syncToken(options) {\n  var channel;\n  return _regenerator.default.wrap(function syncToken$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return (0, _effects.call)(this.messaging.tokenRefreshChannel);\n\n        case 2:\n          channel = _context2.sent;\n          _context2.next = 5;\n          return (0, _effects.fork)(_utils.syncChannel, channel, options);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\n\nvar _default = {\n  channel: channel,\n  syncMessages: syncMessages,\n  syncToken: syncToken,\n  tokenRefreshChannel: tokenRefreshChannel\n};\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}