{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\components\\\\contacts\\\\singleView.js\";\nimport React, { Component } from 'react';\nimport { ContactCardWrapper } from './contactCard.style';\n\nvar _default =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_default, _Component);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_default).apply(this, arguments));\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          contact = _this$props.contact,\n          otherAttributes = _this$props.otherAttributes;\n      var name = contact.name ? contact.name : 'No Name';\n      var extraInfos = [];\n      otherAttributes.forEach(function (attribute) {\n        var value = contact[attribute.value];\n\n        if (value) {\n          extraInfos.push(React.createElement(\"div\", {\n            className: \"isoContactCardInfos\",\n            key: attribute.value,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 13\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"isoInfoLabel\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 14\n            },\n            __self: this\n          }, \"\".concat(attribute.title)), React.createElement(\"p\", {\n            className: \"isoInfoDetails\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 15\n            },\n            __self: this\n          }, value)));\n        }\n      });\n      return React.createElement(ContactCardWrapper, {\n        className: \"isoContactCard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"isoContactCardHead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"isoPersonImage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, contact.avatar ? React.createElement(\"img\", {\n        alt: \"#\",\n        src: contact.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }) : ''), React.createElement(\"h1\", {\n        className: \"isoPersonName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, name)), React.createElement(\"div\", {\n        className: \"isoContactInfoWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, extraInfos));\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\components\\contacts\\singleView.js"],"names":["React","Component","ContactCardWrapper","props","contact","otherAttributes","name","extraInfos","forEach","attribute","value","push","title","avatar"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,qBAAnC;;;;;;;;;;;;;;;6BAGW;AAAA,wBAC8B,KAAKC,KADnC;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUC,eADV,eACUA,eADV;AAEP,UAAMC,IAAI,GAAGF,OAAO,CAACE,IAAR,GAAeF,OAAO,CAACE,IAAvB,GAA8B,SAA3C;AACA,UAAMC,UAAU,GAAG,EAAnB;AACAF,MAAAA,eAAe,CAACG,OAAhB,CAAwB,UAAAC,SAAS,EAAI;AACnC,YAAMC,KAAK,GAAGN,OAAO,CAACK,SAAS,CAACC,KAAX,CAArB;;AACA,YAAIA,KAAJ,EAAW;AACTH,UAAAA,UAAU,CAACI,IAAX,CACE;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAqC,YAAA,GAAG,EAAEF,SAAS,CAACC,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAG,YAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgCD,SAAS,CAACG,KAA1C,EADF,EAEE;AAAG,YAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA+BF,KAA/B,CAFF,CADF;AAMD;AACF,OAVD;AAWA,aACE,oBAAC,kBAAD;AAAoB,QAAA,SAAS,EAAC,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,OAAO,CAACS,MAAR,GAAiB;AAAK,QAAA,GAAG,EAAC,GAAT;AAAa,QAAA,GAAG,EAAET,OAAO,CAACS,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjB,GAAwD,EAD3D,CADF,EAIE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BP,IAA/B,CAJF,CADF,EAOE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwCC,UAAxC,CAPF,CADF;AAWD;;;;EA3B0BN,S","sourcesContent":["import React, { Component } from 'react';\nimport { ContactCardWrapper } from './contactCard.style';\n\nexport default class extends Component {\n  render() {\n    const { contact, otherAttributes } = this.props;\n    const name = contact.name ? contact.name : 'No Name';\n    const extraInfos = [];\n    otherAttributes.forEach(attribute => {\n      const value = contact[attribute.value];\n      if (value) {\n        extraInfos.push(\n          <div className=\"isoContactCardInfos\" key={attribute.value}>\n            <p className=\"isoInfoLabel\">{`${attribute.title}`}</p>\n            <p className=\"isoInfoDetails\">{value}</p>\n          </div>\n        );\n      }\n    });\n    return (\n      <ContactCardWrapper className=\"isoContactCard\">\n        <div className=\"isoContactCardHead\">\n          <div className=\"isoPersonImage\">\n            {contact.avatar ? <img alt=\"#\" src={contact.avatar} /> : ''}\n          </div>\n          <h1 className=\"isoPersonName\">{name}</h1>\n        </div>\n        <div className=\"isoContactInfoWrapper\">{extraInfos}</div>\n      </ContactCardWrapper>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}