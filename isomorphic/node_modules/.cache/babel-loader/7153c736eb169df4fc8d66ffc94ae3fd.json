{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nexports.default = createTargetFactory;\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar ALLOWED_SPEC_METHODS = ['canDrop', 'hover', 'drop'];\n\nfunction createTargetFactory(spec) {\n  Object.keys(spec).forEach(function (key) {\n    (0, _invariant2.default)(ALLOWED_SPEC_METHODS.indexOf(key) > -1, 'Expected the drop target specification to only have ' + 'some of the following keys: %s. ' + 'Instead received a specification with an unexpected \"%s\" key. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs-drop-target.html', ALLOWED_SPEC_METHODS.join(', '), key);\n    (0, _invariant2.default)(typeof spec[key] === 'function', 'Expected %s in the drop target specification to be a function. ' + 'Instead received a specification with %s: %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs-drop-target.html', key, key, spec[key]);\n  });\n\n  var Target = function () {\n    function Target(monitor) {\n      _classCallCheck(this, Target);\n\n      this.monitor = monitor;\n      this.props = null;\n      this.component = null;\n    }\n\n    _createClass(Target, [{\n      key: 'receiveProps',\n      value: function receiveProps(props) {\n        this.props = props;\n      }\n    }, {\n      key: 'receiveMonitor',\n      value: function receiveMonitor(monitor) {\n        this.monitor = monitor;\n      }\n    }, {\n      key: 'receiveComponent',\n      value: function receiveComponent(component) {\n        this.component = component;\n      }\n    }, {\n      key: 'canDrop',\n      value: function canDrop() {\n        if (!spec.canDrop) {\n          return true;\n        }\n\n        return spec.canDrop(this.props, this.monitor);\n      }\n    }, {\n      key: 'hover',\n      value: function hover() {\n        if (!spec.hover) {\n          return;\n        }\n\n        spec.hover(this.props, this.monitor, this.component);\n      }\n    }, {\n      key: 'drop',\n      value: function drop() {\n        if (!spec.drop) {\n          return undefined;\n        }\n\n        var dropResult = spec.drop(this.props, this.monitor, this.component);\n\n        if (process.env.NODE_ENV !== 'production') {\n          (0, _invariant2.default)(typeof dropResult === 'undefined' || (0, _isPlainObject2.default)(dropResult), 'drop() must either return undefined, or an object that represents the drop result. ' + 'Instead received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs-drop-target.html', dropResult);\n        }\n\n        return dropResult;\n      }\n    }]);\n\n    return Target;\n  }();\n\n  return function createTarget(monitor) {\n    return new Target(monitor);\n  };\n}","map":null,"metadata":{},"sourceType":"script"}