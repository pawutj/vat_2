{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createSourceConnector;\n\nvar _wrapConnectorHooks = require('./wrapConnectorHooks');\n\nvar _wrapConnectorHooks2 = _interopRequireDefault(_wrapConnectorHooks);\n\nvar _areOptionsEqual = require('./areOptionsEqual');\n\nvar _areOptionsEqual2 = _interopRequireDefault(_areOptionsEqual);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction createSourceConnector(backend) {\n  var currentHandlerId = void 0;\n  var currentDragSourceNode = void 0;\n  var currentDragSourceOptions = void 0;\n  var disconnectCurrentDragSource = void 0;\n  var currentDragPreviewNode = void 0;\n  var currentDragPreviewOptions = void 0;\n  var disconnectCurrentDragPreview = void 0;\n\n  function reconnectDragSource() {\n    if (disconnectCurrentDragSource) {\n      disconnectCurrentDragSource();\n      disconnectCurrentDragSource = null;\n    }\n\n    if (currentHandlerId && currentDragSourceNode) {\n      disconnectCurrentDragSource = backend.connectDragSource(currentHandlerId, currentDragSourceNode, currentDragSourceOptions);\n    }\n  }\n\n  function reconnectDragPreview() {\n    if (disconnectCurrentDragPreview) {\n      disconnectCurrentDragPreview();\n      disconnectCurrentDragPreview = null;\n    }\n\n    if (currentHandlerId && currentDragPreviewNode) {\n      disconnectCurrentDragPreview = backend.connectDragPreview(currentHandlerId, currentDragPreviewNode, currentDragPreviewOptions);\n    }\n  }\n\n  function receiveHandlerId(handlerId) {\n    if (handlerId === currentHandlerId) {\n      return;\n    }\n\n    currentHandlerId = handlerId;\n    reconnectDragSource();\n    reconnectDragPreview();\n  }\n\n  var hooks = (0, _wrapConnectorHooks2.default)({\n    dragSource: function connectDragSource(node, options) {\n      if (node === currentDragSourceNode && (0, _areOptionsEqual2.default)(options, currentDragSourceOptions)) {\n        return;\n      }\n\n      currentDragSourceNode = node;\n      currentDragSourceOptions = options;\n      reconnectDragSource();\n    },\n    dragPreview: function connectDragPreview(node, options) {\n      if (node === currentDragPreviewNode && (0, _areOptionsEqual2.default)(options, currentDragPreviewOptions)) {\n        return;\n      }\n\n      currentDragPreviewNode = node;\n      currentDragPreviewOptions = options;\n      reconnectDragPreview();\n    }\n  });\n  return {\n    receiveHandlerId: receiveHandlerId,\n    hooks: hooks\n  };\n}","map":null,"metadata":{},"sourceType":"script"}