{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\containers\\\\Contacts\\\\index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport contactAction from '../../redux/contacts/actions';\nimport { Layout, Icon } from 'antd';\nimport Button from '../../components/uielements/button';\nimport ContactList from '../../components/contacts/contactList';\nimport SingleContactView from '../../components/contacts/singleView';\nimport EditContactView from '../../components/contacts/editView';\nimport DeleteButton from '../../components/contacts/deleteButton';\nimport { otherAttributes } from './fakeData';\nimport IntlMessages from '../../components/utility/intlMessages';\nimport { ContactsWrapper } from './contacts.style';\nimport Scrollbar from '../../components/utility/customScrollBar.js';\nvar changeContact = contactAction.changeContact,\n    addContact = contactAction.addContact,\n    editContact = contactAction.editContact,\n    deleteContact = contactAction.deleteContact,\n    viewChange = contactAction.viewChange;\nvar Content = Layout.Content;\n\nvar Contacts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Contacts, _Component);\n\n  function Contacts() {\n    _classCallCheck(this, Contacts);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Contacts).apply(this, arguments));\n  }\n\n  _createClass(Contacts, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          contacts = _this$props.contacts,\n          seectedId = _this$props.seectedId,\n          editView = _this$props.editView,\n          changeContact = _this$props.changeContact,\n          addContact = _this$props.addContact,\n          editContact = _this$props.editContact,\n          deleteContact = _this$props.deleteContact,\n          viewChange = _this$props.viewChange;\n      var selectedContact = seectedId ? contacts.filter(function (contact) {\n        return contact.id === seectedId;\n      })[0] : null;\n\n      var onVIewChange = function onVIewChange() {\n        return viewChange(!editView);\n      };\n\n      return React.createElement(ContactsWrapper, {\n        className: \"isomorphicContacts\",\n        style: {\n          background: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"isoContactListBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(ContactList, {\n        contacts: contacts,\n        seectedId: seectedId,\n        changeContact: changeContact,\n        deleteContact: deleteContact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })), React.createElement(Layout, {\n        className: \"isoContactBoxWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, selectedContact ? React.createElement(Content, {\n        className: \"isoContactBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"isoContactControl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"default\",\n        onClick: onVIewChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, editView ? React.createElement(Icon, {\n        type: \"check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }) : React.createElement(Icon, {\n        type: \"edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), ' '), React.createElement(DeleteButton, {\n        deleteContact: deleteContact,\n        contact: selectedContact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        onClick: addContact,\n        className: \"isoAddContactBtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"contactlist.addNewContact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))), React.createElement(Scrollbar, {\n        className: \"contactBoxScrollbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, editView ? React.createElement(EditContactView, {\n        contact: selectedContact,\n        editContact: editContact,\n        otherAttributes: otherAttributes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }) : React.createElement(SingleContactView, {\n        contact: selectedContact,\n        otherAttributes: otherAttributes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }))) : React.createElement(\"div\", {\n        className: \"isoContactControl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: addContact,\n        className: \"isoAddContactBtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"contactlist.addNewContact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Contacts;\n}(Component);\n\nfunction mapStateToProps(state) {\n  var _state$Contacts = state.Contacts,\n      contacts = _state$Contacts.contacts,\n      seectedId = _state$Contacts.seectedId,\n      editView = _state$Contacts.editView;\n  return {\n    contacts: contacts,\n    seectedId: seectedId,\n    editView: editView\n  };\n}\n\nexport default connect(mapStateToProps, {\n  changeContact: changeContact,\n  addContact: addContact,\n  editContact: editContact,\n  deleteContact: deleteContact,\n  viewChange: viewChange\n})(Contacts);","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\containers\\Contacts\\index.js"],"names":["React","Component","connect","contactAction","Layout","Icon","Button","ContactList","SingleContactView","EditContactView","DeleteButton","otherAttributes","IntlMessages","ContactsWrapper","Scrollbar","changeContact","addContact","editContact","deleteContact","viewChange","Content","Contacts","props","contacts","seectedId","editView","selectedContact","filter","contact","id","onVIewChange","background","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport contactAction from '../../redux/contacts/actions';\nimport { Layout, Icon } from 'antd';\nimport Button from '../../components/uielements/button';\nimport ContactList from '../../components/contacts/contactList';\nimport SingleContactView from '../../components/contacts/singleView';\nimport EditContactView from '../../components/contacts/editView';\nimport DeleteButton from '../../components/contacts/deleteButton';\nimport { otherAttributes } from './fakeData';\nimport IntlMessages from '../../components/utility/intlMessages';\nimport { ContactsWrapper } from './contacts.style';\nimport Scrollbar from '../../components/utility/customScrollBar.js';\n\nconst {\n  changeContact,\n  addContact,\n  editContact,\n  deleteContact,\n  viewChange,\n} = contactAction;\n\nconst { Content } = Layout;\nclass Contacts extends Component {\n  render() {\n    const {\n      contacts,\n      seectedId,\n      editView,\n      changeContact,\n      addContact,\n      editContact,\n      deleteContact,\n      viewChange,\n    } = this.props;\n    const selectedContact = seectedId\n      ? contacts.filter(contact => contact.id === seectedId)[0]\n      : null;\n    const onVIewChange = () => viewChange(!editView);\n    return (\n      <ContactsWrapper\n        className=\"isomorphicContacts\"\n        style={{ background: 'none' }}\n      >\n        <div className=\"isoContactListBar\">\n          <ContactList\n            contacts={contacts}\n            seectedId={seectedId}\n            changeContact={changeContact}\n            deleteContact={deleteContact}\n          />\n        </div>\n        <Layout className=\"isoContactBoxWrapper\">\n          {selectedContact ? (\n            <Content className=\"isoContactBox\">\n              <div className=\"isoContactControl\">\n                <Button type=\"default\" onClick={onVIewChange}>\n                  {editView ? <Icon type=\"check\" /> : <Icon type=\"edit\" />}{' '}\n                </Button>\n                <DeleteButton\n                  deleteContact={deleteContact}\n                  contact={selectedContact}\n                />\n                <Button\n                  type=\"primary\"\n                  onClick={addContact}\n                  className=\"isoAddContactBtn\"\n                >\n                  <IntlMessages id=\"contactlist.addNewContact\" />\n                </Button>\n              </div>\n\n              <Scrollbar className=\"contactBoxScrollbar\">\n                {editView ? (\n                  <EditContactView\n                    contact={selectedContact}\n                    editContact={editContact}\n                    otherAttributes={otherAttributes}\n                  />\n                ) : (\n                  <SingleContactView\n                    contact={selectedContact}\n                    otherAttributes={otherAttributes}\n                  />\n                )}\n              </Scrollbar>\n            </Content>\n          ) : (\n            <div className=\"isoContactControl\">\n              <Button\n                type=\"primary\"\n                onClick={addContact}\n                className=\"isoAddContactBtn\"\n              >\n                <IntlMessages id=\"contactlist.addNewContact\" />\n              </Button>\n            </div>\n          )}\n        </Layout>\n      </ContactsWrapper>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { contacts, seectedId, editView } = state.Contacts;\n  return {\n    contacts,\n    seectedId,\n    editView,\n  };\n}\nexport default connect(\n  mapStateToProps,\n  {\n    changeContact,\n    addContact,\n    editContact,\n    deleteContact,\n    viewChange,\n  }\n)(Contacts);\n"]},"metadata":{},"sourceType":"module"}