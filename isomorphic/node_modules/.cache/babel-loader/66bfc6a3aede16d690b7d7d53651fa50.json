{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(filterAction),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { all, takeEvery, fork } from 'redux-saga/effects';\nimport actions from './actions';\nexport function filterAction() {\n  return _regeneratorRuntime.wrap(function filterAction$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(actions.FILTER_ATTRIBUTE,\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee() {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked);\n}\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([fork(filterAction)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\redux\\mail\\saga.js"],"names":["filterAction","rootSaga","all","takeEvery","fork","actions","FILTER_ATTRIBUTE"],"mappings":";;;;yBAGiBA,Y;;;yBAGQC,Q;;AANzB,SAASC,GAAT,EAAcC,SAAd,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,SAAUL,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMG,SAAS,CAACE,OAAO,CAACC,gBAAT;AAAA;AAAA,mCAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA3B,EAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGP,eAAe,SAAUL,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CAACE,IAAI,CAACJ,YAAD,CAAL,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, takeEvery, fork } from 'redux-saga/effects';\nimport actions from './actions';\n\nexport function* filterAction() {\n  yield takeEvery(actions.FILTER_ATTRIBUTE, function*() {});\n}\nexport default function* rootSaga() {\n  yield all([fork(filterAction)]);\n}\n"]},"metadata":{},"sourceType":"module"}