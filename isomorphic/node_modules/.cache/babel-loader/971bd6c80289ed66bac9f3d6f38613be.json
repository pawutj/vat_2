{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\containers\\\\ScrumBoard\\\\Task\\\\TaskList\\\\TaskList.js\";\nimport React, { Component } from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport TaskItem from '../Task';\nimport { DropZone, Wrapper } from './TaskList.style';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nvar InnerTaskList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InnerTaskList, _Component);\n\n  function InnerTaskList() {\n    _classCallCheck(this, InnerTaskList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(InnerTaskList).apply(this, arguments));\n  }\n\n  _createClass(InnerTaskList, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      if (nextProps.tasks !== this.props.tasks) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return this.props.tasks.map(function (task, index) {\n        return React.createElement(Draggable, {\n          key: task.id,\n          draggableId: task.id,\n          index: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, function (dragProvided, dragSnapshot) {\n          return React.createElement(TaskItem, {\n            key: task.id,\n            task: task,\n            columnId: _this.props.columnId,\n            isDragging: dragSnapshot.isDragging,\n            isGroupedOver: Boolean(dragSnapshot.combineTargetFor),\n            provided: dragProvided,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          });\n        });\n      });\n    }\n  }]);\n\n  return InnerTaskList;\n}(Component);\n\nvar InnerList = function InnerList(_ref) {\n  var dropProvided = _ref.dropProvided,\n      tasks = _ref.tasks,\n      columnId = _ref.columnId;\n  return React.createElement(DropZone, {\n    ref: dropProvided.innerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Scrollbars, {\n    style: {\n      height: 500\n    },\n    autoHide: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(InnerTaskList, {\n    tasks: tasks,\n    columnId: columnId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), dropProvided.placeholder));\n};\n\nvar TaskList = function TaskList(_ref2) {\n  var ignoreContainerClipping = _ref2.ignoreContainerClipping,\n      internalScroll = _ref2.internalScroll,\n      scrollContainerStyle = _ref2.scrollContainerStyle,\n      isDropDisabled = _ref2.isDropDisabled,\n      isCombineEnabled = _ref2.isCombineEnabled,\n      listId = _ref2.listId,\n      listType = _ref2.listType,\n      style = _ref2.style,\n      column = _ref2.column,\n      tasks = _ref2.tasks,\n      title = _ref2.title,\n      props = _objectWithoutProperties(_ref2, [\"ignoreContainerClipping\", \"internalScroll\", \"scrollContainerStyle\", \"isDropDisabled\", \"isCombineEnabled\", \"listId\", \"listType\", \"style\", \"column\", \"tasks\", \"title\"]);\n\n  return React.createElement(Droppable, {\n    droppableId: listId,\n    type: listType,\n    ignoreContainerClipping: ignoreContainerClipping,\n    isDropDisabled: isDropDisabled,\n    isCombineEnabled: isCombineEnabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, function (dropProvided, dropSnapshot) {\n    return React.createElement(Wrapper, Object.assign({\n      style: style,\n      isDraggingOver: dropSnapshot.isDraggingOver,\n      isDropDisabled: isDropDisabled\n    }, dropProvided.droppableProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), internalScroll ? React.createElement(InnerList, {\n      tasks: tasks,\n      title: title,\n      columnId: column.id,\n      dropProvided: dropProvided,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }) : React.createElement(InnerList, {\n      title: title,\n      tasks: tasks,\n      columnId: column.id,\n      dropProvided: dropProvided,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  });\n};\n\nTaskList.defaultProps = {\n  listId: 'LIST'\n};\nexport default TaskList;","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\containers\\ScrumBoard\\Task\\TaskList\\TaskList.js"],"names":["React","Component","Droppable","Draggable","TaskItem","DropZone","Wrapper","Scrollbars","InnerTaskList","nextProps","tasks","props","map","task","index","id","dragProvided","dragSnapshot","columnId","isDragging","Boolean","combineTargetFor","InnerList","dropProvided","innerRef","height","placeholder","TaskList","ignoreContainerClipping","internalScroll","scrollContainerStyle","isDropDisabled","isCombineEnabled","listId","listType","style","column","title","dropSnapshot","isDraggingOver","droppableProps","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport TaskItem from '../Task';\nimport { DropZone, Wrapper } from './TaskList.style';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nclass InnerTaskList extends Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.tasks !== this.props.tasks) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    return this.props.tasks.map((task, index) => (\n      <Draggable key={task.id} draggableId={task.id} index={index}>\n        {(dragProvided, dragSnapshot) => (\n          <TaskItem\n            key={task.id}\n            task={task}\n            columnId={this.props.columnId}\n            isDragging={dragSnapshot.isDragging}\n            isGroupedOver={Boolean(dragSnapshot.combineTargetFor)}\n            provided={dragProvided}\n          />\n        )}\n      </Draggable>\n    ));\n  }\n}\n\nconst InnerList = ({ dropProvided, tasks, columnId }) => (\n  <DropZone ref={dropProvided.innerRef}>\n    <Scrollbars style={{ height: 500 }} autoHide>\n      <InnerTaskList tasks={tasks} columnId={columnId} />\n      {dropProvided.placeholder}\n    </Scrollbars>\n  </DropZone>\n);\n\nconst TaskList = ({\n  ignoreContainerClipping,\n  internalScroll,\n  scrollContainerStyle,\n  isDropDisabled,\n  isCombineEnabled,\n  listId,\n  listType,\n  style,\n  column,\n  tasks,\n  title,\n  ...props\n}) => {\n  return (\n    <Droppable\n      droppableId={listId}\n      type={listType}\n      ignoreContainerClipping={ignoreContainerClipping}\n      isDropDisabled={isDropDisabled}\n      isCombineEnabled={isCombineEnabled}\n    >\n      {(dropProvided, dropSnapshot) => (\n        <Wrapper\n          style={style}\n          isDraggingOver={dropSnapshot.isDraggingOver}\n          isDropDisabled={isDropDisabled}\n          {...dropProvided.droppableProps}\n        >\n          {internalScroll ? (\n            <InnerList\n              tasks={tasks}\n              title={title}\n              columnId={column.id}\n              dropProvided={dropProvided}\n            />\n          ) : (\n            <InnerList\n              title={title}\n              tasks={tasks}\n              columnId={column.id}\n              dropProvided={dropProvided}\n            />\n          )}\n        </Wrapper>\n      )}\n    </Droppable>\n  );\n};\n\nTaskList.defaultProps = {\n  listId: 'LIST',\n};\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}