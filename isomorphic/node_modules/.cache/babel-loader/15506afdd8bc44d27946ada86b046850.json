{"ast":null,"code":"import Fuse from 'fuse.js';\nexport var filterProjects = function filterProjects() {\n  var boards = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var searchText = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  if (searchText !== '') {\n    var boardLists = Object.values(boards);\n    var fuse = new Fuse(boardLists, {\n      shouldSort: true,\n      threshold: 0.6,\n      location: 0,\n      distance: 100,\n      maxPatternLength: 32,\n      minMatchCharLength: 1,\n      keys: ['title']\n    });\n    var result = fuse.search(searchText);\n    var filteredBoards = result.reduce(function (newBoards, board) {\n      newBoards[board.id] = board;\n      return newBoards;\n    }, {});\n    return filteredBoards;\n  }\n\n  return boards;\n};","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\helpers\\filterProjects.js"],"names":["Fuse","filterProjects","boards","searchText","boardLists","Object","values","fuse","shouldSort","threshold","location","distance","maxPatternLength","minMatchCharLength","keys","result","search","filteredBoards","reduce","newBoards","board","id"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,MAAiC,uEAAxB,EAAwB;AAAA,MAApBC,UAAoB,uEAAP,EAAO;;AAC9D,MAAIA,UAAU,KAAK,EAAnB,EAAuB;AACrB,QAAIC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAcJ,MAAd,CAAjB;AACA,QAAIK,IAAI,GAAG,IAAIP,IAAJ,CAASI,UAAT,EAAqB;AAC9BI,MAAAA,UAAU,EAAE,IADkB;AAE9BC,MAAAA,SAAS,EAAE,GAFmB;AAG9BC,MAAAA,QAAQ,EAAE,CAHoB;AAI9BC,MAAAA,QAAQ,EAAE,GAJoB;AAK9BC,MAAAA,gBAAgB,EAAE,EALY;AAM9BC,MAAAA,kBAAkB,EAAE,CANU;AAO9BC,MAAAA,IAAI,EAAE,CAAC,OAAD;AAPwB,KAArB,CAAX;AASA,QAAIC,MAAM,GAAGR,IAAI,CAACS,MAAL,CAAYb,UAAZ,CAAb;AAEA,QAAMc,cAAc,GAAGF,MAAM,CAACG,MAAP,CAAc,UAACC,SAAD,EAAYC,KAAZ,EAAsB;AACzDD,MAAAA,SAAS,CAACC,KAAK,CAACC,EAAP,CAAT,GAAsBD,KAAtB;AACA,aAAOD,SAAP;AACD,KAHsB,EAGpB,EAHoB,CAAvB;AAIA,WAAOF,cAAP;AACD;;AAED,SAAOf,MAAP;AACD,CAtBM","sourcesContent":["import Fuse from 'fuse.js';\n\nexport const filterProjects = (boards = {}, searchText = '') => {\n  if (searchText !== '') {\n    let boardLists = Object.values(boards);\n    let fuse = new Fuse(boardLists, {\n      shouldSort: true,\n      threshold: 0.6,\n      location: 0,\n      distance: 100,\n      maxPatternLength: 32,\n      minMatchCharLength: 1,\n      keys: ['title'],\n    });\n    let result = fuse.search(searchText);\n\n    const filteredBoards = result.reduce((newBoards, board) => {\n      newBoards[board.id] = board;\n      return newBoards;\n    }, {});\n    return filteredBoards;\n  }\n\n  return boards;\n};\n"]},"metadata":{},"sourceType":"module"}