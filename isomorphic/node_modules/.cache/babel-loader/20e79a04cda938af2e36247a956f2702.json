{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\containers\\\\Chat\\\\messages.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { timeDifference } from \"../../helpers/utility\";\nimport { MessageSingle, MessageChatWrapper } from \"./message.style\";\nimport actions from \"../../redux/chat/actions\";\n\nvar Messages =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Messages, _Component);\n\n  function Messages() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Messages);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Messages)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.scrollToBottom = function () {\n      var messageChat = document.getElementById(\"messageChat\");\n      messageChat.scrollTop = messageChat.scrollHeight;\n    };\n\n    return _this;\n  }\n\n  _createClass(Messages, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.scrollToBottom();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.scrollToBottom();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          user = _this$props.user,\n          userId = _this$props.userId,\n          selectedChatRoom = _this$props.selectedChatRoom,\n          messages = _this$props.messages,\n          toggleViewProfile = _this$props.toggleViewProfile,\n          toggleMobileProfile = _this$props.toggleMobileProfile;\n\n      var renderMessage = function renderMessage(message) {\n        var isUser = userId === message.sender;\n        var messageUser = isUser ? user : selectedChatRoom.otherUserInfo;\n\n        if (isUser) {\n          return React.createElement(MessageSingle, {\n            className: \"loggedUser\",\n            key: message.messageTime,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"messageContent isUser\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"messageContentText\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, message.text)), React.createElement(\"div\", {\n            className: \"messageTime\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, timeDifference(message.messageTime)))), React.createElement(\"div\", {\n            className: \"messageGravatar\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            alt: \"#\",\n            src: messageUser.profileImageUrl,\n            onClick: function onClick() {\n              toggleMobileProfile(true);\n              toggleViewProfile(messageUser);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          })));\n        } else {\n          return React.createElement(MessageSingle, {\n            key: message.messageTime,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"messageGravatar\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            alt: \"#\",\n            src: messageUser.profileImageUrl,\n            onClick: function onClick() {\n              toggleMobileProfile(true);\n              toggleViewProfile(messageUser);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"messageContent notUser\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"messageContentText\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, message.text)), React.createElement(\"div\", {\n            className: \"messageTime\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, timeDifference(message.messageTime)))));\n        }\n      };\n\n      return React.createElement(MessageChatWrapper, {\n        id: \"messageChat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, messages.map(renderMessage));\n    }\n  }]);\n\n  return Messages;\n}(Component);\n\nfunction mapStateToProps(state) {\n  var _state$Chat = state.Chat,\n      user = _state$Chat.user,\n      userId = _state$Chat.userId,\n      selectedChatRoom = _state$Chat.selectedChatRoom,\n      messages = _state$Chat.messages;\n  return {\n    user: user,\n    userId: userId,\n    selectedChatRoom: selectedChatRoom,\n    messages: messages\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Messages);","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\containers\\Chat\\messages.js"],"names":["React","Component","connect","timeDifference","MessageSingle","MessageChatWrapper","actions","Messages","scrollToBottom","messageChat","document","getElementById","scrollTop","scrollHeight","props","user","userId","selectedChatRoom","messages","toggleViewProfile","toggleMobileProfile","renderMessage","message","isUser","sender","messageUser","otherUserInfo","messageTime","text","profileImageUrl","map","mapStateToProps","state","Chat"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { timeDifference } from \"../../helpers/utility\";\nimport { MessageSingle, MessageChatWrapper } from \"./message.style\";\nimport actions from \"../../redux/chat/actions\";\n\nclass Messages extends Component {\n  scrollToBottom = () => {\n    const messageChat = document.getElementById(\"messageChat\");\n    messageChat.scrollTop = messageChat.scrollHeight;\n  };\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n  render() {\n    const {\n      user,\n      userId,\n      selectedChatRoom,\n      messages,\n      toggleViewProfile,\n      toggleMobileProfile\n    } = this.props;\n    const renderMessage = message => {\n      const isUser = userId === message.sender;\n      const messageUser = isUser ? user : selectedChatRoom.otherUserInfo;\n      if (isUser) {\n        return (\n          <MessageSingle className=\"loggedUser\" key={message.messageTime}>\n            <div className=\"messageContent isUser\">\n              <div className=\"messageContentText\">\n                <p>{message.text}</p>\n              </div>\n              <div className=\"messageTime\">\n                <p>{timeDifference(message.messageTime)}</p>\n              </div>\n            </div>\n            <div className=\"messageGravatar\">\n              <img\n                alt=\"#\"\n                src={messageUser.profileImageUrl}\n                onClick={() => {\n                  toggleMobileProfile(true);\n                  toggleViewProfile(messageUser);\n                }}\n              />\n            </div>\n          </MessageSingle>\n        );\n      } else {\n        return (\n          <MessageSingle key={message.messageTime}>\n            <div className=\"messageGravatar\">\n              <img\n                alt=\"#\"\n                src={messageUser.profileImageUrl}\n                onClick={() => {\n                  toggleMobileProfile(true);\n                  toggleViewProfile(messageUser);\n                }}\n              />\n            </div>\n            <div className=\"messageContent notUser\">\n              <div className=\"messageContentText\">\n                <p>{message.text}</p>\n              </div>\n              <div className=\"messageTime\">\n                <p>{timeDifference(message.messageTime)}</p>\n              </div>\n            </div>\n          </MessageSingle>\n        );\n      }\n    };\n    return (\n      <MessageChatWrapper id=\"messageChat\">\n        {messages.map(renderMessage)}\n      </MessageChatWrapper>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  const { user, userId, selectedChatRoom, messages } = state.Chat;\n  return {\n    user,\n    userId,\n    selectedChatRoom,\n    messages\n  };\n}\nexport default connect(mapStateToProps, actions)(Messages);\n"]},"metadata":{},"sourceType":"module"}