{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\containers\\\\Uielements\\\\Tree\\\\asyncTree.js\";\nimport React, { Component } from 'react';\nimport Tree, { TreeNode } from '../../../components/uielements/tree';\n\nfunction generateTreeNodes(treeNode) {\n  var arr = [];\n  var key = treeNode.props.eventKey;\n\n  for (var i = 0; i < 3; i++) {\n    arr.push({\n      name: \"leaf \".concat(key, \"-\").concat(i),\n      key: \"\".concat(key, \"-\").concat(i)\n    });\n  }\n\n  return arr;\n}\n\nfunction setLeaf(treeData, curKey, level) {\n  var loopLeaf = function loopLeaf(data, lev) {\n    var l = lev - 1;\n    data.forEach(function (item) {\n      if (item.key.length > curKey.length ? item.key.indexOf(curKey) !== 0 : curKey.indexOf(item.key) !== 0) {\n        return;\n      }\n\n      if (item.children) {\n        loopLeaf(item.children, l);\n      } else if (l < 1) {\n        item.isLeaf = true;\n      }\n    });\n  };\n\n  loopLeaf(treeData, level + 1);\n}\n\nfunction getNewTreeData(treeData, curKey, child, level) {\n  var loop = function loop(data) {\n    if (level < 1 || curKey.length - 3 > level * 2) return;\n    data.forEach(function (item) {\n      if (curKey.indexOf(item.key) === 0) {\n        if (item.children) {\n          loop(item.children);\n        } else {\n          item.children = child;\n        }\n      }\n    });\n  };\n\n  loop(treeData);\n  setLeaf(treeData, curKey, level);\n}\n\nvar _default =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_default, _Component);\n\n  function _default() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_default)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      treeData: []\n    };\n\n    _this.onSelect = function (info) {};\n\n    _this.onLoadData = function (treeNode) {\n      return new Promise(function (resolve) {\n        setTimeout(function () {\n          var treeData = _toConsumableArray(_this.state.treeData);\n\n          getNewTreeData(treeData, treeNode.props.eventKey, generateTreeNodes(treeNode), 2);\n\n          _this.setState({\n            treeData: treeData\n          });\n\n          resolve();\n        }, 1000);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      setTimeout(function () {\n        _this2.setState({\n          treeData: [{\n            name: 'pNode 01',\n            key: '0-0'\n          }, {\n            name: 'pNode 02',\n            key: '0-1'\n          }, {\n            name: 'pNode 03',\n            key: '0-2',\n            isLeaf: true\n          }]\n        });\n      }, 100);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var loop = function loop(data) {\n        return data.map(function (item) {\n          if (item.children) {\n            return React.createElement(TreeNode, {\n              title: item.name,\n              key: item.key,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87\n              },\n              __self: this\n            }, loop(item.children));\n          }\n\n          return React.createElement(TreeNode, {\n            title: item.name,\n            key: item.key,\n            isLeaf: item.isLeaf,\n            disabled: item.key === '0-0-0',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          });\n        });\n      };\n\n      var treeNodes = loop(this.state.treeData);\n      return React.createElement(Tree, {\n        onSelect: this.onSelect,\n        loadData: this.onLoadData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, treeNodes);\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\containers\\Uielements\\Tree\\asyncTree.js"],"names":["React","Component","Tree","TreeNode","generateTreeNodes","treeNode","arr","key","props","eventKey","i","push","name","setLeaf","treeData","curKey","level","loopLeaf","data","lev","l","forEach","item","length","indexOf","children","isLeaf","getNewTreeData","child","loop","state","onSelect","info","onLoadData","Promise","resolve","setTimeout","setState","map","treeNodes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Tree, { TreeNode } from '../../../components/uielements/tree';\n\nfunction generateTreeNodes(treeNode) {\n  const arr = [];\n  const key = treeNode.props.eventKey;\n  for (let i = 0; i < 3; i++) {\n    arr.push({ name: `leaf ${key}-${i}`, key: `${key}-${i}` });\n  }\n  return arr;\n}\n\nfunction setLeaf(treeData, curKey, level) {\n  const loopLeaf = (data, lev) => {\n    const l = lev - 1;\n    data.forEach(item => {\n      if (\n        item.key.length > curKey.length\n          ? item.key.indexOf(curKey) !== 0\n          : curKey.indexOf(item.key) !== 0\n      ) {\n        return;\n      }\n      if (item.children) {\n        loopLeaf(item.children, l);\n      } else if (l < 1) {\n        item.isLeaf = true;\n      }\n    });\n  };\n  loopLeaf(treeData, level + 1);\n}\n\nfunction getNewTreeData(treeData, curKey, child, level) {\n  const loop = data => {\n    if (level < 1 || curKey.length - 3 > level * 2) return;\n    data.forEach(item => {\n      if (curKey.indexOf(item.key) === 0) {\n        if (item.children) {\n          loop(item.children);\n        } else {\n          item.children = child;\n        }\n      }\n    });\n  };\n  loop(treeData);\n  setLeaf(treeData, curKey, level);\n}\n\nexport default class extends Component {\n  state = {\n    treeData: []\n  };\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        treeData: [\n          { name: 'pNode 01', key: '0-0' },\n          { name: 'pNode 02', key: '0-1' },\n          { name: 'pNode 03', key: '0-2', isLeaf: true }\n        ]\n      });\n    }, 100);\n  }\n  onSelect = info => {};\n  onLoadData = treeNode => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const treeData = [...this.state.treeData];\n        getNewTreeData(\n          treeData,\n          treeNode.props.eventKey,\n          generateTreeNodes(treeNode),\n          2\n        );\n        this.setState({ treeData });\n        resolve();\n      }, 1000);\n    });\n  };\n  render() {\n    const loop = data =>\n      data.map(item => {\n        if (item.children) {\n          return (\n            <TreeNode title={item.name} key={item.key}>\n              {loop(item.children)}\n            </TreeNode>\n          );\n        }\n        return (\n          <TreeNode\n            title={item.name}\n            key={item.key}\n            isLeaf={item.isLeaf}\n            disabled={item.key === '0-0-0'}\n          />\n        );\n      });\n    const treeNodes = loop(this.state.treeData);\n    return (\n      <Tree onSelect={this.onSelect} loadData={this.onLoadData}>\n        {treeNodes}\n      </Tree>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}