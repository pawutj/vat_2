{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport firebase from 'firebase';\nimport ReduxSagaFirebase from 'redux-saga-firebase';\nimport 'firebase/firestore';\nimport { firebaseConfig } from '../../settings';\nvar valid = firebaseConfig && firebaseConfig.apiKey && firebaseConfig.projectId;\nvar firebaseApp = valid && firebase.initializeApp(firebaseConfig);\nvar firebaseAuth = valid && firebase.auth;\n\nvar FirebaseHelper =\n/*#__PURE__*/\nfunction () {\n  function FirebaseHelper() {\n    var _this = this;\n\n    _classCallCheck(this, FirebaseHelper);\n\n    this.isValid = valid;\n    this.EMAIL = 'email';\n    this.FACEBOOK = 'facebook';\n    this.GOOGLE = 'google';\n    this.GITHUB = 'github';\n    this.TWITTER = 'twitter';\n\n    this.createBatch = function () {\n      return _this.database.batch();\n    };\n\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.database = this.isValid && firebase.firestore();\n\n    if (this.database) {\n      var settings = {\n        timestampsInSnapshots: true\n      };\n      this.database.settings(settings);\n    }\n\n    this.rsf = this.isValid && new ReduxSagaFirebase(firebaseApp, firebase.firestore());\n    this.rsfFirestore = this.isValid && this.rsf.firestore;\n  }\n\n  _createClass(FirebaseHelper, [{\n    key: \"signup\",\n    value: function () {\n      var _signup = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(provider, info) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.isValid) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                _context.prev = 2;\n                _context.t0 = provider;\n                _context.next = _context.t0 === this.EMAIL ? 6 : 9;\n                break;\n\n              case 6:\n                _context.next = 8;\n                return firebaseAuth().createUserWithEmailAndPassword(info.email, info.password);\n\n              case 8:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 9:\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t1 = _context[\"catch\"](2);\n                return _context.abrupt(\"return\", _context.t1);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 11]]);\n      }));\n\n      function signup(_x, _x2) {\n        return _signup.apply(this, arguments);\n      }\n\n      return signup;\n    }()\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(provider, info) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this.isValid) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                _context2.prev = 2;\n                _context2.t0 = provider;\n                _context2.next = _context2.t0 === this.EMAIL ? 6 : _context2.t0 === this.FACEBOOK ? 9 : _context2.t0 === this.GOOGLE ? 12 : _context2.t0 === this.GITHUB ? 15 : _context2.t0 === this.TWITTER ? 18 : 21;\n                break;\n\n              case 6:\n                _context2.next = 8;\n                return firebaseAuth().signInWithEmailAndPassword(info.email, info.password);\n\n              case 8:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 9:\n                _context2.next = 11;\n                return firebaseAuth().FacebookAuthProvider();\n\n              case 11:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 12:\n                _context2.next = 14;\n                return firebaseAuth().GoogleAuthProvider();\n\n              case 14:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 15:\n                _context2.next = 17;\n                return firebaseAuth().GithubAuthProvider();\n\n              case 17:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 18:\n                _context2.next = 20;\n                return firebaseAuth().TwitterAuthProvider();\n\n              case 20:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 21:\n                _context2.next = 26;\n                break;\n\n              case 23:\n                _context2.prev = 23;\n                _context2.t1 = _context2[\"catch\"](2);\n                return _context2.abrupt(\"return\", _context2.t1);\n\n              case 26:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 23]]);\n      }));\n\n      function login(_x3, _x4) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      return firebaseAuth().signOut();\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      firebaseAuth().onAuthStateChanged(function (user) {\n        return user ? true : false;\n      });\n    }\n  }, {\n    key: \"resetPassword\",\n    value: function resetPassword(email) {\n      return firebaseAuth().sendPasswordResetEmail(email);\n    }\n  }, {\n    key: \"createNewRef\",\n    value: function createNewRef() {\n      return firebase.database().ref().push().key;\n    }\n  }, {\n    key: \"processFireStoreCollection\",\n    value: function processFireStoreCollection(snapshot) {\n      var data = {};\n      snapshot.forEach(function (doc) {\n        data = _objectSpread({}, data, _defineProperty({}, doc.id, doc.data()));\n      });\n      return data;\n    }\n  }]);\n\n  return FirebaseHelper;\n}();\n\nexport default new FirebaseHelper();","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\helpers\\firebase\\index.js"],"names":["firebase","ReduxSagaFirebase","firebaseConfig","valid","apiKey","projectId","firebaseApp","initializeApp","firebaseAuth","auth","FirebaseHelper","isValid","EMAIL","FACEBOOK","GOOGLE","GITHUB","TWITTER","createBatch","database","batch","login","bind","logout","isAuthenticated","firestore","settings","timestampsInSnapshots","rsf","rsfFirestore","provider","info","createUserWithEmailAndPassword","email","password","signInWithEmailAndPassword","FacebookAuthProvider","GoogleAuthProvider","GithubAuthProvider","TwitterAuthProvider","signOut","onAuthStateChanged","user","sendPasswordResetEmail","ref","push","key","snapshot","data","forEach","doc","id"],"mappings":"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","sourcesContent":["import firebase from 'firebase';\nimport ReduxSagaFirebase from 'redux-saga-firebase';\nimport 'firebase/firestore';\nimport { firebaseConfig } from '../../settings';\n\nconst valid =\n  firebaseConfig && firebaseConfig.apiKey && firebaseConfig.projectId;\n\nconst firebaseApp = valid && firebase.initializeApp(firebaseConfig);\nconst firebaseAuth = valid && firebase.auth;\n\nclass FirebaseHelper {\n  isValid = valid;\n  EMAIL = 'email';\n  FACEBOOK = 'facebook';\n  GOOGLE = 'google';\n  GITHUB = 'github';\n  TWITTER = 'twitter';\n\n  constructor() {\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.database = this.isValid && firebase.firestore();\n    if (this.database) {\n      const settings = { timestampsInSnapshots: true };\n      this.database.settings(settings);\n    }\n    this.rsf =\n      this.isValid && new ReduxSagaFirebase(firebaseApp, firebase.firestore());\n    this.rsfFirestore = this.isValid && this.rsf.firestore;\n  }\n\n  createBatch = () => {\n    return this.database.batch();\n  };\n\n  async signup(provider, info) {\n    if (!this.isValid) {\n      return;\n    }\n    try {\n      switch (provider) {\n        case this.EMAIL:\n          return await firebaseAuth().createUserWithEmailAndPassword(\n            info.email,\n            info.password\n          );\n        default:\n      }\n    } catch (error) {\n      return error;\n    }\n  }\n\n  async login(provider, info) {\n    if (!this.isValid) {\n      return;\n    }\n    try {\n      switch (provider) {\n        case this.EMAIL:\n          return await firebaseAuth().signInWithEmailAndPassword(\n            info.email,\n            info.password\n          );\n        case this.FACEBOOK:\n          return await firebaseAuth().FacebookAuthProvider();\n        case this.GOOGLE:\n          return await firebaseAuth().GoogleAuthProvider();\n        case this.GITHUB:\n          return await firebaseAuth().GithubAuthProvider();\n        case this.TWITTER:\n          return await firebaseAuth().TwitterAuthProvider();\n        default:\n      }\n    } catch (error) {\n      return error;\n    }\n  }\n\n  logout() {\n    return firebaseAuth().signOut();\n  }\n\n  isAuthenticated() {\n    firebaseAuth().onAuthStateChanged(user => {\n      return user ? true : false;\n    });\n  }\n  resetPassword(email) {\n    return firebaseAuth().sendPasswordResetEmail(email);\n  }\n  createNewRef() {\n    return firebase\n      .database()\n      .ref()\n      .push().key;\n  }\n  processFireStoreCollection(snapshot) {\n    let data = {};\n    snapshot.forEach(doc => {\n      data = {\n        ...data,\n        [doc.id]: doc.data(),\n      };\n    });\n    return data;\n  }\n}\n\nexport default new FirebaseHelper();\n"]},"metadata":{},"sourceType":"module"}