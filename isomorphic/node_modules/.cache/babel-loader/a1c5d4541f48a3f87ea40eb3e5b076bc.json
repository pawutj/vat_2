{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\components\\\\ScrumBoard\\\\RenderBoardForm\\\\RenderBoardForm.js\";\nimport React from 'react';\nimport { Form, Field } from 'formik';\nimport { Button, Tooltip } from 'antd';\nimport { AntInput, AntSelect, AntSwitch } from '../AntFields';\nimport { isRequired } from '../ValidateFields';\nimport ThumbIcon from \"../../../static/Images/08-icon.svg\";\nimport { Wrapper } from './RenderBoardForm.style';\nvar formItemLayout = {\n  labelCol: {\n    sm: {\n      span: 12\n    },\n    md: {\n      span: 12,\n      push: 3\n    },\n    style: {\n      textAlign: 'left'\n    }\n  },\n  wrapperCol: {\n    sm: {\n      span: 12\n    },\n    md: {\n      span: 3,\n      pull: 12\n    }\n  },\n  colon: false\n};\nexport default (function (_ref) {\n  var handleSubmit = _ref.handleSubmit,\n      values = _ref.values,\n      submitCount = _ref.submitCount;\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Field, {\n    component: AntInput,\n    name: \"title\",\n    type: \"text\",\n    label: \"Project Name*\",\n    validate: isRequired,\n    submitCount: submitCount,\n    hasFeedback: true,\n    placeholder: \"Enter project name...\",\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: AntSelect,\n    name: \"category\",\n    label: \"Project Category*\",\n    placeholder: \"Select a Category\",\n    defaultValue: values.category,\n    selectOptions: values.selectOptions,\n    validate: isRequired,\n    submitCount: submitCount,\n    hasFeedback: true,\n    dropdownClassName: \"project-category\",\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: AntSwitch,\n    className: \"switch-form-item\",\n    defaultChecked: values.open_to_company,\n    name: \"open_to_company\",\n    label: \" Public To RedQ Studio\",\n    formitem: formItemLayout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: AntSwitch,\n    className: \"switch-form-item\",\n    name: \"open_to_members\",\n    defaultChecked: values.open_to_members,\n    formitem: formItemLayout,\n    label: \" Private To Project Members\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      color: '#1890FF',\n      fontSize: '16px',\n      fontWeight: 500\n    },\n    className: 'field-container',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: ThumbIcon,\n    alt: \"Project\",\n    width: 40,\n    height: 40,\n    style: {\n      marginRight: 10,\n      borderRadius: 6\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    title: \"Please Implements Your Own Avatar Methods\",\n    placement: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Select Avatar\"))), React.createElement(Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    style: {\n      width: '100%',\n      marginTop: 20\n    },\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, !values.editing ? 'Create Project' : 'Update Task')));\n});","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\components\\ScrumBoard\\RenderBoardForm\\RenderBoardForm.js"],"names":["React","Form","Field","Button","Tooltip","AntInput","AntSelect","AntSwitch","isRequired","Wrapper","formItemLayout","labelCol","sm","span","md","push","style","textAlign","wrapperCol","pull","colon","handleSubmit","values","submitCount","category","selectOptions","open_to_company","open_to_members","display","alignItems","color","fontSize","fontWeight","ThumbIcon","marginRight","borderRadius","width","marginTop","editing"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Field } from 'formik';\nimport { Button, Tooltip } from 'antd';\nimport { AntInput, AntSelect, AntSwitch } from '../AntFields';\nimport { isRequired } from '../ValidateFields';\nimport ThumbIcon from '../../../static/Images/08-icon.svg';\nimport { Wrapper } from './RenderBoardForm.style';\nconst formItemLayout = {\n  labelCol: {\n    sm: { span: 12 },\n    md: { span: 12, push: 3 },\n    style: { textAlign: 'left' },\n  },\n  wrapperCol: { sm: { span: 12 }, md: { span: 3, pull: 12 } },\n  colon: false,\n};\nexport default ({ handleSubmit, values, submitCount }) => (\n  <Wrapper>\n    <Form onSubmit={handleSubmit}>\n      <Field\n        component={AntInput}\n        name=\"title\"\n        type=\"text\"\n        label=\"Project Name*\"\n        validate={isRequired}\n        submitCount={submitCount}\n        hasFeedback\n        placeholder=\"Enter project name...\"\n        size=\"large\"\n      />\n\n      <Field\n        component={AntSelect}\n        name=\"category\"\n        label=\"Project Category*\"\n        placeholder=\"Select a Category\"\n        defaultValue={values.category}\n        selectOptions={values.selectOptions}\n        validate={isRequired}\n        submitCount={submitCount}\n        hasFeedback\n        dropdownClassName=\"project-category\"\n        size=\"large\"\n      />\n\n      <Field\n        component={AntSwitch}\n        className=\"switch-form-item\"\n        defaultChecked={values.open_to_company}\n        name=\"open_to_company\"\n        label=\" Public To RedQ Studio\"\n        formitem={formItemLayout}\n      />\n\n      <Field\n        component={AntSwitch}\n        className=\"switch-form-item\"\n        name=\"open_to_members\"\n        defaultChecked={values.open_to_members}\n        formitem={formItemLayout}\n        label=\" Private To Project Members\"\n      />\n\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          color: '#1890FF',\n          fontSize: '16px',\n          fontWeight: 500,\n        }}\n        className={'field-container'}\n      >\n        <img\n          src={ThumbIcon}\n          alt=\"Project\"\n          width={40}\n          height={40}\n          style={{ marginRight: 10, borderRadius: 6 }}\n        />\n        <Tooltip\n          title=\"Please Implements Your Own Avatar Methods\"\n          placement=\"right\"\n        >\n          <div>Select Avatar</div>\n        </Tooltip>\n      </div>\n\n      <Button\n        htmlType=\"submit\"\n        type=\"primary\"\n        style={{ width: '100%', marginTop: 20 }}\n        size=\"large\"\n      >\n        {!values.editing ? 'Create Project' : 'Update Task'}\n      </Button>\n    </Form>\n  </Wrapper>\n);\n"]},"metadata":{},"sourceType":"module"}