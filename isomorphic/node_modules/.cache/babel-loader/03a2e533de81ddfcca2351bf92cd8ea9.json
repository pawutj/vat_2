{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\customApp\\\\containers\\\\GithubSearch\\\\index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'antd';\nimport PageHeader from '../../../components/utility/pageHeader';\nimport Box from '../../../components/utility/box';\nimport LayoutWrapper from '../../../components/utility/layoutWrapper';\nimport { InputSearch } from '../../../components/uielements/input';\nimport IntlMessages from '../../../components/utility/intlMessages';\nimport notification from '../../../components/notification';\nimport GitResult from '../../components/githubResult';\nimport basicStyle from '../../../settings/basicStyle';\nimport actions from '../../redux/githubSearch/actions';\nvar gitSearch = actions.gitSearch,\n    onPageChange = actions.onPageChange;\n\nvar GitSearch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GitSearch, _Component);\n\n  function GitSearch() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GitSearch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GitSearch)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSearch = function (value) {\n      if (value && value.length > 0) {\n        _this.props.gitSearch(value);\n      } else {\n        notification('error', 'Please type something');\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(GitSearch, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onSearch(this.props.GitSearch.searcText);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var rowStyle = basicStyle.rowStyle,\n          colStyle = basicStyle.colStyle,\n          gutter = basicStyle.gutter;\n      var _this$props = this.props,\n          onPageChange = _this$props.onPageChange,\n          GitSearch = _this$props.GitSearch;\n      return React.createElement(LayoutWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(PageHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"sidebar.githubSearch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })), React.createElement(Row, {\n        style: rowStyle,\n        gutter: gutter,\n        justify: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 24,\n        sm: 24,\n        xs: 24,\n        style: colStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Box, {\n        style: {\n          minHeight: 220\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(InputSearch, {\n        placeholder: \"Github Search\",\n        defaultValue: GitSearch.searcText,\n        onSearch: this.onSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(GitResult, {\n        GitSearch: GitSearch,\n        defaultValue: GitSearch.searcText,\n        onPageChange: onPageChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return GitSearch;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    GitSearch: state.githubSearch\n  };\n}\n\nexport default connect(mapStateToProps, {\n  gitSearch: gitSearch,\n  onPageChange: onPageChange\n})(GitSearch);","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\customApp\\containers\\GithubSearch\\index.js"],"names":["React","Component","connect","Row","Col","PageHeader","Box","LayoutWrapper","InputSearch","IntlMessages","notification","GitResult","basicStyle","actions","gitSearch","onPageChange","GitSearch","onSearch","value","length","props","searcText","rowStyle","colStyle","gutter","minHeight","mapStateToProps","state","githubSearch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'antd';\nimport PageHeader from '../../../components/utility/pageHeader';\nimport Box from '../../../components/utility/box';\nimport LayoutWrapper from '../../../components/utility/layoutWrapper';\nimport { InputSearch } from '../../../components/uielements/input';\nimport IntlMessages from '../../../components/utility/intlMessages';\nimport notification from '../../../components/notification';\nimport GitResult from '../../components/githubResult';\nimport basicStyle from '../../../settings/basicStyle';\nimport actions from '../../redux/githubSearch/actions';\n\nconst { gitSearch, onPageChange } = actions;\n\nclass GitSearch extends Component {\n  onSearch = value => {\n    if (value && value.length > 0) {\n      this.props.gitSearch(value);\n    } else {\n      notification('error', 'Please type something');\n    }\n  };\n  componentDidMount() {\n    this.onSearch(this.props.GitSearch.searcText);\n  }\n  render() {\n    const { rowStyle, colStyle, gutter } = basicStyle;\n    const { onPageChange, GitSearch } = this.props;\n    return (\n      <LayoutWrapper>\n        <PageHeader>\n          <IntlMessages id=\"sidebar.githubSearch\" />\n        </PageHeader>\n        <Row style={rowStyle} gutter={gutter} justify=\"start\">\n          <Col md={24} sm={24} xs={24} style={colStyle}>\n            <Box style={{ minHeight: 220 }}>\n              <InputSearch\n                placeholder=\"Github Search\"\n                defaultValue={GitSearch.searcText}\n                onSearch={this.onSearch}\n              />\n              <GitResult\n                GitSearch={GitSearch}\n                defaultValue={GitSearch.searcText}\n                onPageChange={onPageChange}\n              />\n            </Box>\n          </Col>\n        </Row>\n      </LayoutWrapper>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return { GitSearch: state.githubSearch };\n}\nexport default connect(\n  mapStateToProps,\n  { gitSearch, onPageChange }\n)(GitSearch);\n"]},"metadata":{},"sourceType":"module"}