{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\containers\\\\Map\\\\Leaflet\\\\maps\\\\mapWithMarkerCluster.js\";\nimport React, { Component } from 'react';\nimport 'leaflet';\nimport 'leaflet.markercluster';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\nimport { mapboxConfig } from '../../../../settings';\nimport { markerCluster } from '../config';\nimport LeafletMapWrapper from './map.style';\n\nvar _default =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_default, _Component);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n    _this.mountMap = _this.mountMap.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"mountMap\",\n    value: function mountMap(element) {\n      if (!element) return;\n      var _window = window,\n          L = _window.L;\n      var map = L.map(element).setView(mapboxConfig.center, !isNaN(mapboxConfig.defaultZoom) ? mapboxConfig.defaultZoom : 13);\n      var osmAttr = '&copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors';\n      L.tileLayer(mapboxConfig.tileLayer, {\n        maxZoom: !isNaN(mapboxConfig.maxZoom) ? mapboxConfig.maxZoom : 18,\n        attribution: osmAttr\n      }).addTo(map);\n      var markers = L.markerClusterGroup();\n      markerCluster.map(function (singleMarker) {\n        var customIcon = L.icon({\n          iconUrl: singleMarker.iconUrl,\n          iconSize: [40, 40],\n          // size of the icon\n          popupAnchor: [0, -20] // point from which the popup should open relative to the iconAnchor\n\n        });\n        return markers.addLayer(L.marker(singleMarker.position, {\n          icon: customIcon\n        }).bindPopup(singleMarker.popupText).openPopup());\n      });\n      map.addLayer(markers);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(LeafletMapWrapper, {\n        className: \"isoLeafletMap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"basic-map-marker\",\n        style: {\n          height: '400px',\n          width: '100%'\n        },\n        ref: this.mountMap,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\containers\\Map\\Leaflet\\maps\\mapWithMarkerCluster.js"],"names":["React","Component","mapboxConfig","markerCluster","LeafletMapWrapper","props","mountMap","bind","element","window","L","map","setView","center","isNaN","defaultZoom","osmAttr","tileLayer","maxZoom","attribution","addTo","markers","markerClusterGroup","singleMarker","customIcon","icon","iconUrl","iconSize","popupAnchor","addLayer","marker","position","bindPopup","popupText","openPopup","height","width"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,SAAP;AACA,OAAO,uBAAP;AACA,OAAO,8CAAP;AACA,OAAO,sDAAP;AAEA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,OAAOC,iBAAP,MAA8B,aAA9B;;;;;;;AAGE,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AAFiB;AAGlB;;;;6BACQC,O,EAAS;AAChB,UAAI,CAACA,OAAL,EAAc;AADE,oBAEFC,MAFE;AAAA,UAERC,CAFQ,WAERA,CAFQ;AAGhB,UAAMC,GAAG,GAAGD,CAAC,CAACC,GAAF,CAAMH,OAAN,EAAeI,OAAf,CACVV,YAAY,CAACW,MADH,EAEV,CAACC,KAAK,CAACZ,YAAY,CAACa,WAAd,CAAN,GAAmCb,YAAY,CAACa,WAAhD,GAA8D,EAFpD,CAAZ;AAIA,UAAMC,OAAO,GACX,0EADF;AAEAN,MAAAA,CAAC,CAACO,SAAF,CAAYf,YAAY,CAACe,SAAzB,EAAoC;AAClCC,QAAAA,OAAO,EAAE,CAACJ,KAAK,CAACZ,YAAY,CAACgB,OAAd,CAAN,GAA+BhB,YAAY,CAACgB,OAA5C,GAAsD,EAD7B;AAElCC,QAAAA,WAAW,EAAEH;AAFqB,OAApC,EAGGI,KAHH,CAGST,GAHT;AAKA,UAAIU,OAAO,GAAGX,CAAC,CAACY,kBAAF,EAAd;AAEAnB,MAAAA,aAAa,CAACQ,GAAd,CAAkB,UAAAY,YAAY,EAAI;AAChC,YAAIC,UAAU,GAAGd,CAAC,CAACe,IAAF,CAAO;AACtBC,UAAAA,OAAO,EAAEH,YAAY,CAACG,OADA;AAEtBC,UAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAFY;AAEF;AACpBC,UAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL,CAHS,CAGA;;AAHA,SAAP,CAAjB;AAKA,eAAOP,OAAO,CAACQ,QAAR,CACLnB,CAAC,CAACoB,MAAF,CAASP,YAAY,CAACQ,QAAtB,EAAgC;AAAEN,UAAAA,IAAI,EAAED;AAAR,SAAhC,EACGQ,SADH,CACaT,YAAY,CAACU,SAD1B,EAEGC,SAFH,EADK,CAAP;AAKD,OAXD;AAYAvB,MAAAA,GAAG,CAACkB,QAAJ,CAAaR,OAAb;AACD;;;6BACQ;AACP,aACE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,eAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,EAAE,EAAC,kBADL;AAEE,QAAA,KAAK,EAAE;AAAEc,UAAAA,MAAM,EAAE,OAAV;AAAmBC,UAAAA,KAAK,EAAE;AAA1B,SAFT;AAGE,QAAA,GAAG,EAAE,KAAK9B,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AASD;;;;EA7C0BL,S","sourcesContent":["import React, { Component } from 'react';\nimport 'leaflet';\nimport 'leaflet.markercluster';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\n\nimport { mapboxConfig } from '../../../../settings';\nimport { markerCluster } from '../config';\nimport LeafletMapWrapper from './map.style';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.mountMap = this.mountMap.bind(this);\n  }\n  mountMap(element) {\n    if (!element) return;\n    const { L } = window;\n    const map = L.map(element).setView(\n      mapboxConfig.center,\n      !isNaN(mapboxConfig.defaultZoom) ? mapboxConfig.defaultZoom : 13\n    );\n    const osmAttr =\n      '&copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors';\n    L.tileLayer(mapboxConfig.tileLayer, {\n      maxZoom: !isNaN(mapboxConfig.maxZoom) ? mapboxConfig.maxZoom : 18,\n      attribution: osmAttr\n    }).addTo(map);\n\n    let markers = L.markerClusterGroup();\n\n    markerCluster.map(singleMarker => {\n      var customIcon = L.icon({\n        iconUrl: singleMarker.iconUrl,\n        iconSize: [40, 40], // size of the icon\n        popupAnchor: [0, -20] // point from which the popup should open relative to the iconAnchor\n      });\n      return markers.addLayer(\n        L.marker(singleMarker.position, { icon: customIcon })\n          .bindPopup(singleMarker.popupText)\n          .openPopup()\n      );\n    });\n    map.addLayer(markers);\n  }\n  render() {\n    return (\n      <LeafletMapWrapper className=\"isoLeafletMap\">\n        <div\n          id=\"basic-map-marker\"\n          style={{ height: '400px', width: '100%' }}\n          ref={this.mountMap}\n        />\n      </LeafletMapWrapper>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}