{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { all } from 'redux-saga/effects';\nimport authSagas from './auth/saga';\nimport contactSagas from './contacts/saga';\nimport invoicesSagas from './invoice/saga';\nimport mailSagas from './mail/saga';\nimport notesSagas from './notes/saga';\nimport todosSagas from './todos/saga';\nimport ecommerceSaga from './ecommerce/saga';\nimport cardsSagas from './card/saga';\nimport chatSagas from './chat/sagas';\nimport youtubeSearchSagas from './youtubeSearch/sagas';\nimport devSagas from '../customApp/redux/sagas';\nimport articles from './articles/sagas';\nimport investors from './investors/sagas';\nimport scrumBoardSaga from './scrumBoard/saga';\nexport default function rootSaga(getState) {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([authSagas(), contactSagas(), mailSagas(), notesSagas(), todosSagas(), ecommerceSaga(), cardsSagas(), invoicesSagas(), chatSagas(), youtubeSearchSagas(), devSagas(), articles(), investors(), scrumBoardSaga()]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\redux\\sagas.js"],"names":["rootSaga","all","authSagas","contactSagas","invoicesSagas","mailSagas","notesSagas","todosSagas","ecommerceSaga","cardsSagas","chatSagas","youtubeSearchSagas","devSagas","articles","investors","scrumBoardSaga","getState"],"mappings":";;;;yBAgByBA,Q;;AAhBzB,SAASC,GAAT,QAAoB,oBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,eAAe,SAAUf,QAAV,CAAmBgB,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMf,GAAG,CAAC,CACRC,SAAS,EADD,EAERC,YAAY,EAFJ,EAGRE,SAAS,EAHD,EAIRC,UAAU,EAJF,EAKRC,UAAU,EALF,EAMRC,aAAa,EANL,EAORC,UAAU,EAPF,EAQRL,aAAa,EARL,EASRM,SAAS,EATD,EAURC,kBAAkB,EAVV,EAWRC,QAAQ,EAXA,EAYRC,QAAQ,EAZA,EAaRC,SAAS,EAbD,EAcRC,cAAc,EAdN,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all } from 'redux-saga/effects';\nimport authSagas from './auth/saga';\nimport contactSagas from './contacts/saga';\nimport invoicesSagas from './invoice/saga';\nimport mailSagas from './mail/saga';\nimport notesSagas from './notes/saga';\nimport todosSagas from './todos/saga';\nimport ecommerceSaga from './ecommerce/saga';\nimport cardsSagas from './card/saga';\nimport chatSagas from './chat/sagas';\nimport youtubeSearchSagas from './youtubeSearch/sagas';\nimport devSagas from '../customApp/redux/sagas';\nimport articles from './articles/sagas';\nimport investors from './investors/sagas';\nimport scrumBoardSaga from './scrumBoard/saga';\n\nexport default function* rootSaga(getState) {\n  yield all([\n    authSagas(),\n    contactSagas(),\n    mailSagas(),\n    notesSagas(),\n    todosSagas(),\n    ecommerceSaga(),\n    cardsSagas(),\n    invoicesSagas(),\n    chatSagas(),\n    youtubeSearchSagas(),\n    devSagas(),\n    articles(),\n    investors(),\n    scrumBoardSaga(),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}