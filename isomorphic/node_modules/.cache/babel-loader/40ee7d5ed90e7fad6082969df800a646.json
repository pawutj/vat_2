{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _connectToggle = require('../connectors/connectToggle.js');\n\nvar _connectToggle2 = _interopRequireDefault(_connectToggle);\n\nvar _Toggle = require('../components/Toggle.js');\n\nvar _Toggle2 = _interopRequireDefault(_Toggle);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * The Toggle provides an on/off filtering feature based on an attribute value.\n * @name Toggle\n * @kind widget\n * @requirements To use this widget, you'll need an attribute to toggle on.\n *\n * You can't toggle on null or not-null values. If you want to address this particular use-case you'll need to compute an\n * extra boolean attribute saying if the value exists or not. See this [thread](https://discourse.algolia.com/t/how-to-create-a-toggle-for-the-absence-of-a-string-attribute/2460) for more details.\n *\n * @propType {string} attributeName - Name of the attribute on which to apply the `value` refinement. Required when `value` is present.\n * @propType {string} label - Label for the toggle.\n * @propType {any} value - Value of the refinement to apply on `attributeName` when checked.\n * @propType {boolean} [defaultRefinement=false] - Default state of the widget. Should the toggle be checked by default?\n * @themeKey ais-Toggle__root - the root of the component\n * @themeKey ais-Toggle__checkbox - the toggle checkbox\n * @themeKey ais-Toggle__label - the toggle label\n * @example\n * import React from 'react';\n *\n * import { Toggle, InstantSearch } from 'react-instantsearch/dom';\n *\n * export default function App() {\n *   return (\n *     <InstantSearch\n *       appId=\"latency\"\n *       apiKey=\"6be0576ff61c053d5f9a3225e2a90f76\"\n *       indexName=\"ikea\"\n *     >\n *       <Toggle\n *         attributeName=\"materials\"\n *         label=\"Made with solid pine\"\n *         value={'Solid pine'}\n *       />\n *     </InstantSearch>\n *   );\n * }\n */\n\n\nexports.default = (0, _connectToggle2.default)(_Toggle2.default);","map":null,"metadata":{},"sourceType":"script"}