{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\customApp\\\\containers\\\\PP10\\\\tableViews\\\\editView.js\";\nimport React, { Component } from 'react';\nimport clone from 'clone';\nimport TableWrapper from '../antTable.style';\nimport { EditableCell, DeleteCell } from '../../../../components/tables/helperCells';\n\nvar _default =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_default, _Component);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n\n    _this.onDeleteCell = function (index) {\n      var dataList = _this.state.dataList;\n      dataList.splice(index, 1);\n\n      _this.setState({\n        dataList: dataList\n      });\n    };\n\n    _this.onCellChange = _this.onCellChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onDeleteCell = _this.onDeleteCell.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      columns: _this.createcolumns(clone(_this.props.tableInfo.columns)),\n      dataList: _this.props.dataList.getAll()\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"createcolumns\",\n    value: function createcolumns(columns) {\n      var _this2 = this;\n\n      var editColumnRender = function editColumnRender(text, record, index) {\n        return React.createElement(EditableCell, {\n          index: index,\n          columnsKey: columns[0].key,\n          value: text[columns[0].key],\n          onChange: _this2.onCellChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        });\n      };\n\n      columns[0].render = editColumnRender;\n      var deleteColumn = {\n        title: 'operation',\n        dataIndex: 'operation',\n        render: function render(text, record, index) {\n          return React.createElement(DeleteCell, {\n            index: index,\n            onDeleteCell: _this2.onDeleteCell,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          });\n        }\n      };\n      columns.push(deleteColumn);\n      return columns;\n    }\n  }, {\n    key: \"onCellChange\",\n    value: function onCellChange(value, columnsKey, index) {\n      var dataList = this.state.dataList;\n      dataList[index][columnsKey] = value;\n      this.setState({\n        dataList: dataList\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          columns = _this$state.columns,\n          dataList = _this$state.dataList;\n      return React.createElement(TableWrapper, {\n        columns: columns,\n        dataSource: dataList,\n        className: \"isoEditableTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\customApp\\containers\\PP10\\tableViews\\editView.js"],"names":["React","Component","clone","TableWrapper","EditableCell","DeleteCell","props","onDeleteCell","index","dataList","state","splice","setState","onCellChange","bind","columns","createcolumns","tableInfo","getAll","editColumnRender","text","record","key","render","deleteColumn","title","dataIndex","push","value","columnsKey"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SACEC,YADF,EAEEC,UAFF,QAGO,2CAHP;;;;;;;AAME,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AADiB,UAkCnBC,YAlCmB,GAkCJ,UAAAC,KAAK,EAAI;AAAA,UACdC,QADc,GACD,MAAKC,KADJ,CACdD,QADc;AAEtBA,MAAAA,QAAQ,CAACE,MAAT,CAAgBH,KAAhB,EAAuB,CAAvB;;AACA,YAAKI,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAARA;AAAF,OAAd;AACD,KAtCkB;;AAEjB,UAAKI,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKP,YAAL,GAAoB,MAAKA,YAAL,CAAkBO,IAAlB,uDAApB;AACA,UAAKJ,KAAL,GAAa;AACXK,MAAAA,OAAO,EAAE,MAAKC,aAAL,CAAmBd,KAAK,CAAC,MAAKI,KAAL,CAAWW,SAAX,CAAqBF,OAAtB,CAAxB,CADE;AAEXN,MAAAA,QAAQ,EAAE,MAAKH,KAAL,CAAWG,QAAX,CAAoBS,MAApB;AAFC,KAAb;AAJiB;AAQlB;;;;kCACaH,O,EAAS;AAAA;;AACrB,UAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD,EAAOC,MAAP,EAAeb,KAAf;AAAA,eACvB,oBAAC,YAAD;AACE,UAAA,KAAK,EAAEA,KADT;AAEE,UAAA,UAAU,EAAEO,OAAO,CAAC,CAAD,CAAP,CAAWO,GAFzB;AAGE,UAAA,KAAK,EAAEF,IAAI,CAACL,OAAO,CAAC,CAAD,CAAP,CAAWO,GAAZ,CAHb;AAIE,UAAA,QAAQ,EAAE,MAAI,CAACT,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADuB;AAAA,OAAzB;;AAQAE,MAAAA,OAAO,CAAC,CAAD,CAAP,CAAWQ,MAAX,GAAoBJ,gBAApB;AACA,UAAMK,YAAY,GAAG;AACnBC,QAAAA,KAAK,EAAE,WADY;AAEnBC,QAAAA,SAAS,EAAE,WAFQ;AAGnBH,QAAAA,MAAM,EAAE,gBAACH,IAAD,EAAOC,MAAP,EAAeb,KAAf;AAAA,iBACN,oBAAC,UAAD;AAAY,YAAA,KAAK,EAAEA,KAAnB;AAA0B,YAAA,YAAY,EAAE,MAAI,CAACD,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM;AAAA;AAHW,OAArB;AAOAQ,MAAAA,OAAO,CAACY,IAAR,CAAaH,YAAb;AACA,aAAOT,OAAP;AACD;;;iCACYa,K,EAAOC,U,EAAYrB,K,EAAO;AAAA,UAC7BC,QAD6B,GAChB,KAAKC,KADW,CAC7BD,QAD6B;AAErCA,MAAAA,QAAQ,CAACD,KAAD,CAAR,CAAgBqB,UAAhB,IAA8BD,KAA9B;AACA,WAAKhB,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAARA;AAAF,OAAd;AACD;;;6BAMQ;AAAA,wBACuB,KAAKC,KAD5B;AAAA,UACCK,OADD,eACCA,OADD;AAAA,UACUN,QADV,eACUA,QADV;AAGP,aACE,oBAAC,YAAD;AACE,QAAA,OAAO,EAAEM,OADX;AAEE,QAAA,UAAU,EAAEN,QAFd;AAGE,QAAA,SAAS,EAAC,kBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD;;;;EAlD0BR,S","sourcesContent":["import React, { Component } from 'react';\nimport clone from 'clone';\nimport TableWrapper from '../antTable.style';\nimport {\n  EditableCell,\n  DeleteCell\n} from '../../../../components/tables/helperCells';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.onCellChange = this.onCellChange.bind(this);\n    this.onDeleteCell = this.onDeleteCell.bind(this);\n    this.state = {\n      columns: this.createcolumns(clone(this.props.tableInfo.columns)),\n      dataList: this.props.dataList.getAll()\n    };\n  }\n  createcolumns(columns) {\n    const editColumnRender = (text, record, index) => (\n      <EditableCell\n        index={index}\n        columnsKey={columns[0].key}\n        value={text[columns[0].key]}\n        onChange={this.onCellChange}\n      />\n    );\n    columns[0].render = editColumnRender;\n    const deleteColumn = {\n      title: 'operation',\n      dataIndex: 'operation',\n      render: (text, record, index) => (\n        <DeleteCell index={index} onDeleteCell={this.onDeleteCell} />\n      )\n    };\n    columns.push(deleteColumn);\n    return columns;\n  }\n  onCellChange(value, columnsKey, index) {\n    const { dataList } = this.state;\n    dataList[index][columnsKey] = value;\n    this.setState({ dataList });\n  }\n  onDeleteCell = index => {\n    const { dataList } = this.state;\n    dataList.splice(index, 1);\n    this.setState({ dataList });\n  };\n  render() {\n    const { columns, dataList } = this.state;\n\n    return (\n      <TableWrapper\n        columns={columns}\n        dataSource={dataList}\n        className=\"isoEditableTable\"\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}