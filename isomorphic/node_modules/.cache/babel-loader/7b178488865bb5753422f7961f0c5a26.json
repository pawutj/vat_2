{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\containers\\\\ScrumBoard\\\\Task\\\\TaskDetails\\\\TaskDetials.js\";\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Badge, Row, Col, Tooltip } from 'antd';\nimport moment from 'moment';\nimport Comments from '../../../../components/ScrumBoard/Comments/Comments';\nimport CardDetailsHeader from './TaskDetailsHeader';\nimport HeadingWithIcon from '../../../../components/ScrumBoard/HeadingWithIcon/HeadingWithIcon';\nimport { CardDetailsWrapper, AttachmentWrapper, TaskName, TaskDescription, ClockIcon } from '../Task.style';\nimport { IconSvg } from '../../../../components/ScrumBoard/IconSvg/IconSvg';\nimport PlusIcon from \"../../../../static/Images/24.svg\";\nimport TitleIcon from \"../../../../static/Images/05-icon.svg\";\nimport DescriptionIcon from \"../../../../static/Images/06-icon.svg\";\nimport AttachmentIcon from \"../../../../static/Images/01-icon.svg\";\nimport Clock from \"../../../../static/Images/17.svg\";\nimport scrumBoardActions from '../../../../redux/scrumBoard/actions';\n\nvar TaskDetials = function TaskDetials(_ref) {\n  var task = _ref.task,\n      deleteTask = _ref.deleteTask,\n      editTask = _ref.editTask,\n      closeDrawer = _ref.closeDrawer,\n      openDrawer = _ref.openDrawer,\n      columnId = _ref.columnId;\n  return React.createElement(CardDetailsWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(CardDetailsHeader, {\n    onBtnClick: function onBtnClick() {\n      editTask(task);\n      openDrawer({\n        drawerType: 'CREATE_OR_EDIT_TASK',\n        drawerProps: {\n          initials: _objectSpread({}, task, {\n            editing: true\n          }),\n          columnId: columnId\n        }\n      });\n    },\n    onIconClick: closeDrawer,\n    onDelete: function onDelete() {\n      deleteTask({\n        taskId: task.id,\n        column_id: columnId\n      });\n      closeDrawer();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(HeadingWithIcon, {\n    heading: \"Task Name\",\n    iconSrc: TitleIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(TaskName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, task.title), React.createElement(Row, {\n    gutter: 16,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(HeadingWithIcon, {\n    heading: \"Assigned Members\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, task.assignees.map(function (assignee) {\n    return React.createElement(Fragment, {\n      key: assignee,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, !assignee ? React.createElement(IconSvg, {\n      src: PlusIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }) : React.createElement(IconSvg, {\n      src: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n      padding: '0',\n      radius: '10% 30% 25%',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  }))), React.createElement(Col, {\n    md: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(HeadingWithIcon, {\n    heading: \"Labels\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, task.labels.map(function (label) {\n    return React.createElement(Tooltip, {\n      title: \"\".concat(label[0].toUpperCase()).concat(label.slice(1)),\n      placement: \"bottom\",\n      key: label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      status: label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }))), React.createElement(Col, {\n    md: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(HeadingWithIcon, {\n    heading: \"Due Date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(ClockIcon, {\n    src: Clock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), moment(task.due_date).format('ddd d, YYYY'))), React.createElement(HeadingWithIcon, {\n    heading: \"Description\",\n    iconSrc: DescriptionIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(TaskDescription, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, task.description), React.createElement(AttachmentWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(HeadingWithIcon, {\n    heading: \"Attachments\",\n    iconSrc: AttachmentIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(Comments, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }));\n};\n\nexport default connect(null, _objectSpread({}, scrumBoardActions))(TaskDetials);","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\containers\\ScrumBoard\\Task\\TaskDetails\\TaskDetials.js"],"names":["React","Fragment","connect","Badge","Row","Col","Tooltip","moment","Comments","CardDetailsHeader","HeadingWithIcon","CardDetailsWrapper","AttachmentWrapper","TaskName","TaskDescription","ClockIcon","IconSvg","scrumBoardActions","TaskDetials","task","deleteTask","editTask","closeDrawer","openDrawer","columnId","drawerType","drawerProps","initials","editing","taskId","id","column_id","TitleIcon","title","assignees","map","assignee","PlusIcon","labels","label","toUpperCase","slice","Clock","due_date","format","DescriptionIcon","description","AttachmentIcon"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Badge, Row, Col, Tooltip } from 'antd';\nimport moment from 'moment';\nimport Comments from '../../../../components/ScrumBoard/Comments/Comments';\nimport CardDetailsHeader from './TaskDetailsHeader';\nimport HeadingWithIcon from '../../../../components/ScrumBoard/HeadingWithIcon/HeadingWithIcon';\nimport {\n  CardDetailsWrapper,\n  AttachmentWrapper,\n  TaskName,\n  TaskDescription,\n  ClockIcon,\n} from '../Task.style';\nimport { IconSvg } from '../../../../components/ScrumBoard/IconSvg/IconSvg';\nimport PlusIcon from '../../../../static/Images/24.svg';\nimport TitleIcon from '../../../../static/Images/05-icon.svg';\nimport DescriptionIcon from '../../../../static/Images/06-icon.svg';\nimport AttachmentIcon from '../../../../static/Images/01-icon.svg';\nimport Clock from '../../../../static/Images/17.svg';\nimport scrumBoardActions from '../../../../redux/scrumBoard/actions';\n\nconst TaskDetials = ({\n  task,\n  deleteTask,\n  editTask,\n  closeDrawer,\n  openDrawer,\n  columnId,\n}) => {\n  return (\n    <CardDetailsWrapper>\n      <CardDetailsHeader\n        onBtnClick={() => {\n          editTask(task);\n          openDrawer({\n            drawerType: 'CREATE_OR_EDIT_TASK',\n            drawerProps: {\n              initials: { ...task, editing: true },\n              columnId: columnId,\n            },\n          });\n        }}\n        onIconClick={closeDrawer}\n        onDelete={() => {\n          deleteTask({\n            taskId: task.id,\n            column_id: columnId,\n          });\n          closeDrawer();\n        }}\n      />\n      <HeadingWithIcon heading=\"Task Name\" iconSrc={TitleIcon} />\n      <TaskName>{task.title}</TaskName>\n      <Row gutter={16}>\n        <Col md={8}>\n          <HeadingWithIcon heading=\"Assigned Members\" />\n          <p>\n            {task.assignees.map(assignee => (\n              <Fragment key={assignee}>\n                {!assignee ? (\n                  <IconSvg src={PlusIcon} />\n                ) : (\n                  <IconSvg\n                    src={\n                      'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png'\n                    }\n                    padding={'0'}\n                    radius={'10% 30% 25%'}\n                  />\n                )}\n              </Fragment>\n            ))}\n          </p>\n        </Col>\n        <Col md={8}>\n          <HeadingWithIcon heading=\"Labels\" />\n          <p>\n            {task.labels.map(label => (\n              <Tooltip\n                title={`${label[0].toUpperCase()}${label.slice(1)}`}\n                placement=\"bottom\"\n                key={label}\n              >\n                <Badge status={label} />\n              </Tooltip>\n            ))}\n          </p>\n        </Col>\n        <Col md={8}>\n          <HeadingWithIcon heading=\"Due Date\" />\n          <ClockIcon src={Clock} />\n          {moment(task.due_date).format('ddd d, YYYY')}\n        </Col>\n      </Row>\n\n      <HeadingWithIcon heading=\"Description\" iconSrc={DescriptionIcon} />\n      <TaskDescription>{task.description}</TaskDescription>\n      <AttachmentWrapper>\n        <HeadingWithIcon heading=\"Attachments\" iconSrc={AttachmentIcon} />\n      </AttachmentWrapper>\n      <Comments />\n    </CardDetailsWrapper>\n  );\n};\nexport default connect(\n  null,\n  { ...scrumBoardActions }\n)(TaskDetials);\n"]},"metadata":{},"sourceType":"module"}