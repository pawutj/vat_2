{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\containers\\\\Uielements\\\\Tree\\\\searchableTree.js\";\nimport React, { Component } from 'react';\nimport Tree, { TreeNode } from '../../../components/uielements/tree';\nimport { InputSearch } from '../../../components/uielements/input';\nvar x = 3;\nvar y = 2;\nvar z = 1;\nvar gData = [];\n\nvar generateData = function generateData(_level, _preKey, _tns) {\n  var preKey = _preKey || '0';\n  var tns = _tns || gData;\n  var children = [];\n\n  for (var i = 0; i < x; i++) {\n    var key = \"\".concat(preKey, \"-\").concat(i);\n    tns.push({\n      title: key,\n      key: key\n    });\n\n    if (i < y) {\n      children.push(key);\n    }\n  }\n\n  if (_level < 0) {\n    return tns;\n  }\n\n  var level = _level - 1;\n  children.forEach(function (key, index) {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\n\ngenerateData(z);\nvar dataList = [];\n\nvar generateList = function generateList(data) {\n  for (var i = 0; i < data.length; i++) {\n    var node = data[i];\n    var key = node.key;\n    dataList.push({\n      key: key,\n      title: key\n    });\n\n    if (node.children) {\n      generateList(node.children, node.key);\n    }\n  }\n};\n\ngenerateList(gData);\n\nvar getParentKey = function getParentKey(key, tree) {\n  var parentKey;\n\n  for (var i = 0; i < tree.length; i++) {\n    var node = tree[i];\n\n    if (node.children) {\n      if (node.children.some(function (item) {\n        return item.key === key;\n      })) {\n        parentKey = node.key;\n      } else if (getParentKey(key, node.children)) {\n        parentKey = getParentKey(key, node.children);\n      }\n    }\n  }\n\n  return parentKey;\n};\n\nvar _default =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_default, _Component);\n\n  function _default() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_default)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      expandedKeys: [],\n      searchValue: '',\n      autoExpandParent: true\n    };\n\n    _this.onExpand = function (expandedKeys) {\n      _this.setState({\n        expandedKeys: expandedKeys,\n        autoExpandParent: false\n      });\n    };\n\n    _this.onChange = function (e) {\n      var value = e.target.value;\n      var expandedKeys = dataList.map(function (item) {\n        if (item.key.indexOf(value) > -1) {\n          return getParentKey(item.key, gData);\n        }\n\n        return null;\n      }).filter(function (item, i, self) {\n        return item && self.indexOf(item) === i;\n      });\n\n      _this.setState({\n        expandedKeys: expandedKeys,\n        searchValue: value,\n        autoExpandParent: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          searchValue = _this$state.searchValue,\n          expandedKeys = _this$state.expandedKeys,\n          autoExpandParent = _this$state.autoExpandParent;\n\n      var loop = function loop(data) {\n        return data.map(function (item) {\n          var index = item.key.search(searchValue);\n          var beforeStr = item.key.substr(0, index);\n          var afterStr = item.key.substr(index + searchValue.length);\n          var title = index > -1 ? React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, beforeStr, React.createElement(\"span\", {\n            style: {\n              color: '#f50'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, searchValue), afterStr) : React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, item.key);\n\n          if (item.children) {\n            return React.createElement(TreeNode, {\n              key: item.key,\n              title: title,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 108\n              },\n              __self: this\n            }, loop(item.children));\n          }\n\n          return React.createElement(TreeNode, {\n            key: item.key,\n            title: title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          });\n        });\n      };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(InputSearch, {\n        style: {\n          width: 300\n        },\n        placeholder: \"Search\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(Tree, {\n        onExpand: this.onExpand,\n        expandedKeys: expandedKeys,\n        autoExpandParent: autoExpandParent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, loop(gData)));\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\containers\\Uielements\\Tree\\searchableTree.js"],"names":["React","Component","Tree","TreeNode","InputSearch","x","y","z","gData","generateData","_level","_preKey","_tns","preKey","tns","children","i","key","push","title","level","forEach","index","dataList","generateList","data","length","node","getParentKey","tree","parentKey","some","item","state","expandedKeys","searchValue","autoExpandParent","onExpand","setState","onChange","e","value","target","map","indexOf","filter","self","loop","search","beforeStr","substr","afterStr","color","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Tree, { TreeNode } from '../../../components/uielements/tree';\nimport { InputSearch } from '../../../components/uielements/input';\n\nconst x = 3;\nconst y = 2;\nconst z = 1;\nconst gData = [];\n\nconst generateData = (_level, _preKey, _tns) => {\n  const preKey = _preKey || '0';\n  const tns = _tns || gData;\n\n  const children = [];\n  for (let i = 0; i < x; i++) {\n    const key = `${preKey}-${i}`;\n    tns.push({ title: key, key });\n    if (i < y) {\n      children.push(key);\n    }\n  }\n  if (_level < 0) {\n    return tns;\n  }\n  const level = _level - 1;\n  children.forEach((key, index) => {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\ngenerateData(z);\n\nconst dataList = [];\nconst generateList = data => {\n  for (let i = 0; i < data.length; i++) {\n    const node = data[i];\n    const key = node.key;\n    dataList.push({ key, title: key });\n    if (node.children) {\n      generateList(node.children, node.key);\n    }\n  }\n};\ngenerateList(gData);\n\nconst getParentKey = (key, tree) => {\n  let parentKey;\n  for (let i = 0; i < tree.length; i++) {\n    const node = tree[i];\n    if (node.children) {\n      if (node.children.some(item => item.key === key)) {\n        parentKey = node.key;\n      } else if (getParentKey(key, node.children)) {\n        parentKey = getParentKey(key, node.children);\n      }\n    }\n  }\n  return parentKey;\n};\n\nexport default class extends Component {\n  state = {\n    expandedKeys: [],\n    searchValue: '',\n    autoExpandParent: true,\n  };\n  onExpand = expandedKeys => {\n    this.setState({\n      expandedKeys,\n      autoExpandParent: false,\n    });\n  };\n  onChange = e => {\n    const value = e.target.value;\n    const expandedKeys = dataList\n      .map(item => {\n        if (item.key.indexOf(value) > -1) {\n          return getParentKey(item.key, gData);\n        }\n        return null;\n      })\n      .filter((item, i, self) => item && self.indexOf(item) === i);\n    this.setState({\n      expandedKeys,\n      searchValue: value,\n      autoExpandParent: true,\n    });\n  };\n  render() {\n    const { searchValue, expandedKeys, autoExpandParent } = this.state;\n    const loop = data =>\n      data.map(item => {\n        const index = item.key.search(searchValue);\n        const beforeStr = item.key.substr(0, index);\n        const afterStr = item.key.substr(index + searchValue.length);\n        const title =\n          index > -1 ? (\n            <span>\n              {beforeStr}\n              <span style={{ color: '#f50' }}>{searchValue}</span>\n              {afterStr}\n            </span>\n          ) : (\n            <span>{item.key}</span>\n          );\n        if (item.children) {\n          return (\n            <TreeNode key={item.key} title={title}>\n              {loop(item.children)}\n            </TreeNode>\n          );\n        }\n        return <TreeNode key={item.key} title={title} />;\n      });\n    return (\n      <div>\n        <InputSearch\n          style={{ width: 300 }}\n          placeholder=\"Search\"\n          onChange={this.onChange}\n        />\n        <Tree\n          onExpand={this.onExpand}\n          expandedKeys={expandedKeys}\n          autoExpandParent={autoExpandParent}\n        >\n          {loop(gData)}\n        </Tree>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}