{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\containers\\\\ScrumBoard\\\\rootDrawer.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n.ant-drawer {}\\n.ant-drawer-content-wrapper{\\n  width: 100% !important;\\n  @media (min-width: 768px){\\n    width: 500px!important;\\n  }\\n  @media (min-width: 1200px){\\n    width: 700px!important;\\n  }\\n}\\n\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Drawer } from 'antd';\nimport CreateTaskForm from './Task/TaskCreateOrUpdate/TaskCreateOrUpdate';\nimport TaskDetails from './Task/TaskDetails/TaskDetials';\nimport drawerActions from '../../redux/drawer/actions';\nimport { createGlobalStyle } from 'styled-components';\nvar DrawerStyles = createGlobalStyle(_templateObject());\nvar DRAWER_COMPONENTS = {\n  CREATE_OR_EDIT_TASK: CreateTaskForm,\n  CARD_DETAILS: TaskDetails\n  /* other modals */\n\n};\n\nvar DrawerRoot = function DrawerRoot(_ref) {\n  var drawerType = _ref.drawerType,\n      drawerProps = _ref.drawerProps,\n      drawerVisibility = _ref.drawerVisibility,\n      closeDrawer = _ref.closeDrawer,\n      openDrawer = _ref.openDrawer;\n\n  if (!drawerType) {\n    return null;\n  }\n\n  var SpecificDrawer = DRAWER_COMPONENTS[drawerType];\n  return React.createElement(Drawer, {\n    placement: \"right\",\n    closable: false,\n    onClose: closeDrawer,\n    visible: drawerVisibility // width={700}\n    ,\n    destroyOnClose: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(DrawerStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(SpecificDrawer, Object.assign({}, drawerProps, {\n    openDrawer: openDrawer,\n    closeDrawer: closeDrawer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })));\n};\n\nexport default connect(function (state) {\n  return state.drawer;\n}, _objectSpread({}, drawerActions))(DrawerRoot);","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\containers\\ScrumBoard\\rootDrawer.js"],"names":["React","connect","Drawer","CreateTaskForm","TaskDetails","drawerActions","createGlobalStyle","DrawerStyles","DRAWER_COMPONENTS","CREATE_OR_EDIT_TASK","CARD_DETAILS","DrawerRoot","drawerType","drawerProps","drawerVisibility","closeDrawer","openDrawer","SpecificDrawer","state","drawer"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,cAAP,MAA2B,8CAA3B;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AAEA,IAAMC,YAAY,GAAGD,iBAAH,mBAAlB;AAaA,IAAME,iBAAiB,GAAG;AACxBC,EAAAA,mBAAmB,EAAEN,cADG;AAExBO,EAAAA,YAAY,EAAEN;AACd;;AAHwB,CAA1B;;AAMA,IAAMO,UAAU,GAAG,SAAbA,UAAa,OAMb;AAAA,MALJC,UAKI,QALJA,UAKI;AAAA,MAJJC,WAII,QAJJA,WAII;AAAA,MAHJC,gBAGI,QAHJA,gBAGI;AAAA,MAFJC,WAEI,QAFJA,WAEI;AAAA,MADJC,UACI,QADJA,UACI;;AACJ,MAAI,CAACJ,UAAL,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,MAAMK,cAAc,GAAGT,iBAAiB,CAACI,UAAD,CAAxC;AACA,SACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,QAAQ,EAAE,KAFZ;AAGE,IAAA,OAAO,EAAEG,WAHX;AAIE,IAAA,OAAO,EAAED,gBAJX,CAKE;AALF;AAME,IAAA,cAAc,EAAE,IANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAUE,oBAAC,cAAD,oBACMD,WADN;AAEE,IAAA,UAAU,EAAEG,UAFd;AAGE,IAAA,WAAW,EAAED,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVF,CADF;AAkBD,CA9BD;;AAgCA,eAAed,OAAO,CACpB,UAAAiB,KAAK;AAAA,SAAIA,KAAK,CAACC,MAAV;AAAA,CADe,oBAEfd,aAFe,EAAP,CAGbM,UAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Drawer } from 'antd';\nimport CreateTaskForm from './Task/TaskCreateOrUpdate/TaskCreateOrUpdate';\nimport TaskDetails from './Task/TaskDetails/TaskDetials';\nimport drawerActions from '../../redux/drawer/actions';\nimport { createGlobalStyle } from 'styled-components';\n\nconst DrawerStyles = createGlobalStyle`\n.ant-drawer {}\n.ant-drawer-content-wrapper{\n  width: 100% !important;\n  @media (min-width: 768px){\n    width: 500px!important;\n  }\n  @media (min-width: 1200px){\n    width: 700px!important;\n  }\n}\n\n`;\nconst DRAWER_COMPONENTS = {\n  CREATE_OR_EDIT_TASK: CreateTaskForm,\n  CARD_DETAILS: TaskDetails,\n  /* other modals */\n};\n\nconst DrawerRoot = ({\n  drawerType,\n  drawerProps,\n  drawerVisibility,\n  closeDrawer,\n  openDrawer,\n}) => {\n  if (!drawerType) {\n    return null;\n  }\n\n  const SpecificDrawer = DRAWER_COMPONENTS[drawerType];\n  return (\n    <Drawer\n      placement=\"right\"\n      closable={false}\n      onClose={closeDrawer}\n      visible={drawerVisibility}\n      // width={700}\n      destroyOnClose={true}\n    >\n      <DrawerStyles />\n\n      <SpecificDrawer\n        {...drawerProps}\n        openDrawer={openDrawer}\n        closeDrawer={closeDrawer}\n      />\n    </Drawer>\n  );\n};\n\nexport default connect(\n  state => state.drawer,\n  { ...drawerActions }\n)(DrawerRoot);\n"]},"metadata":{},"sourceType":"module"}