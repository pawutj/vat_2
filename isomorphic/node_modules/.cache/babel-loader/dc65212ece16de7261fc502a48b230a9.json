{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\containers\\\\Forms\\\\FormsWithValidation\\\\FormValidation.js\";\nimport React, { Component } from 'react';\nimport { Input } from 'antd';\nimport Form from '../../../components/uielements/form';\nimport Checkbox from '../../../components/uielements/checkbox';\nimport Button from '../../../components/uielements/button';\nimport Notification from '../../../components/notification';\nvar FormItem = Form.Item;\n\nvar FormWIthSubmissionButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormWIthSubmissionButton, _Component);\n\n  function FormWIthSubmissionButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FormWIthSubmissionButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormWIthSubmissionButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          Notification('success', 'Received values of form', JSON.stringify(values));\n        }\n      });\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    };\n\n    _this.checkPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    _this.checkConfirm = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    return _this;\n  }\n\n  _createClass(FormWIthSubmissionButton, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 6\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 14\n          }\n        }\n      };\n      var tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 14,\n            offset: 6\n          }\n        }\n      };\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"E-mail\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), getFieldDecorator('email', {\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }]\n      })(React.createElement(Input, {\n        name: \"email\",\n        id: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Password\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }, {\n          validator: this.checkConfirm\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Confirm Password\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, {\n          validator: this.checkPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        onBlur: this.handleConfirmBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, tailFormItemLayout, {\n        style: {\n          marginBottom: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), getFieldDecorator('agreement', {\n        valuePropName: 'checked',\n        rules: [{\n          message: 'Please input your E-mail!',\n          required: true\n        }]\n      })(React.createElement(Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"I have read the \", React.createElement(\"a\", {\n        href: \"# \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"agreement\")))), React.createElement(FormItem, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Register\")));\n    }\n  }]);\n\n  return FormWIthSubmissionButton;\n}(Component);\n\nvar WrappedFormWIthSubmissionButton = Form.create()(FormWIthSubmissionButton);\nexport default WrappedFormWIthSubmissionButton;","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\containers\\Forms\\FormsWithValidation\\FormValidation.js"],"names":["React","Component","Input","Form","Checkbox","Button","Notification","FormItem","Item","FormWIthSubmissionButton","state","confirmDirty","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","JSON","stringify","handleConfirmBlur","value","target","setState","checkPassword","rule","callback","getFieldValue","checkConfirm","validateFields","force","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","rules","type","message","required","validator","marginBottom","valuePropName","WrappedFormWIthSubmissionButton","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Input } from 'antd';\nimport Form from '../../../components/uielements/form';\nimport Checkbox from '../../../components/uielements/checkbox';\nimport Button from '../../../components/uielements/button';\nimport Notification from '../../../components/notification';\nconst FormItem = Form.Item;\n\nclass FormWIthSubmissionButton extends Component {\n  state = {\n    confirmDirty: false,\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        Notification(\n          'success',\n          'Received values of form',\n          JSON.stringify(values)\n        );\n      }\n    });\n  };\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n  checkPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n  checkConfirm = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 14 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 14,\n          offset: 6,\n        },\n      },\n    };\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <FormItem {...formItemLayout} label=\"E-mail\" hasFeedback>\n          {getFieldDecorator('email', {\n            rules: [\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n              },\n              {\n                required: true,\n                message: 'Please input your E-mail!',\n              },\n            ],\n          })(<Input name=\"email\" id=\"email\" />)}\n        </FormItem>\n        <FormItem {...formItemLayout} label=\"Password\" hasFeedback>\n          {getFieldDecorator('password', {\n            rules: [\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n              {\n                validator: this.checkConfirm,\n              },\n            ],\n          })(<Input type=\"password\" />)}\n        </FormItem>\n        <FormItem {...formItemLayout} label=\"Confirm Password\" hasFeedback>\n          {getFieldDecorator('confirm', {\n            rules: [\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              {\n                validator: this.checkPassword,\n              },\n            ],\n          })(<Input type=\"password\" onBlur={this.handleConfirmBlur} />)}\n        </FormItem>\n        <FormItem {...tailFormItemLayout} style={{ marginBottom: 8 }}>\n          {getFieldDecorator('agreement', {\n            valuePropName: 'checked',\n            rules: [\n              {\n                message: 'Please input your E-mail!',\n                required: true,\n              },\n            ],\n          })(\n            <Checkbox>\n              I have read the <a href=\"# \">agreement</a>\n            </Checkbox>\n          )}\n        </FormItem>\n        <FormItem {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Register\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nconst WrappedFormWIthSubmissionButton = Form.create()(FormWIthSubmissionButton);\nexport default WrappedFormWIthSubmissionButton;\n"]},"metadata":{},"sourceType":"module"}