{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\components\\\\contacts\\\\editView.js\";\nimport React, { Component } from 'react';\nimport { Icon } from 'antd';\nimport Input, { Textarea } from '../uielements/input';\nimport Upload from '../uielements/upload';\nimport notification from '../notification';\nimport { ContactCardWrapper } from './contactCard.style';\nimport './upload.css';\n\nfunction beforeUpload(file) {\n  var isJPG = file.type === 'image/jpeg';\n\n  if (!isJPG) {\n    notification('error', 'You can only upload JPG file!', '');\n    return false;\n  }\n\n  var isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    notification('error', 'Image must smaller than 2MB!', '');\n    return false;\n  }\n\n  notification('success', 'Image uploaded successfully!', '');\n  return true;\n}\n\nvar _default =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_default, _Component);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_default).apply(this, arguments));\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          contact = _this$props.contact,\n          otherAttributes = _this$props.otherAttributes;\n      var name = contact.name ? contact.name : 'No Name';\n      var extraInfos = [];\n      var names = [{\n        value: 'firstName',\n        title: 'First Name'\n      }, {\n        value: 'lastName',\n        title: 'Last Name'\n      }];\n      [].concat(names, _toConsumableArray(otherAttributes)).forEach(function (attribute) {\n        var value = contact[attribute.value];\n\n        var editContact = function editContact(event) {\n          contact[attribute.value] = event.target.value;\n          var name = '';\n\n          if (contact.firstName) {\n            name = \"\".concat(contact.firstName, \" \");\n          }\n\n          if (contact.lastName) {\n            name = \"\".concat(name).concat(contact.lastName);\n          }\n\n          contact.name = name;\n\n          _this.props.editContact(contact);\n        };\n\n        if (attribute.value === 'note') {\n          extraInfos.push(React.createElement(\"div\", {\n            className: \"isoContactCardInfos\",\n            key: attribute.value,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"isoInfoLabel\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, \"\".concat(attribute.title)), React.createElement(Textarea, {\n            placeholder: \"\".concat(attribute.title),\n            value: value,\n            type: \"textarea\",\n            rows: 5,\n            onChange: function onChange(event) {\n              return editContact(event);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          })));\n        } else {\n          extraInfos.push(React.createElement(\"div\", {\n            className: \"isoContactCardInfos\",\n            key: attribute.value,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"isoInfoLabel\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, \"\".concat(attribute.title)), React.createElement(Input, {\n            placeholder: \"\".concat(attribute.title),\n            value: value,\n            onChange: function onChange(event) {\n              return editContact(event);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          })));\n        }\n      });\n      return React.createElement(ContactCardWrapper, {\n        className: \"isoContactCard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"isoContactCardHead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"isoPersonImage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Upload, {\n        className: \"avatar-uploader\",\n        name: \"avatar\",\n        showUploadList: false,\n        beforeUpload: beforeUpload,\n        action: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, contact.avatar ? React.createElement(\"img\", {\n        src: contact.avatar,\n        alt: \"\",\n        className: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }) : '', React.createElement(Icon, {\n        type: \"plus\",\n        className: \"avatar-uploader-trigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))), React.createElement(\"h1\", {\n        className: \"isoPersonName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, name)), React.createElement(\"div\", {\n        className: \"isoContactInfoWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, extraInfos));\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\components\\contacts\\editView.js"],"names":["React","Component","Icon","Input","Textarea","Upload","notification","ContactCardWrapper","beforeUpload","file","isJPG","type","isLt2M","size","props","contact","otherAttributes","name","extraInfos","names","value","title","forEach","attribute","editContact","event","target","firstName","lastName","push","avatar"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Icon } from 'antd';\nimport Input, { Textarea } from '../uielements/input';\nimport Upload from '../uielements/upload';\nimport notification from '../notification';\nimport { ContactCardWrapper } from './contactCard.style';\nimport './upload.css';\n\nfunction beforeUpload(file) {\n  const isJPG = file.type === 'image/jpeg';\n  if (!isJPG) {\n    notification('error', 'You can only upload JPG file!', '');\n    return false;\n  }\n  const isLt2M = file.size / 1024 / 1024 < 2;\n  if (!isLt2M) {\n    notification('error', 'Image must smaller than 2MB!', '');\n    return false;\n  }\n  notification('success', 'Image uploaded successfully!', '');\n  return true;\n}\nexport default class extends Component {\n  render() {\n    const { contact, otherAttributes } = this.props;\n    const name = contact.name ? contact.name : 'No Name';\n    const extraInfos = [];\n    const names = [\n      { value: 'firstName', title: 'First Name' },\n      { value: 'lastName', title: 'Last Name' }\n    ];\n    [...names, ...otherAttributes].forEach(attribute => {\n      const value = contact[attribute.value];\n      const editContact = event => {\n        contact[attribute.value] = event.target.value;\n        let name = '';\n        if (contact.firstName) {\n          name = `${contact.firstName} `;\n        }\n        if (contact.lastName) {\n          name = `${name}${contact.lastName}`;\n        }\n        contact.name = name;\n        this.props.editContact(contact);\n      };\n      if (attribute.value === 'note') {\n        extraInfos.push(\n          <div className=\"isoContactCardInfos\" key={attribute.value}>\n            <p className=\"isoInfoLabel\">{`${attribute.title}`}</p>\n            <Textarea\n              placeholder={`${attribute.title}`}\n              value={value}\n              type=\"textarea\"\n              rows={5}\n              onChange={event => editContact(event)}\n            />\n          </div>\n        );\n      } else {\n        extraInfos.push(\n          <div className=\"isoContactCardInfos\" key={attribute.value}>\n            <p className=\"isoInfoLabel\">{`${attribute.title}`}</p>\n            <Input\n              placeholder={`${attribute.title}`}\n              value={value}\n              onChange={event => editContact(event)}\n            />\n          </div>\n        );\n      }\n    });\n    return (\n      <ContactCardWrapper className=\"isoContactCard\">\n        <div className=\"isoContactCardHead\">\n          <div className=\"isoPersonImage\">\n            <Upload\n              className=\"avatar-uploader\"\n              name=\"avatar\"\n              showUploadList={false}\n              beforeUpload={beforeUpload}\n              action=\"\"\n            >\n              {contact.avatar ? (\n                <img src={contact.avatar} alt=\"\" className=\"avatar\" />\n              ) : (\n                ''\n              )}\n              <Icon type=\"plus\" className=\"avatar-uploader-trigger\" />\n            </Upload>\n          </div>\n          <h1 className=\"isoPersonName\">{name}</h1>\n        </div>\n        <div className=\"isoContactInfoWrapper\">{extraInfos}</div>\n      </ContactCardWrapper>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}