{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _auth = _interopRequireDefault(require(\"./auth\"));\n\nvar _database = _interopRequireDefault(require(\"./database\"));\n\nvar _firestore = _interopRequireDefault(require(\"./firestore\"));\n\nvar _functions = _interopRequireDefault(require(\"./functions\"));\n\nvar _messaging = _interopRequireDefault(require(\"./messaging\"));\n\nvar _storage = _interopRequireDefault(require(\"./storage\"));\n\nvar ReduxSagaFirebase =\n/*#__PURE__*/\nfunction () {\n  function ReduxSagaFirebase(firebaseApp) {\n    (0, _classCallCheck2.default)(this, ReduxSagaFirebase);\n    this.app = firebaseApp;\n    this.region = 'us-central1'; // Authentication methods\n\n    this.auth = {\n      applyActionCode: _auth.default.applyActionCode.bind(this),\n      channel: _auth.default.channel.bind(this),\n      confirmPasswordReset: _auth.default.confirmPasswordReset.bind(this),\n      createUserWithEmailAndPassword: _auth.default.createUserWithEmailAndPassword.bind(this),\n      deleteProfile: _auth.default.deleteProfile.bind(this),\n      linkWithPopup: _auth.default.linkWithPopup.bind(this),\n      linkWithRedirect: _auth.default.linkWithRedirect.bind(this),\n      sendEmailVerification: _auth.default.sendEmailVerification.bind(this),\n      sendPasswordResetEmail: _auth.default.sendPasswordResetEmail.bind(this),\n      signInAndRetrieveDataWithCredential: _auth.default.signInAndRetrieveDataWithCredential.bind(this),\n      signInAnonymously: _auth.default.signInAnonymously.bind(this),\n      signInWithCredential: _auth.default.signInWithCredential.bind(this),\n      signInWithCustomToken: _auth.default.signInWithCustomToken.bind(this),\n      signInWithEmailAndPassword: _auth.default.signInWithEmailAndPassword.bind(this),\n      signInWithPopup: _auth.default.signInWithPopup.bind(this),\n      signInWithPhoneNumber: _auth.default.signInWithPhoneNumber.bind(this),\n      signInWithRedirect: _auth.default.signInWithRedirect.bind(this),\n      signOut: _auth.default.signOut.bind(this),\n      unlink: _auth.default.unlink.bind(this),\n      updateEmail: _auth.default.updateEmail.bind(this),\n      updatePassword: _auth.default.updatePassword.bind(this),\n      updateProfile: _auth.default.updateProfile.bind(this) // Database methods\n\n    };\n    this.database = {\n      read: _database.default.read.bind(this),\n      create: _database.default.create.bind(this),\n      update: _database.default.update.bind(this),\n      patch: _database.default.patch.bind(this),\n      delete: _database.default.delete.bind(this),\n      channel: _database.default.channel.bind(this),\n      sync: _database.default.sync.bind(this) // Firestore methods\n\n    };\n    this.firestore = {\n      addDocument: _firestore.default.addDocument.bind(this),\n      channel: _firestore.default.channel.bind(this),\n      deleteDocument: _firestore.default.deleteDocument.bind(this),\n      getCollection: _firestore.default.getCollection.bind(this),\n      getDocument: _firestore.default.getDocument.bind(this),\n      setDocument: _firestore.default.setDocument.bind(this),\n      syncCollection: _firestore.default.syncCollection.bind(this),\n      syncDocument: _firestore.default.syncDocument.bind(this),\n      updateDocument: _firestore.default.updateDocument.bind(this) // Functions methods\n\n    };\n    this.functions = {\n      call: _functions.default.call.bind(this) // Messaging methods\n\n    };\n    this.messaging = {\n      channel: _messaging.default.channel.bind(this),\n      syncMessages: _messaging.default.syncMessages.bind(this),\n      syncToken: _messaging.default.syncToken.bind(this),\n      tokenRefreshChannel: _messaging.default.tokenRefreshChannel.bind(this) // Storage methods\n\n    };\n    this.storage = {\n      uploadFile: _storage.default.uploadFile.bind(this),\n      uploadString: _storage.default.uploadString.bind(this),\n      getDownloadURL: _storage.default.getDownloadURL.bind(this),\n      getFileMetadata: _storage.default.getFileMetadata.bind(this),\n      updateFileMetadata: _storage.default.updateFileMetadata.bind(this),\n      deleteFile: _storage.default.deleteFile.bind(this)\n    };\n  }\n\n  (0, _createClass2.default)(ReduxSagaFirebase, [{\n    key: \"projectId\",\n    value: function projectId() {\n      if (this._projectId) return this._projectId;\n      var regex = /^([a-z0-9-]+)\\.firebaseapp\\.com$/;\n      var projectId = this.app.options.authDomain.match(regex)[1];\n      this._projectId = projectId;\n      return projectId;\n    }\n  }]);\n  return ReduxSagaFirebase;\n}();\n\nvar _default = ReduxSagaFirebase;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}