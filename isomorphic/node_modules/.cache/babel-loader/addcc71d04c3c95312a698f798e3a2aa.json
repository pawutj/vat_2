{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\containers\\\\LanguageSwitcher\\\\index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport IntlMessages from '../../components/utility/intlMessages';\nimport actions from '../../redux/languageSwitcher/actions';\nimport config from './config';\nvar changeLanguage = actions.changeLanguage;\n\nvar LanguageSwitcher =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LanguageSwitcher, _Component);\n\n  function LanguageSwitcher() {\n    _classCallCheck(this, LanguageSwitcher);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LanguageSwitcher).apply(this, arguments));\n  }\n\n  _createClass(LanguageSwitcher, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          language = _this$props.language,\n          changeLanguage = _this$props.changeLanguage;\n      return React.createElement(\"div\", {\n        className: \"themeSwitchBlock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"languageSwitcher.label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"themeSwitchBtnWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, config.options.map(function (option) {\n        var languageId = option.languageId,\n            icon = option.icon;\n        var customClass = languageId === language.languageId ? 'selectedTheme languageSwitch' : 'languageSwitch';\n        return React.createElement(\"button\", {\n          type: \"button\",\n          className: customClass,\n          key: languageId,\n          onClick: function onClick() {\n            changeLanguage(languageId);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: process.env.PUBLIC_URL + icon,\n          alt: \"flag\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return LanguageSwitcher;\n}(Component);\n\nexport default connect(function (state) {\n  return _objectSpread({}, state.LanguageSwitcher);\n}, {\n  changeLanguage: changeLanguage\n})(LanguageSwitcher);","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\containers\\LanguageSwitcher\\index.js"],"names":["React","Component","connect","IntlMessages","actions","config","changeLanguage","LanguageSwitcher","props","language","options","map","option","languageId","icon","customClass","process","env","PUBLIC_URL","state"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,OAAP,MAAoB,sCAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;IAEQC,c,GAAmBF,O,CAAnBE,c;;IAEFC,gB;;;;;;;;;;;;;6BACK;AAAA,wBAC8B,KAAKC,KADnC;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWH,cADX,eACWA,cADX;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,MAAM,CAACK,OAAP,CAAeC,GAAf,CAAmB,UAAAC,MAAM,EAAI;AAAA,YACpBC,UADoB,GACCD,MADD,CACpBC,UADoB;AAAA,YACRC,IADQ,GACCF,MADD,CACRE,IADQ;AAE5B,YAAMC,WAAW,GACfF,UAAU,KAAKJ,QAAQ,CAACI,UAAxB,GACI,8BADJ,GAEI,gBAHN;AAKA,eACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAEE,WAFb;AAGE,UAAA,GAAG,EAAEF,UAHP;AAIE,UAAA,OAAO,EAAE,mBAAM;AACbP,YAAAA,cAAc,CAACO,UAAD,CAAd;AACD,WANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQE;AAAK,UAAA,GAAG,EAAEG,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyBJ,IAAnC;AAAyC,UAAA,GAAG,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARF,CADF;AAYD,OAnBA,CADH,CAJF,CADF;AA6BD;;;;EAhC4Bb,S;;AAmC/B,eAAeC,OAAO,CACpB,UAAAiB,KAAK;AAAA,2BACAA,KAAK,CAACZ,gBADN;AAAA,CADe,EAIpB;AAAED,EAAAA,cAAc,EAAdA;AAAF,CAJoB,CAAP,CAKbC,gBALa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport IntlMessages from '../../components/utility/intlMessages';\nimport actions from '../../redux/languageSwitcher/actions';\nimport config from './config';\n\nconst { changeLanguage } = actions;\n\nclass LanguageSwitcher extends Component {\n  render() {\n    const { language, changeLanguage } = this.props;\n    return (\n      <div className=\"themeSwitchBlock\">\n        <h4>\n          <IntlMessages id=\"languageSwitcher.label\" />\n        </h4>\n        <div className=\"themeSwitchBtnWrapper\">\n          {config.options.map(option => {\n            const { languageId, icon } = option;\n            const customClass =\n              languageId === language.languageId\n                ? 'selectedTheme languageSwitch'\n                : 'languageSwitch';\n\n            return (\n              <button\n                type=\"button\"\n                className={customClass}\n                key={languageId}\n                onClick={() => {\n                  changeLanguage(languageId);\n                }}\n              >\n                <img src={process.env.PUBLIC_URL + icon} alt=\"flag\" />\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    ...state.LanguageSwitcher,\n  }),\n  { changeLanguage }\n)(LanguageSwitcher);\n"]},"metadata":{},"sourceType":"module"}