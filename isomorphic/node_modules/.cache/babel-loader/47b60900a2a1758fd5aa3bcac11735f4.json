{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\vat\\\\isomorphic\\\\src\\\\containers\\\\Uielements\\\\Tree\\\\draggableTree.js\";\nimport React, { Component } from 'react';\nimport Tree, { TreeNode } from '../../../components/uielements/tree';\nvar x = 3;\nvar y = 2;\nvar z = 1;\nvar gData = [];\n\nvar generateData = function generateData(_level, _preKey, _tns) {\n  var preKey = _preKey || '0';\n  var tns = _tns || gData;\n  var children = [];\n\n  for (var i = 0; i < x; i++) {\n    var key = \"\".concat(preKey, \"-\").concat(i);\n    tns.push({\n      title: key,\n      key: key\n    });\n\n    if (i < y) {\n      children.push(key);\n    }\n  }\n\n  if (_level < 0) {\n    return tns;\n  }\n\n  var level = _level - 1;\n  children.forEach(function (key, index) {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\n\ngenerateData(z);\n\nvar _default =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_default, _Component);\n\n  function _default() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_default)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      gData: gData,\n      expandedKeys: ['0-0', '0-0-0', '0-0-0-0']\n    };\n\n    _this.onDragEnter = function (info) {};\n\n    _this.onDrop = function (info) {\n      var dropKey = info.node.props.eventKey;\n      var dragKey = info.dragNode.props.eventKey;\n      var dropPos = info.node.props.pos.split('-');\n      var dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\n\n      var loop = function loop(data, key, callback) {\n        data.forEach(function (item, index, arr) {\n          if (item.key === key) {\n            return callback(item, index, arr);\n          }\n\n          if (item.children) {\n            return loop(item.children, key, callback);\n          }\n        });\n      };\n\n      var data = _toConsumableArray(_this.state.gData);\n\n      var dragObj;\n      loop(data, dragKey, function (item, index, arr) {\n        arr.splice(index, 1);\n        dragObj = item;\n      });\n\n      if (info.dropToGap) {\n        var ar;\n        var i;\n        loop(data, dropKey, function (item, index, arr) {\n          ar = arr;\n          i = index;\n        });\n\n        if (dropPosition === -1) {\n          ar.splice(i, 0, dragObj);\n        } else {\n          ar.splice(i - 1, 0, dragObj);\n        }\n      } else {\n        loop(data, dropKey, function (item) {\n          item.children = item.children || [];\n          item.children.push(dragObj);\n        });\n      }\n\n      _this.setState({\n        gData: data\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var loop = function loop(data) {\n        return data.map(function (item) {\n          if (item.children && item.children.length) {\n            return React.createElement(TreeNode, {\n              key: item.key,\n              title: item.key,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87\n              },\n              __self: this\n            }, loop(item.children));\n          }\n\n          return React.createElement(TreeNode, {\n            key: item.key,\n            title: item.key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          });\n        });\n      };\n\n      return React.createElement(Tree, {\n        className: \"draggable-tree\",\n        defaultExpandedKeys: this.state.expandedKeys,\n        draggable: true,\n        onDragEnter: this.onDragEnter,\n        onDrop: this.onDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, loop(this.state.gData));\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\vat\\isomorphic\\src\\containers\\Uielements\\Tree\\draggableTree.js"],"names":["React","Component","Tree","TreeNode","x","y","z","gData","generateData","_level","_preKey","_tns","preKey","tns","children","i","key","push","title","level","forEach","index","state","expandedKeys","onDragEnter","info","onDrop","dropKey","node","props","eventKey","dragKey","dragNode","dropPos","pos","split","dropPosition","Number","length","loop","data","callback","item","arr","dragObj","splice","dropToGap","ar","setState","map"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,IAAeC,QAAf,QAA+B,qCAA/B;AAEA,IAAMC,CAAC,GAAG,CAAV;AACA,IAAMC,CAAC,GAAG,CAAV;AACA,IAAMC,CAAC,GAAG,CAAV;AACA,IAAMC,KAAK,GAAG,EAAd;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAASC,OAAT,EAAkBC,IAAlB,EAA2B;AAC9C,MAAMC,MAAM,GAAGF,OAAO,IAAI,GAA1B;AACA,MAAMG,GAAG,GAAGF,IAAI,IAAIJ,KAApB;AAEA,MAAMO,QAAQ,GAAG,EAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,CAApB,EAAuBW,CAAC,EAAxB,EAA4B;AAC1B,QAAMC,GAAG,aAAMJ,MAAN,cAAgBG,CAAhB,CAAT;AACAF,IAAAA,GAAG,CAACI,IAAJ,CAAS;AAAEC,MAAAA,KAAK,EAAEF,GAAT;AAAcA,MAAAA,GAAG,EAAHA;AAAd,KAAT;;AACA,QAAID,CAAC,GAAGV,CAAR,EAAW;AACTS,MAAAA,QAAQ,CAACG,IAAT,CAAcD,GAAd;AACD;AACF;;AACD,MAAIP,MAAM,GAAG,CAAb,EAAgB;AACd,WAAOI,GAAP;AACD;;AACD,MAAMM,KAAK,GAAGV,MAAM,GAAG,CAAvB;AACAK,EAAAA,QAAQ,CAACM,OAAT,CAAiB,UAACJ,GAAD,EAAMK,KAAN,EAAgB;AAC/BR,IAAAA,GAAG,CAACQ,KAAD,CAAH,CAAWP,QAAX,GAAsB,EAAtB;AACA,WAAON,YAAY,CAACW,KAAD,EAAQH,GAAR,EAAaH,GAAG,CAACQ,KAAD,CAAH,CAAWP,QAAxB,CAAnB;AACD,GAHD;AAID,CApBD;;AAqBAN,YAAY,CAACF,CAAD,CAAZ;;;;;;;;;;;;;;;;;;;UAGEgB,K,GAAQ;AACNf,MAAAA,KAAK,EAALA,KADM;AAENgB,MAAAA,YAAY,EAAE,CAAC,KAAD,EAAQ,OAAR,EAAiB,SAAjB;AAFR,K;;UAIRC,W,GAAc,UAAAC,IAAI,EAAI,CAAE,C;;UACxBC,M,GAAS,UAAAD,IAAI,EAAI;AACf,UAAME,OAAO,GAAGF,IAAI,CAACG,IAAL,CAAUC,KAAV,CAAgBC,QAAhC;AACA,UAAMC,OAAO,GAAGN,IAAI,CAACO,QAAL,CAAcH,KAAd,CAAoBC,QAApC;AACA,UAAMG,OAAO,GAAGR,IAAI,CAACG,IAAL,CAAUC,KAAV,CAAgBK,GAAhB,CAAoBC,KAApB,CAA0B,GAA1B,CAAhB;AACA,UAAMC,YAAY,GAChBX,IAAI,CAACW,YAAL,GAAoBC,MAAM,CAACJ,OAAO,CAACA,OAAO,CAACK,MAAR,GAAiB,CAAlB,CAAR,CAD5B;;AAEA,UAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,IAAD,EAAOxB,GAAP,EAAYyB,QAAZ,EAAyB;AACpCD,QAAAA,IAAI,CAACpB,OAAL,CAAa,UAACsB,IAAD,EAAOrB,KAAP,EAAcsB,GAAd,EAAsB;AACjC,cAAID,IAAI,CAAC1B,GAAL,KAAaA,GAAjB,EAAsB;AACpB,mBAAOyB,QAAQ,CAACC,IAAD,EAAOrB,KAAP,EAAcsB,GAAd,CAAf;AACD;;AACD,cAAID,IAAI,CAAC5B,QAAT,EAAmB;AACjB,mBAAOyB,IAAI,CAACG,IAAI,CAAC5B,QAAN,EAAgBE,GAAhB,EAAqByB,QAArB,CAAX;AACD;AACF,SAPD;AAQD,OATD;;AAUA,UAAMD,IAAI,sBAAO,MAAKlB,KAAL,CAAWf,KAAlB,CAAV;;AACA,UAAIqC,OAAJ;AACAL,MAAAA,IAAI,CAACC,IAAD,EAAOT,OAAP,EAAgB,UAACW,IAAD,EAAOrB,KAAP,EAAcsB,GAAd,EAAsB;AACxCA,QAAAA,GAAG,CAACE,MAAJ,CAAWxB,KAAX,EAAkB,CAAlB;AACAuB,QAAAA,OAAO,GAAGF,IAAV;AACD,OAHG,CAAJ;;AAIA,UAAIjB,IAAI,CAACqB,SAAT,EAAoB;AAClB,YAAIC,EAAJ;AACA,YAAIhC,CAAJ;AACAwB,QAAAA,IAAI,CAACC,IAAD,EAAOb,OAAP,EAAgB,UAACe,IAAD,EAAOrB,KAAP,EAAcsB,GAAd,EAAsB;AACxCI,UAAAA,EAAE,GAAGJ,GAAL;AACA5B,UAAAA,CAAC,GAAGM,KAAJ;AACD,SAHG,CAAJ;;AAIA,YAAIe,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvBW,UAAAA,EAAE,CAACF,MAAH,CAAU9B,CAAV,EAAa,CAAb,EAAgB6B,OAAhB;AACD,SAFD,MAEO;AACLG,UAAAA,EAAE,CAACF,MAAH,CAAU9B,CAAC,GAAG,CAAd,EAAiB,CAAjB,EAAoB6B,OAApB;AACD;AACF,OAZD,MAYO;AACLL,QAAAA,IAAI,CAACC,IAAD,EAAOb,OAAP,EAAgB,UAAAe,IAAI,EAAI;AAC1BA,UAAAA,IAAI,CAAC5B,QAAL,GAAgB4B,IAAI,CAAC5B,QAAL,IAAiB,EAAjC;AACA4B,UAAAA,IAAI,CAAC5B,QAAL,CAAcG,IAAd,CAAmB2B,OAAnB;AACD,SAHG,CAAJ;AAID;;AACD,YAAKI,QAAL,CAAc;AACZzC,QAAAA,KAAK,EAAEiC;AADK,OAAd;AAGD,K;;;;;;;6BACQ;AACP,UAAMD,IAAI,GAAG,SAAPA,IAAO,CAAAC,IAAI;AAAA,eACfA,IAAI,CAACS,GAAL,CAAS,UAAAP,IAAI,EAAI;AACf,cAAIA,IAAI,CAAC5B,QAAL,IAAiB4B,IAAI,CAAC5B,QAAL,CAAcwB,MAAnC,EAA2C;AACzC,mBACE,oBAAC,QAAD;AAAU,cAAA,GAAG,EAAEI,IAAI,CAAC1B,GAApB;AAAyB,cAAA,KAAK,EAAE0B,IAAI,CAAC1B,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGuB,IAAI,CAACG,IAAI,CAAC5B,QAAN,CADP,CADF;AAKD;;AACD,iBAAO,oBAAC,QAAD;AAAU,YAAA,GAAG,EAAE4B,IAAI,CAAC1B,GAApB;AAAyB,YAAA,KAAK,EAAE0B,IAAI,CAAC1B,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,SATD,CADe;AAAA,OAAjB;;AAWA,aACE,oBAAC,IAAD;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,mBAAmB,EAAE,KAAKM,KAAL,CAAWC,YAFlC;AAGE,QAAA,SAAS,MAHX;AAIE,QAAA,WAAW,EAAE,KAAKC,WAJpB;AAKE,QAAA,MAAM,EAAE,KAAKE,MALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGa,IAAI,CAAC,KAAKjB,KAAL,CAAWf,KAAZ,CAPP,CADF;AAWD;;;;EAzE0BN,S","sourcesContent":["import React, { Component } from 'react';\nimport Tree, { TreeNode } from '../../../components/uielements/tree';\n\nconst x = 3;\nconst y = 2;\nconst z = 1;\nconst gData = [];\n\nconst generateData = (_level, _preKey, _tns) => {\n  const preKey = _preKey || '0';\n  const tns = _tns || gData;\n\n  const children = [];\n  for (let i = 0; i < x; i++) {\n    const key = `${preKey}-${i}`;\n    tns.push({ title: key, key });\n    if (i < y) {\n      children.push(key);\n    }\n  }\n  if (_level < 0) {\n    return tns;\n  }\n  const level = _level - 1;\n  children.forEach((key, index) => {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\ngenerateData(z);\n\nexport default class extends Component {\n  state = {\n    gData,\n    expandedKeys: ['0-0', '0-0-0', '0-0-0-0']\n  };\n  onDragEnter = info => {};\n  onDrop = info => {\n    const dropKey = info.node.props.eventKey;\n    const dragKey = info.dragNode.props.eventKey;\n    const dropPos = info.node.props.pos.split('-');\n    const dropPosition =\n      info.dropPosition - Number(dropPos[dropPos.length - 1]);\n    const loop = (data, key, callback) => {\n      data.forEach((item, index, arr) => {\n        if (item.key === key) {\n          return callback(item, index, arr);\n        }\n        if (item.children) {\n          return loop(item.children, key, callback);\n        }\n      });\n    };\n    const data = [...this.state.gData];\n    let dragObj;\n    loop(data, dragKey, (item, index, arr) => {\n      arr.splice(index, 1);\n      dragObj = item;\n    });\n    if (info.dropToGap) {\n      let ar;\n      let i;\n      loop(data, dropKey, (item, index, arr) => {\n        ar = arr;\n        i = index;\n      });\n      if (dropPosition === -1) {\n        ar.splice(i, 0, dragObj);\n      } else {\n        ar.splice(i - 1, 0, dragObj);\n      }\n    } else {\n      loop(data, dropKey, item => {\n        item.children = item.children || [];\n        item.children.push(dragObj);\n      });\n    }\n    this.setState({\n      gData: data\n    });\n  };\n  render() {\n    const loop = data =>\n      data.map(item => {\n        if (item.children && item.children.length) {\n          return (\n            <TreeNode key={item.key} title={item.key}>\n              {loop(item.children)}\n            </TreeNode>\n          );\n        }\n        return <TreeNode key={item.key} title={item.key} />;\n      });\n    return (\n      <Tree\n        className=\"draggable-tree\"\n        defaultExpandedKeys={this.state.expandedKeys}\n        draggable\n        onDragEnter={this.onDragEnter}\n        onDrop={this.onDrop}\n      >\n        {loop(this.state.gData)}\n      </Tree>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}